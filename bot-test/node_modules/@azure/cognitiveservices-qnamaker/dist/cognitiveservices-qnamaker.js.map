{"version":3,"file":"cognitiveservices-qnamaker.js","sources":["../node_modules/tslib/tslib.es6.js","../src/models/index.ts","../src/models/mappers.ts","../src/models/endpointSettingsMappers.ts","../src/models/parameters.ts","../src/operations/endpointSettings.ts","../src/models/endpointKeysMappers.ts","../src/operations/endpointKeys.ts","../src/models/alterationsMappers.ts","../src/operations/alterations.ts","../src/models/knowledgebaseMappers.ts","../src/operations/knowledgebase.ts","../src/models/operationsMappers.ts","../src/operations/operations.ts","../src/qnAMakerClientContext.ts","../src/qnAMakerClient.ts"],"sourcesContent":["/*! *****************************************************************************\r\nCopyright (c) Microsoft Corporation.\r\n\r\nPermission to use, copy, modify, and/or distribute this software for any\r\npurpose with or without fee is hereby granted.\r\n\r\nTHE SOFTWARE IS PROVIDED \"AS IS\" AND THE AUTHOR DISCLAIMS ALL WARRANTIES WITH\r\nREGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY\r\nAND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY SPECIAL, DIRECT,\r\nINDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM\r\nLOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR\r\nOTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR\r\nPERFORMANCE OF THIS SOFTWARE.\r\n***************************************************************************** */\r\n/* global Reflect, Promise */\r\n\r\nvar extendStatics = function(d, b) {\r\n    extendStatics = Object.setPrototypeOf ||\r\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n    return extendStatics(d, b);\r\n};\r\n\r\nexport function __extends(d, b) {\r\n    extendStatics(d, b);\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n}\r\n\r\nexport var __assign = function() {\r\n    __assign = Object.assign || function __assign(t) {\r\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n            s = arguments[i];\r\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\r\n        }\r\n        return t;\r\n    }\r\n    return __assign.apply(this, arguments);\r\n}\r\n\r\nexport function __rest(s, e) {\r\n    var t = {};\r\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\r\n        t[p] = s[p];\r\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\r\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\r\n            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\r\n                t[p[i]] = s[p[i]];\r\n        }\r\n    return t;\r\n}\r\n\r\nexport function __decorate(decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n}\r\n\r\nexport function __param(paramIndex, decorator) {\r\n    return function (target, key) { decorator(target, key, paramIndex); }\r\n}\r\n\r\nexport function __metadata(metadataKey, metadataValue) {\r\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(metadataKey, metadataValue);\r\n}\r\n\r\nexport function __awaiter(thisArg, _arguments, P, generator) {\r\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n}\r\n\r\nexport function __generator(thisArg, body) {\r\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\r\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\r\n    function verb(n) { return function (v) { return step([n, v]); }; }\r\n    function step(op) {\r\n        if (f) throw new TypeError(\"Generator is already executing.\");\r\n        while (_) try {\r\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\r\n            if (y = 0, t) op = [op[0] & 2, t.value];\r\n            switch (op[0]) {\r\n                case 0: case 1: t = op; break;\r\n                case 4: _.label++; return { value: op[1], done: false };\r\n                case 5: _.label++; y = op[1]; op = [0]; continue;\r\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\r\n                default:\r\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\r\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\r\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\r\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\r\n                    if (t[2]) _.ops.pop();\r\n                    _.trys.pop(); continue;\r\n            }\r\n            op = body.call(thisArg, _);\r\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\r\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\r\n    }\r\n}\r\n\r\nexport function __createBinding(o, m, k, k2) {\r\n    if (k2 === undefined) k2 = k;\r\n    o[k2] = m[k];\r\n}\r\n\r\nexport function __exportStar(m, exports) {\r\n    for (var p in m) if (p !== \"default\" && !exports.hasOwnProperty(p)) exports[p] = m[p];\r\n}\r\n\r\nexport function __values(o) {\r\n    var s = typeof Symbol === \"function\" && Symbol.iterator, m = s && o[s], i = 0;\r\n    if (m) return m.call(o);\r\n    if (o && typeof o.length === \"number\") return {\r\n        next: function () {\r\n            if (o && i >= o.length) o = void 0;\r\n            return { value: o && o[i++], done: !o };\r\n        }\r\n    };\r\n    throw new TypeError(s ? \"Object is not iterable.\" : \"Symbol.iterator is not defined.\");\r\n}\r\n\r\nexport function __read(o, n) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\r\n    if (!m) return o;\r\n    var i = m.call(o), r, ar = [], e;\r\n    try {\r\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\r\n    }\r\n    catch (error) { e = { error: error }; }\r\n    finally {\r\n        try {\r\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\r\n        }\r\n        finally { if (e) throw e.error; }\r\n    }\r\n    return ar;\r\n}\r\n\r\nexport function __spread() {\r\n    for (var ar = [], i = 0; i < arguments.length; i++)\r\n        ar = ar.concat(__read(arguments[i]));\r\n    return ar;\r\n}\r\n\r\nexport function __spreadArrays() {\r\n    for (var s = 0, i = 0, il = arguments.length; i < il; i++) s += arguments[i].length;\r\n    for (var r = Array(s), k = 0, i = 0; i < il; i++)\r\n        for (var a = arguments[i], j = 0, jl = a.length; j < jl; j++, k++)\r\n            r[k] = a[j];\r\n    return r;\r\n};\r\n\r\nexport function __await(v) {\r\n    return this instanceof __await ? (this.v = v, this) : new __await(v);\r\n}\r\n\r\nexport function __asyncGenerator(thisArg, _arguments, generator) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var g = generator.apply(thisArg, _arguments || []), i, q = [];\r\n    return i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i;\r\n    function verb(n) { if (g[n]) i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; }\r\n    function resume(n, v) { try { step(g[n](v)); } catch (e) { settle(q[0][3], e); } }\r\n    function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r); }\r\n    function fulfill(value) { resume(\"next\", value); }\r\n    function reject(value) { resume(\"throw\", value); }\r\n    function settle(f, v) { if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]); }\r\n}\r\n\r\nexport function __asyncDelegator(o) {\r\n    var i, p;\r\n    return i = {}, verb(\"next\"), verb(\"throw\", function (e) { throw e; }), verb(\"return\"), i[Symbol.iterator] = function () { return this; }, i;\r\n    function verb(n, f) { i[n] = o[n] ? function (v) { return (p = !p) ? { value: __await(o[n](v)), done: n === \"return\" } : f ? f(v) : v; } : f; }\r\n}\r\n\r\nexport function __asyncValues(o) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var m = o[Symbol.asyncIterator], i;\r\n    return m ? m.call(o) : (o = typeof __values === \"function\" ? __values(o) : o[Symbol.iterator](), i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i);\r\n    function verb(n) { i[n] = o[n] && function (v) { return new Promise(function (resolve, reject) { v = o[n](v), settle(resolve, reject, v.done, v.value); }); }; }\r\n    function settle(resolve, reject, d, v) { Promise.resolve(v).then(function(v) { resolve({ value: v, done: d }); }, reject); }\r\n}\r\n\r\nexport function __makeTemplateObject(cooked, raw) {\r\n    if (Object.defineProperty) { Object.defineProperty(cooked, \"raw\", { value: raw }); } else { cooked.raw = raw; }\r\n    return cooked;\r\n};\r\n\r\nexport function __importStar(mod) {\r\n    if (mod && mod.__esModule) return mod;\r\n    var result = {};\r\n    if (mod != null) for (var k in mod) if (Object.hasOwnProperty.call(mod, k)) result[k] = mod[k];\r\n    result.default = mod;\r\n    return result;\r\n}\r\n\r\nexport function __importDefault(mod) {\r\n    return (mod && mod.__esModule) ? mod : { default: mod };\r\n}\r\n\r\nexport function __classPrivateFieldGet(receiver, privateMap) {\r\n    if (!privateMap.has(receiver)) {\r\n        throw new TypeError(\"attempted to get private field on non-instance\");\r\n    }\r\n    return privateMap.get(receiver);\r\n}\r\n\r\nexport function __classPrivateFieldSet(receiver, privateMap, value) {\r\n    if (!privateMap.has(receiver)) {\r\n        throw new TypeError(\"attempted to set private field on non-instance\");\r\n    }\r\n    privateMap.set(receiver, value);\r\n    return value;\r\n}\r\n","/*\n * Copyright (c) Microsoft Corporation.\n * Licensed under the MIT License.\n *\n * Code generated by Microsoft (R) AutoRest Code Generator.\n * Changes may cause incorrect behavior and will be lost if the code is regenerated.\n */\n\n\nimport * as msRest from \"@azure/ms-rest-js\";\n\n/**\n * Input to create KB.\n */\nexport interface CreateKbInputDTO {\n  /**\n   * List of QNA to be added to the index. Ids are generated by the service and should be omitted.\n   */\n  qnaList?: QnADTO[];\n  /**\n   * List of URLs to be added to knowledgebase.\n   */\n  urls?: string[];\n  /**\n   * List of files to be added to knowledgebase.\n   */\n  files?: FileDTO[];\n}\n\n/**\n * An instance of CreateKbInputDTO for add operation\n */\nexport interface UpdateKbOperationDTOAdd extends CreateKbInputDTO {\n}\n\n/**\n * PATCH body schema of Delete Operation in UpdateKb\n */\nexport interface DeleteKbContentsDTO {\n  /**\n   * List of Qna Ids to be deleted\n   */\n  ids?: number[];\n  /**\n   * List of sources to be deleted from knowledgebase.\n   */\n  sources?: string[];\n}\n\n/**\n * An instance of DeleteKbContentsDTO for delete Operation\n */\nexport interface UpdateKbOperationDTODelete extends DeleteKbContentsDTO {\n}\n\n/**\n * PATCH body schema for Update operation in Update Kb\n */\nexport interface UpdateKbContentsDTO {\n  /**\n   * Friendly name for the knowledgebase.\n   */\n  name?: string;\n  /**\n   * List of Q-A (UpdateQnaDTO) to be added to the knowledgebase.\n   */\n  qnaList?: UpdateQnaDTO[];\n  /**\n   * List of existing URLs to be refreshed. The content will be extracted again and re-indexed.\n   */\n  urls?: string[];\n  /**\n   * Default answer sent to user if no good match is found in the KB.\n   */\n  defaultAnswer?: string;\n}\n\n/**\n * An instance of UpdateKbContentsDTO for Update Operation\n */\nexport interface UpdateKbOperationDTOUpdate extends UpdateKbContentsDTO {\n}\n\n/**\n * Contains list of QnAs to be updated\n */\nexport interface UpdateKbOperationDTO {\n  /**\n   * An instance of CreateKbInputDTO for add operation\n   */\n  add?: UpdateKbOperationDTOAdd;\n  /**\n   * An instance of DeleteKbContentsDTO for delete Operation\n   */\n  deleteProperty?: UpdateKbOperationDTODelete;\n  /**\n   * An instance of UpdateKbContentsDTO for Update Operation\n   */\n  update?: UpdateKbOperationDTOUpdate;\n  /**\n   * Enable hierarchical extraction of Q-A from files and urls. The value set during KB creation\n   * will be used if this field is not present.\n   */\n  enableHierarchicalExtraction?: boolean;\n  /**\n   * Text string to be used as the answer in any Q-A which has no extracted answer from the\n   * document but has a hierarchy. Required when EnableHierarchicalExtraction field is set to True.\n   */\n  defaultAnswerUsedForExtraction?: string;\n}\n\n/**\n * PATCH Body schema for Update Kb which contains list of questions to be added and deleted\n */\nexport interface UpdateQuestionsDTO {\n  /**\n   * List of questions to be added\n   */\n  add?: string[];\n  /**\n   * List of questions to be deleted.\n   */\n  deleteProperty?: string[];\n}\n\n/**\n * List of questions associated with the answer.\n */\nexport interface UpdateQnaDTOQuestions extends UpdateQuestionsDTO {\n}\n\n/**\n * PATCH Body schema to represent list of Metadata to be updated\n */\nexport interface UpdateMetadataDTO {\n  /**\n   * List of Metadata associated with answer to be deleted\n   */\n  deleteProperty?: MetadataDTO[];\n  /**\n   * List of metadata associated with answer to be added\n   */\n  add?: MetadataDTO[];\n}\n\n/**\n * List of metadata associated with the answer to be updated\n */\nexport interface UpdateQnaDTOMetadata extends UpdateMetadataDTO {\n}\n\n/**\n * Update Body schema to represent context to be updated\n */\nexport interface UpdateContextDTO {\n  /**\n   * List of prompts associated with qna to be deleted\n   */\n  promptsToDelete?: number[];\n  /**\n   * List of prompts to be added to the qna.\n   */\n  promptsToAdd?: PromptDTO[];\n  /**\n   * To mark if a prompt is relevant only with a previous question or not.\n   * true - Do not include this QnA as search result for queries without context\n   * false - ignores context and includes this QnA in search result\n   */\n  isContextOnly?: boolean;\n}\n\n/**\n * Context associated with Qna to be updated.\n */\nexport interface UpdateQnaDTOContext extends UpdateContextDTO {\n}\n\n/**\n * PATCH Body schema for Update Qna List\n */\nexport interface UpdateQnaDTO {\n  /**\n   * Unique id for the Q-A\n   */\n  id?: number;\n  /**\n   * Answer text\n   */\n  answer?: string;\n  /**\n   * Source from which Q-A was indexed. eg.\n   * https://docs.microsoft.com/en-us/azure/cognitive-services/QnAMaker/FAQs\n   */\n  source?: string;\n  /**\n   * List of questions associated with the answer.\n   */\n  questions?: UpdateQnaDTOQuestions;\n  /**\n   * List of metadata associated with the answer to be updated\n   */\n  metadata?: UpdateQnaDTOMetadata;\n  /**\n   * Context associated with Qna to be updated.\n   */\n  context?: UpdateQnaDTOContext;\n}\n\n/**\n * Name - value pair of metadata.\n */\nexport interface MetadataDTO {\n  /**\n   * Metadata name.\n   */\n  name: string;\n  /**\n   * Metadata value.\n   */\n  value: string;\n}\n\n/**\n * Q-A object.\n */\nexport interface QnADTO {\n  /**\n   * Unique id for the Q-A.\n   */\n  id?: number;\n  /**\n   * Answer text\n   */\n  answer: string;\n  /**\n   * Source from which Q-A was indexed. eg.\n   * https://docs.microsoft.com/en-us/azure/cognitive-services/QnAMaker/FAQs\n   */\n  source?: string;\n  /**\n   * List of questions associated with the answer.\n   */\n  questions: string[];\n  /**\n   * List of metadata associated with the answer.\n   */\n  metadata?: MetadataDTO[];\n  /**\n   * Context of a QnA\n   */\n  context?: QnADTOContext;\n  /**\n   * Timestamp when the QnA was last updated.\n   */\n  lastUpdatedTimestamp?: string;\n}\n\n/**\n * QnADTO - Either QnaId or QnADTO needs to be present in a PromptDTO object\n */\nexport interface PromptDTOQna extends QnADTO {\n}\n\n/**\n * Prompt for an answer.\n */\nexport interface PromptDTO {\n  /**\n   * Index of the prompt - used in ordering of the prompts\n   */\n  displayOrder?: number;\n  /**\n   * Qna id corresponding to the prompt - if QnaId is present, QnADTO object is ignored.\n   */\n  qnaId?: number;\n  /**\n   * QnADTO - Either QnaId or QnADTO needs to be present in a PromptDTO object\n   */\n  qna?: PromptDTOQna;\n  /**\n   * Text displayed to represent a follow up question prompt\n   */\n  displayText?: string;\n}\n\n/**\n * Context associated with Qna.\n */\nexport interface ContextDTO {\n  /**\n   * To mark if a prompt is relevant only with a previous question or not.\n   * true - Do not include this QnA as search result for queries without context\n   * false - ignores context and includes this QnA in search result\n   */\n  isContextOnly?: boolean;\n  /**\n   * List of prompts associated with the answer.\n   */\n  prompts?: PromptDTO[];\n}\n\n/**\n * Context of a QnA\n */\nexport interface QnADTOContext extends ContextDTO {\n}\n\n/**\n * DTO to hold details of uploaded files.\n */\nexport interface FileDTO {\n  /**\n   * File name. Supported file types are \".tsv\", \".pdf\", \".txt\", \".docx\", \".xlsx\".\n   */\n  fileName: string;\n  /**\n   * Public URI of the file.\n   */\n  fileUri: string;\n}\n\n/**\n * List of QnADTO\n */\nexport interface QnADocumentsDTO {\n  /**\n   * List of answers.\n   */\n  qnaDocuments?: QnADTO[];\n}\n\n/**\n * Post body schema for CreateKb operation.\n */\nexport interface CreateKbDTO {\n  /**\n   * Friendly name for the knowledgebase.\n   */\n  name: string;\n  /**\n   * List of Q-A (QnADTO) to be added to the knowledgebase. Q-A Ids are assigned by the service and\n   * should be omitted.\n   */\n  qnaList?: QnADTO[];\n  /**\n   * List of URLs to be used for extracting Q-A.\n   */\n  urls?: string[];\n  /**\n   * List of files from which to Extract Q-A.\n   */\n  files?: FileDTO[];\n  /**\n   * Enable hierarchical extraction of Q-A from files and urls. Value to be considered False if\n   * this field is not present.\n   */\n  enableHierarchicalExtraction?: boolean;\n  /**\n   * Text string to be used as the answer in any Q-A which has no extracted answer from the\n   * document but has a hierarchy. Required when EnableHierarchicalExtraction field is set to True.\n   */\n  defaultAnswerUsedForExtraction?: string;\n  /**\n   * Language of the knowledgebase. Please find the list of supported languages <a\n   * href=\"https://aka.ms/qnamaker-languages#languages-supported\" target=\"_blank\">here</a>.\n   */\n  language?: string;\n  /**\n   * Set to true to enable creating KBs in different languages for the same resource.\n   */\n  enableMultipleLanguages?: boolean;\n  /**\n   * Default answer sent to user if no good match is found in the KB.\n   */\n  defaultAnswer?: string;\n}\n\n/**\n * Post body schema for Replace KB operation.\n */\nexport interface ReplaceKbDTO {\n  /**\n   * List of Q-A (QnADTO) to be added to the knowledgebase. Q-A Ids are assigned by the service and\n   * should be omitted.\n   */\n  qnAList: QnADTO[];\n}\n\n/**\n * The error object. As per Microsoft One API guidelines -\n * https://github.com/Microsoft/api-guidelines/blob/vNext/Guidelines.md#7102-error-condition-responses.\n */\nexport interface ErrorModel {\n  /**\n   * One of a server-defined set of error codes. Possible values include: 'BadArgument',\n   * 'Forbidden', 'NotFound', 'KbNotFound', 'Unauthorized', 'Unspecified', 'EndpointKeysError',\n   * 'QuotaExceeded', 'QnaRuntimeError', 'SKULimitExceeded', 'OperationNotFound', 'ServiceError',\n   * 'ValidationFailure', 'ExtractionFailure'\n   */\n  code: ErrorCodeType;\n  /**\n   * A human-readable representation of the error.\n   */\n  message?: string;\n  /**\n   * The target of the error.\n   */\n  target?: string;\n  /**\n   * An array of details about specific errors that led to this reported error.\n   */\n  details?: ErrorModel[];\n  /**\n   * An object containing more specific information than the current object about the error.\n   */\n  innerError?: InnerErrorModel;\n}\n\n/**\n * The error object.\n */\nexport interface ErrorResponseError extends ErrorModel {\n}\n\n/**\n * Error response. As per Microsoft One API guidelines -\n * https://github.com/Microsoft/api-guidelines/blob/vNext/Guidelines.md#7102-error-condition-responses.\n */\nexport interface ErrorResponse {\n  /**\n   * The error object.\n   */\n  error?: ErrorResponseError;\n}\n\n/**\n * An object containing more specific information about the error. As per Microsoft One API\n * guidelines -\n * https://github.com/Microsoft/api-guidelines/blob/vNext/Guidelines.md#7102-error-condition-responses.\n */\nexport interface InnerErrorModel {\n  /**\n   * A more specific error code than was provided by the containing error.\n   */\n  code?: string;\n  /**\n   * An object containing more specific information than the current object about the error.\n   */\n  innerError?: InnerErrorModel;\n}\n\n/**\n * Record to track long running operation.\n */\nexport interface Operation {\n  /**\n   * Operation state. Possible values include: 'Failed', 'NotStarted', 'Running', 'Succeeded'\n   */\n  operationState?: OperationStateType;\n  /**\n   * Timestamp when the operation was created.\n   */\n  createdTimestamp?: string;\n  /**\n   * Timestamp when the current state was entered.\n   */\n  lastActionTimestamp?: string;\n  /**\n   * Relative URI to the target resource location for completed resources.\n   */\n  resourceLocation?: string;\n  /**\n   * User Id\n   */\n  userId?: string;\n  /**\n   * Operation Id.\n   */\n  operationId?: string;\n  /**\n   * Error details in case of failures.\n   */\n  errorResponse?: ErrorResponse;\n}\n\n/**\n * Response schema for CreateKb operation.\n */\nexport interface KnowledgebaseDTO {\n  /**\n   * Unique id that identifies a knowledgebase.\n   */\n  id?: string;\n  /**\n   * URL host name at which the knowledgebase is hosted.\n   */\n  hostName?: string;\n  /**\n   * Time stamp at which the knowledgebase was last accessed (UTC).\n   */\n  lastAccessedTimestamp?: string;\n  /**\n   * Time stamp at which the knowledgebase was last modified (UTC).\n   */\n  lastChangedTimestamp?: string;\n  /**\n   * Time stamp at which the knowledgebase was last published (UTC).\n   */\n  lastPublishedTimestamp?: string;\n  /**\n   * Friendly name of the knowledgebase.\n   */\n  name?: string;\n  /**\n   * User who created / owns the knowledgebase.\n   */\n  userId?: string;\n  /**\n   * URL sources from which Q-A were extracted and added to the knowledgebase.\n   */\n  urls?: string[];\n  /**\n   * Custom sources from which Q-A were extracted or explicitly added to the knowledgebase.\n   */\n  sources?: string[];\n}\n\n/**\n * Collection of knowledgebases owned by a user.\n */\nexport interface KnowledgebasesDTO {\n  /**\n   * Collection of knowledgebase records.\n   */\n  knowledgebases?: KnowledgebaseDTO[];\n}\n\n/**\n * Active Learning settings of the endpoint.\n */\nexport interface ActiveLearningSettingsDTO {\n  /**\n   * True/False string providing Active Learning\n   */\n  enable?: string;\n}\n\n/**\n * Active Learning settings of the endpoint.\n */\nexport interface EndpointSettingsDTOActiveLearning extends ActiveLearningSettingsDTO {\n}\n\n/**\n * Endpoint settings.\n */\nexport interface EndpointSettingsDTO {\n  /**\n   * Active Learning settings of the endpoint.\n   */\n  activeLearning?: EndpointSettingsDTOActiveLearning;\n}\n\n/**\n * Collection of words that are synonyms.\n */\nexport interface AlterationsDTO {\n  /**\n   * Words that are synonymous with each other.\n   */\n  alterations: string[];\n}\n\n/**\n * Collection of word alterations.\n */\nexport interface WordAlterationsDTO {\n  /**\n   * Collection of word alterations.\n   */\n  wordAlterations: AlterationsDTO[];\n}\n\n/**\n * Schema for EndpointKeys generate/refresh operations.\n */\nexport interface EndpointKeysDTO {\n  /**\n   * Primary Access Key.\n   */\n  primaryEndpointKey?: string;\n  /**\n   * Secondary Access Key.\n   */\n  secondaryEndpointKey?: string;\n  /**\n   * Current version of runtime.\n   */\n  installedVersion?: string;\n  /**\n   * Latest version of runtime.\n   */\n  lastStableVersion?: string;\n  /**\n   * Language setting of runtime.\n   */\n  language?: string;\n}\n\n/**\n * Context object with previous QnA's information.\n */\nexport interface QueryContextDTO {\n  /**\n   * Previous QnA Id - qnaId of the top result.\n   */\n  previousQnaId?: number;\n  /**\n   * Previous user query.\n   */\n  previousUserQuery?: string;\n}\n\n/**\n * Context object with previous QnA's information.\n */\nexport interface QueryDTOContext extends QueryContextDTO {\n}\n\n/**\n * To configure Answer span prediction feature.\n */\nexport interface AnswerSpanRequestDTO {\n  /**\n   * Enable or Disable Answer Span prediction.\n   */\n  enable?: boolean;\n  /**\n   * Minimum threshold score required to include an answer span.\n   */\n  scoreThreshold?: number;\n  /**\n   * Number of Top answers to be considered for span prediction.\n   */\n  topAnswersWithSpan?: number;\n}\n\n/**\n * To configure Answer span prediction feature.\n */\nexport interface QueryDTOAnswerSpanRequest extends AnswerSpanRequestDTO {\n}\n\n/**\n * POST body schema to query the knowledgebase.\n */\nexport interface QueryDTO {\n  /**\n   * Exact qnaId to fetch from the knowledgebase, this field takes priority over question.\n   */\n  qnaId?: string;\n  /**\n   * User question to query against the knowledge base.\n   */\n  question?: string;\n  /**\n   * Max number of answers to be returned for the question.\n   */\n  top?: number;\n  /**\n   * Unique identifier for the user.\n   */\n  userId?: string;\n  /**\n   * Query against the test index.\n   */\n  isTest?: boolean;\n  /**\n   * Minimum threshold score for answers.\n   */\n  scoreThreshold?: number;\n  /**\n   * Context object with previous QnA's information.\n   */\n  context?: QueryDTOContext;\n  /**\n   * Optional field. Set to 'QuestionOnly' for using a question only Ranker.\n   */\n  rankerType?: string;\n  /**\n   * Find QnAs that are associated with the given list of metadata.\n   */\n  strictFilters?: MetadataDTO[];\n  /**\n   * Optional field. Set to 'OR' for using OR operation for strict filters. Possible values\n   * include: 'AND', 'OR'\n   */\n  strictFiltersCompoundOperationType?: StrictFiltersCompoundOperationType;\n  /**\n   * To configure Answer span prediction feature.\n   */\n  answerSpanRequest?: QueryDTOAnswerSpanRequest;\n}\n\n/**\n * Context object of the QnA\n */\nexport interface QnASearchResultContext extends ContextDTO {\n}\n\n/**\n * Answer span object of QnA.\n */\nexport interface AnswerSpanResponseDTO {\n  /**\n   * Predicted text of answer span.\n   */\n  text?: string;\n  /**\n   * Predicted score of answer span.\n   */\n  score?: number;\n  /**\n   * Start index of answer span in answer.\n   */\n  startIndex?: number;\n  /**\n   * End index of answer span in answer.\n   */\n  endIndex?: number;\n}\n\n/**\n * Answer span object of QnA with respect to user's question.\n */\nexport interface QnASearchResultAnswerSpan extends AnswerSpanResponseDTO {\n}\n\n/**\n * Represents Search Result.\n */\nexport interface QnASearchResult {\n  /**\n   * List of questions.\n   */\n  questions?: string[];\n  /**\n   * Answer.\n   */\n  answer?: string;\n  /**\n   * Search result score.\n   */\n  score?: number;\n  /**\n   * Id of the QnA result.\n   */\n  id?: number;\n  /**\n   * Source of QnA result.\n   */\n  source?: string;\n  /**\n   * List of metadata.\n   */\n  metadata?: MetadataDTO[];\n  /**\n   * Context object of the QnA\n   */\n  context?: QnASearchResultContext;\n  /**\n   * Answer span object of QnA with respect to user's question.\n   */\n  answerSpan?: QnASearchResultAnswerSpan;\n}\n\n/**\n * Represents List of Question Answers.\n */\nexport interface QnASearchResultList {\n  /**\n   * Represents Search Result list.\n   */\n  answers?: QnASearchResult[];\n}\n\n/**\n * Active learning feedback record.\n */\nexport interface FeedbackRecordDTO {\n  /**\n   * Unique identifier for the user.\n   */\n  userId?: string;\n  /**\n   * The suggested question being provided as feedback.\n   */\n  userQuestion?: string;\n  /**\n   * The qnaId for which the suggested question is provided as feedback.\n   */\n  qnaId?: number;\n}\n\n/**\n * Active learning feedback records.\n */\nexport interface FeedbackRecordsDTO {\n  /**\n   * List of feedback records.\n   */\n  feedbackRecords?: FeedbackRecordDTO[];\n}\n\n/**\n * Optional Parameters.\n */\nexport interface KnowledgebaseDownloadOptionalParams extends msRest.RequestOptionsBase {\n  /**\n   * The source property filter to apply.\n   */\n  source?: string;\n  /**\n   * The last changed status property filter to apply.\n   */\n  changedSince?: string;\n}\n\n/**\n * Defines headers for GetDetails operation.\n */\nexport interface OperationsGetDetailsHeaders {\n  /**\n   * Indicates how long the client should wait before sending a follow up request. The header will\n   * be present only if the operation is running or has not started yet.\n   */\n  retryAfter: number;\n}\n\n/**\n * Defines headers for Update operation.\n */\nexport interface KnowledgebaseUpdateHeaders {\n  /**\n   * Relative URI to the target location of the asynchronous operation. Client should poll this\n   * resource to get status of the operation.\n   */\n  location: string;\n}\n\n/**\n * Defines values for ErrorCodeType.\n * Possible values include: 'BadArgument', 'Forbidden', 'NotFound', 'KbNotFound', 'Unauthorized',\n * 'Unspecified', 'EndpointKeysError', 'QuotaExceeded', 'QnaRuntimeError', 'SKULimitExceeded',\n * 'OperationNotFound', 'ServiceError', 'ValidationFailure', 'ExtractionFailure'\n * @readonly\n * @enum {string}\n */\nexport type ErrorCodeType = 'BadArgument' | 'Forbidden' | 'NotFound' | 'KbNotFound' | 'Unauthorized' | 'Unspecified' | 'EndpointKeysError' | 'QuotaExceeded' | 'QnaRuntimeError' | 'SKULimitExceeded' | 'OperationNotFound' | 'ServiceError' | 'ValidationFailure' | 'ExtractionFailure';\n\n/**\n * Defines values for OperationStateType.\n * Possible values include: 'Failed', 'NotStarted', 'Running', 'Succeeded'\n * @readonly\n * @enum {string}\n */\nexport type OperationStateType = 'Failed' | 'NotStarted' | 'Running' | 'Succeeded';\n\n/**\n * Defines values for StrictFiltersCompoundOperationType.\n * Possible values include: 'AND', 'OR'\n * @readonly\n * @enum {string}\n */\nexport type StrictFiltersCompoundOperationType = 'AND' | 'OR';\n\n/**\n * Defines values for EnvironmentType.\n * Possible values include: 'Prod', 'Test'\n * @readonly\n * @enum {string}\n */\nexport type EnvironmentType = 'Prod' | 'Test';\n\n/**\n * Contains response data for the getSettings operation.\n */\nexport type EndpointSettingsGetSettingsResponse = EndpointSettingsDTO & {\n  /**\n   * The underlying HTTP response.\n   */\n  _response: msRest.HttpResponse & {\n      /**\n       * The response body as text (string format)\n       */\n      bodyAsText: string;\n\n      /**\n       * The response body as parsed JSON or XML\n       */\n      parsedBody: EndpointSettingsDTO;\n    };\n};\n\n/**\n * Contains response data for the getKeys operation.\n */\nexport type EndpointKeysGetKeysResponse = EndpointKeysDTO & {\n  /**\n   * The underlying HTTP response.\n   */\n  _response: msRest.HttpResponse & {\n      /**\n       * The response body as text (string format)\n       */\n      bodyAsText: string;\n\n      /**\n       * The response body as parsed JSON or XML\n       */\n      parsedBody: EndpointKeysDTO;\n    };\n};\n\n/**\n * Contains response data for the refreshKeys operation.\n */\nexport type EndpointKeysRefreshKeysResponse = EndpointKeysDTO & {\n  /**\n   * The underlying HTTP response.\n   */\n  _response: msRest.HttpResponse & {\n      /**\n       * The response body as text (string format)\n       */\n      bodyAsText: string;\n\n      /**\n       * The response body as parsed JSON or XML\n       */\n      parsedBody: EndpointKeysDTO;\n    };\n};\n\n/**\n * Contains response data for the get operation.\n */\nexport type AlterationsGetResponse = WordAlterationsDTO & {\n  /**\n   * The underlying HTTP response.\n   */\n  _response: msRest.HttpResponse & {\n      /**\n       * The response body as text (string format)\n       */\n      bodyAsText: string;\n\n      /**\n       * The response body as parsed JSON or XML\n       */\n      parsedBody: WordAlterationsDTO;\n    };\n};\n\n/**\n * Contains response data for the getAlterationsForKb operation.\n */\nexport type AlterationsGetAlterationsForKbResponse = WordAlterationsDTO & {\n  /**\n   * The underlying HTTP response.\n   */\n  _response: msRest.HttpResponse & {\n      /**\n       * The response body as text (string format)\n       */\n      bodyAsText: string;\n\n      /**\n       * The response body as parsed JSON or XML\n       */\n      parsedBody: WordAlterationsDTO;\n    };\n};\n\n/**\n * Contains response data for the listAll operation.\n */\nexport type KnowledgebaseListAllResponse = KnowledgebasesDTO & {\n  /**\n   * The underlying HTTP response.\n   */\n  _response: msRest.HttpResponse & {\n      /**\n       * The response body as text (string format)\n       */\n      bodyAsText: string;\n\n      /**\n       * The response body as parsed JSON or XML\n       */\n      parsedBody: KnowledgebasesDTO;\n    };\n};\n\n/**\n * Contains response data for the getDetails operation.\n */\nexport type KnowledgebaseGetDetailsResponse = KnowledgebaseDTO & {\n  /**\n   * The underlying HTTP response.\n   */\n  _response: msRest.HttpResponse & {\n      /**\n       * The response body as text (string format)\n       */\n      bodyAsText: string;\n\n      /**\n       * The response body as parsed JSON or XML\n       */\n      parsedBody: KnowledgebaseDTO;\n    };\n};\n\n/**\n * Contains response data for the update operation.\n */\nexport type KnowledgebaseUpdateResponse = Operation & KnowledgebaseUpdateHeaders & {\n  /**\n   * The underlying HTTP response.\n   */\n  _response: msRest.HttpResponse & {\n      /**\n       * The parsed HTTP response headers.\n       */\n      parsedHeaders: KnowledgebaseUpdateHeaders;\n\n      /**\n       * The response body as text (string format)\n       */\n      bodyAsText: string;\n\n      /**\n       * The response body as parsed JSON or XML\n       */\n      parsedBody: Operation;\n    };\n};\n\n/**\n * Contains response data for the create operation.\n */\nexport type KnowledgebaseCreateResponse = Operation & {\n  /**\n   * The underlying HTTP response.\n   */\n  _response: msRest.HttpResponse & {\n      /**\n       * The response body as text (string format)\n       */\n      bodyAsText: string;\n\n      /**\n       * The response body as parsed JSON or XML\n       */\n      parsedBody: Operation;\n    };\n};\n\n/**\n * Contains response data for the download operation.\n */\nexport type KnowledgebaseDownloadResponse = QnADocumentsDTO & {\n  /**\n   * The underlying HTTP response.\n   */\n  _response: msRest.HttpResponse & {\n      /**\n       * The response body as text (string format)\n       */\n      bodyAsText: string;\n\n      /**\n       * The response body as parsed JSON or XML\n       */\n      parsedBody: QnADocumentsDTO;\n    };\n};\n\n/**\n * Contains response data for the generateAnswer operation.\n */\nexport type KnowledgebaseGenerateAnswerResponse = QnASearchResultList & {\n  /**\n   * The underlying HTTP response.\n   */\n  _response: msRest.HttpResponse & {\n      /**\n       * The response body as text (string format)\n       */\n      bodyAsText: string;\n\n      /**\n       * The response body as parsed JSON or XML\n       */\n      parsedBody: QnASearchResultList;\n    };\n};\n\n/**\n * Contains response data for the getDetails operation.\n */\nexport type OperationsGetDetailsResponse = Operation & OperationsGetDetailsHeaders & {\n  /**\n   * The underlying HTTP response.\n   */\n  _response: msRest.HttpResponse & {\n      /**\n       * The parsed HTTP response headers.\n       */\n      parsedHeaders: OperationsGetDetailsHeaders;\n\n      /**\n       * The response body as text (string format)\n       */\n      bodyAsText: string;\n\n      /**\n       * The response body as parsed JSON or XML\n       */\n      parsedBody: Operation;\n    };\n};\n","/*\n * Copyright (c) Microsoft Corporation.\n * Licensed under the MIT License.\n *\n * Code generated by Microsoft (R) AutoRest Code Generator.\n * Changes may cause incorrect behavior and will be lost if the code is regenerated.\n */\n\nimport * as msRest from \"@azure/ms-rest-js\";\n\n\nexport const CreateKbInputDTO: msRest.CompositeMapper = {\n  serializedName: \"CreateKbInputDTO\",\n  type: {\n    name: \"Composite\",\n    className: \"CreateKbInputDTO\",\n    modelProperties: {\n      qnaList: {\n        serializedName: \"qnaList\",\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"Composite\",\n              className: \"QnADTO\"\n            }\n          }\n        }\n      },\n      urls: {\n        serializedName: \"urls\",\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"String\"\n            }\n          }\n        }\n      },\n      files: {\n        serializedName: \"files\",\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"Composite\",\n              className: \"FileDTO\"\n            }\n          }\n        }\n      }\n    }\n  }\n};\n\nexport const UpdateKbOperationDTOAdd: msRest.CompositeMapper = {\n  serializedName: \"UpdateKbOperationDTO_add\",\n  type: {\n    name: \"Composite\",\n    className: \"UpdateKbOperationDTOAdd\",\n    modelProperties: {\n      ...CreateKbInputDTO.type.modelProperties\n    }\n  }\n};\n\nexport const DeleteKbContentsDTO: msRest.CompositeMapper = {\n  serializedName: \"DeleteKbContentsDTO\",\n  type: {\n    name: \"Composite\",\n    className: \"DeleteKbContentsDTO\",\n    modelProperties: {\n      ids: {\n        serializedName: \"ids\",\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"Number\"\n            }\n          }\n        }\n      },\n      sources: {\n        serializedName: \"sources\",\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"String\"\n            }\n          }\n        }\n      }\n    }\n  }\n};\n\nexport const UpdateKbOperationDTODelete: msRest.CompositeMapper = {\n  serializedName: \"UpdateKbOperationDTO_delete\",\n  type: {\n    name: \"Composite\",\n    className: \"UpdateKbOperationDTODelete\",\n    modelProperties: {\n      ...DeleteKbContentsDTO.type.modelProperties\n    }\n  }\n};\n\nexport const UpdateKbContentsDTO: msRest.CompositeMapper = {\n  serializedName: \"UpdateKbContentsDTO\",\n  type: {\n    name: \"Composite\",\n    className: \"UpdateKbContentsDTO\",\n    modelProperties: {\n      name: {\n        serializedName: \"name\",\n        type: {\n          name: \"String\"\n        }\n      },\n      qnaList: {\n        serializedName: \"qnaList\",\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"Composite\",\n              className: \"UpdateQnaDTO\"\n            }\n          }\n        }\n      },\n      urls: {\n        serializedName: \"urls\",\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"String\"\n            }\n          }\n        }\n      },\n      defaultAnswer: {\n        serializedName: \"defaultAnswer\",\n        constraints: {\n          MaxLength: 300,\n          MinLength: 1\n        },\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const UpdateKbOperationDTOUpdate: msRest.CompositeMapper = {\n  serializedName: \"UpdateKbOperationDTO_update\",\n  type: {\n    name: \"Composite\",\n    className: \"UpdateKbOperationDTOUpdate\",\n    modelProperties: {\n      ...UpdateKbContentsDTO.type.modelProperties\n    }\n  }\n};\n\nexport const UpdateKbOperationDTO: msRest.CompositeMapper = {\n  serializedName: \"UpdateKbOperationDTO\",\n  type: {\n    name: \"Composite\",\n    className: \"UpdateKbOperationDTO\",\n    modelProperties: {\n      add: {\n        serializedName: \"add\",\n        type: {\n          name: \"Composite\",\n          className: \"UpdateKbOperationDTOAdd\"\n        }\n      },\n      deleteProperty: {\n        serializedName: \"delete\",\n        type: {\n          name: \"Composite\",\n          className: \"UpdateKbOperationDTODelete\"\n        }\n      },\n      update: {\n        serializedName: \"update\",\n        type: {\n          name: \"Composite\",\n          className: \"UpdateKbOperationDTOUpdate\"\n        }\n      },\n      enableHierarchicalExtraction: {\n        serializedName: \"enableHierarchicalExtraction\",\n        type: {\n          name: \"Boolean\"\n        }\n      },\n      defaultAnswerUsedForExtraction: {\n        serializedName: \"defaultAnswerUsedForExtraction\",\n        constraints: {\n          MaxLength: 300,\n          MinLength: 1\n        },\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const UpdateQuestionsDTO: msRest.CompositeMapper = {\n  serializedName: \"UpdateQuestionsDTO\",\n  type: {\n    name: \"Composite\",\n    className: \"UpdateQuestionsDTO\",\n    modelProperties: {\n      add: {\n        serializedName: \"add\",\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"String\"\n            }\n          }\n        }\n      },\n      deleteProperty: {\n        serializedName: \"delete\",\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"String\"\n            }\n          }\n        }\n      }\n    }\n  }\n};\n\nexport const UpdateQnaDTOQuestions: msRest.CompositeMapper = {\n  serializedName: \"UpdateQnaDTO_questions\",\n  type: {\n    name: \"Composite\",\n    className: \"UpdateQnaDTOQuestions\",\n    modelProperties: {\n      ...UpdateQuestionsDTO.type.modelProperties\n    }\n  }\n};\n\nexport const UpdateMetadataDTO: msRest.CompositeMapper = {\n  serializedName: \"UpdateMetadataDTO\",\n  type: {\n    name: \"Composite\",\n    className: \"UpdateMetadataDTO\",\n    modelProperties: {\n      deleteProperty: {\n        serializedName: \"delete\",\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"Composite\",\n              className: \"MetadataDTO\"\n            }\n          }\n        }\n      },\n      add: {\n        serializedName: \"add\",\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"Composite\",\n              className: \"MetadataDTO\"\n            }\n          }\n        }\n      }\n    }\n  }\n};\n\nexport const UpdateQnaDTOMetadata: msRest.CompositeMapper = {\n  serializedName: \"UpdateQnaDTO_metadata\",\n  type: {\n    name: \"Composite\",\n    className: \"UpdateQnaDTOMetadata\",\n    modelProperties: {\n      ...UpdateMetadataDTO.type.modelProperties\n    }\n  }\n};\n\nexport const UpdateContextDTO: msRest.CompositeMapper = {\n  serializedName: \"UpdateContextDTO\",\n  type: {\n    name: \"Composite\",\n    className: \"UpdateContextDTO\",\n    modelProperties: {\n      promptsToDelete: {\n        serializedName: \"promptsToDelete\",\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"Number\"\n            }\n          }\n        }\n      },\n      promptsToAdd: {\n        serializedName: \"promptsToAdd\",\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"Composite\",\n              className: \"PromptDTO\"\n            }\n          }\n        }\n      },\n      isContextOnly: {\n        serializedName: \"isContextOnly\",\n        type: {\n          name: \"Boolean\"\n        }\n      }\n    }\n  }\n};\n\nexport const UpdateQnaDTOContext: msRest.CompositeMapper = {\n  serializedName: \"UpdateQnaDTO_context\",\n  type: {\n    name: \"Composite\",\n    className: \"UpdateQnaDTOContext\",\n    modelProperties: {\n      ...UpdateContextDTO.type.modelProperties\n    }\n  }\n};\n\nexport const UpdateQnaDTO: msRest.CompositeMapper = {\n  serializedName: \"UpdateQnaDTO\",\n  type: {\n    name: \"Composite\",\n    className: \"UpdateQnaDTO\",\n    modelProperties: {\n      id: {\n        serializedName: \"id\",\n        constraints: {\n          InclusiveMaximum: 2147483647,\n          InclusiveMinimum: 0\n        },\n        type: {\n          name: \"Number\"\n        }\n      },\n      answer: {\n        serializedName: \"answer\",\n        type: {\n          name: \"String\"\n        }\n      },\n      source: {\n        serializedName: \"source\",\n        constraints: {\n          MaxLength: 300\n        },\n        type: {\n          name: \"String\"\n        }\n      },\n      questions: {\n        serializedName: \"questions\",\n        type: {\n          name: \"Composite\",\n          className: \"UpdateQnaDTOQuestions\"\n        }\n      },\n      metadata: {\n        serializedName: \"metadata\",\n        type: {\n          name: \"Composite\",\n          className: \"UpdateQnaDTOMetadata\"\n        }\n      },\n      context: {\n        serializedName: \"context\",\n        type: {\n          name: \"Composite\",\n          className: \"UpdateQnaDTOContext\"\n        }\n      }\n    }\n  }\n};\n\nexport const MetadataDTO: msRest.CompositeMapper = {\n  serializedName: \"MetadataDTO\",\n  type: {\n    name: \"Composite\",\n    className: \"MetadataDTO\",\n    modelProperties: {\n      name: {\n        required: true,\n        serializedName: \"name\",\n        constraints: {\n          MaxLength: 100,\n          MinLength: 1\n        },\n        type: {\n          name: \"String\"\n        }\n      },\n      value: {\n        required: true,\n        serializedName: \"value\",\n        constraints: {\n          MaxLength: 500,\n          MinLength: 1\n        },\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const QnADTO: msRest.CompositeMapper = {\n  serializedName: \"QnADTO\",\n  type: {\n    name: \"Composite\",\n    className: \"QnADTO\",\n    modelProperties: {\n      id: {\n        serializedName: \"id\",\n        type: {\n          name: \"Number\"\n        }\n      },\n      answer: {\n        required: true,\n        serializedName: \"answer\",\n        constraints: {\n          MaxLength: 25000,\n          MinLength: 1\n        },\n        type: {\n          name: \"String\"\n        }\n      },\n      source: {\n        serializedName: \"source\",\n        constraints: {\n          MaxLength: 300\n        },\n        type: {\n          name: \"String\"\n        }\n      },\n      questions: {\n        required: true,\n        serializedName: \"questions\",\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"String\"\n            }\n          }\n        }\n      },\n      metadata: {\n        serializedName: \"metadata\",\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"Composite\",\n              className: \"MetadataDTO\"\n            }\n          }\n        }\n      },\n      context: {\n        serializedName: \"context\",\n        type: {\n          name: \"Composite\",\n          className: \"QnADTOContext\"\n        }\n      },\n      lastUpdatedTimestamp: {\n        serializedName: \"lastUpdatedTimestamp\",\n        constraints: {\n          MaxLength: 300\n        },\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const PromptDTOQna: msRest.CompositeMapper = {\n  serializedName: \"PromptDTO_qna\",\n  type: {\n    name: \"Composite\",\n    className: \"PromptDTOQna\",\n    modelProperties: {\n      ...QnADTO.type.modelProperties\n    }\n  }\n};\n\nexport const PromptDTO: msRest.CompositeMapper = {\n  serializedName: \"PromptDTO\",\n  type: {\n    name: \"Composite\",\n    className: \"PromptDTO\",\n    modelProperties: {\n      displayOrder: {\n        serializedName: \"displayOrder\",\n        type: {\n          name: \"Number\"\n        }\n      },\n      qnaId: {\n        serializedName: \"qnaId\",\n        type: {\n          name: \"Number\"\n        }\n      },\n      qna: {\n        serializedName: \"qna\",\n        type: {\n          name: \"Composite\",\n          className: \"PromptDTOQna\"\n        }\n      },\n      displayText: {\n        serializedName: \"displayText\",\n        constraints: {\n          MaxLength: 200\n        },\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const ContextDTO: msRest.CompositeMapper = {\n  serializedName: \"ContextDTO\",\n  type: {\n    name: \"Composite\",\n    className: \"ContextDTO\",\n    modelProperties: {\n      isContextOnly: {\n        serializedName: \"isContextOnly\",\n        type: {\n          name: \"Boolean\"\n        }\n      },\n      prompts: {\n        serializedName: \"prompts\",\n        constraints: {\n          MaxItems: 20\n        },\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"Composite\",\n              className: \"PromptDTO\"\n            }\n          }\n        }\n      }\n    }\n  }\n};\n\nexport const QnADTOContext: msRest.CompositeMapper = {\n  serializedName: \"QnADTO_context\",\n  type: {\n    name: \"Composite\",\n    className: \"QnADTOContext\",\n    modelProperties: {\n      ...ContextDTO.type.modelProperties\n    }\n  }\n};\n\nexport const FileDTO: msRest.CompositeMapper = {\n  serializedName: \"FileDTO\",\n  type: {\n    name: \"Composite\",\n    className: \"FileDTO\",\n    modelProperties: {\n      fileName: {\n        required: true,\n        serializedName: \"fileName\",\n        constraints: {\n          MaxLength: 200,\n          MinLength: 1\n        },\n        type: {\n          name: \"String\"\n        }\n      },\n      fileUri: {\n        required: true,\n        serializedName: \"fileUri\",\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const QnADocumentsDTO: msRest.CompositeMapper = {\n  serializedName: \"QnADocumentsDTO\",\n  type: {\n    name: \"Composite\",\n    className: \"QnADocumentsDTO\",\n    modelProperties: {\n      qnaDocuments: {\n        serializedName: \"qnaDocuments\",\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"Composite\",\n              className: \"QnADTO\"\n            }\n          }\n        }\n      }\n    }\n  }\n};\n\nexport const CreateKbDTO: msRest.CompositeMapper = {\n  serializedName: \"CreateKbDTO\",\n  type: {\n    name: \"Composite\",\n    className: \"CreateKbDTO\",\n    modelProperties: {\n      name: {\n        required: true,\n        serializedName: \"name\",\n        constraints: {\n          MaxLength: 100,\n          MinLength: 1\n        },\n        type: {\n          name: \"String\"\n        }\n      },\n      qnaList: {\n        serializedName: \"qnaList\",\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"Composite\",\n              className: \"QnADTO\"\n            }\n          }\n        }\n      },\n      urls: {\n        serializedName: \"urls\",\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"String\"\n            }\n          }\n        }\n      },\n      files: {\n        serializedName: \"files\",\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"Composite\",\n              className: \"FileDTO\"\n            }\n          }\n        }\n      },\n      enableHierarchicalExtraction: {\n        serializedName: \"enableHierarchicalExtraction\",\n        type: {\n          name: \"Boolean\"\n        }\n      },\n      defaultAnswerUsedForExtraction: {\n        serializedName: \"defaultAnswerUsedForExtraction\",\n        constraints: {\n          MaxLength: 300,\n          MinLength: 1\n        },\n        type: {\n          name: \"String\"\n        }\n      },\n      language: {\n        serializedName: \"language\",\n        constraints: {\n          MaxLength: 100,\n          MinLength: 1\n        },\n        type: {\n          name: \"String\"\n        }\n      },\n      enableMultipleLanguages: {\n        serializedName: \"enableMultipleLanguages\",\n        type: {\n          name: \"Boolean\"\n        }\n      },\n      defaultAnswer: {\n        serializedName: \"defaultAnswer\",\n        constraints: {\n          MaxLength: 300,\n          MinLength: 1\n        },\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const ReplaceKbDTO: msRest.CompositeMapper = {\n  serializedName: \"ReplaceKbDTO\",\n  type: {\n    name: \"Composite\",\n    className: \"ReplaceKbDTO\",\n    modelProperties: {\n      qnAList: {\n        required: true,\n        serializedName: \"qnAList\",\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"Composite\",\n              className: \"QnADTO\"\n            }\n          }\n        }\n      }\n    }\n  }\n};\n\nexport const ErrorModel: msRest.CompositeMapper = {\n  serializedName: \"Error\",\n  type: {\n    name: \"Composite\",\n    className: \"ErrorModel\",\n    modelProperties: {\n      code: {\n        required: true,\n        serializedName: \"code\",\n        type: {\n          name: \"String\"\n        }\n      },\n      message: {\n        serializedName: \"message\",\n        type: {\n          name: \"String\"\n        }\n      },\n      target: {\n        serializedName: \"target\",\n        type: {\n          name: \"String\"\n        }\n      },\n      details: {\n        serializedName: \"details\",\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"Composite\",\n              className: \"ErrorModel\"\n            }\n          }\n        }\n      },\n      innerError: {\n        serializedName: \"innerError\",\n        type: {\n          name: \"Composite\",\n          className: \"InnerErrorModel\"\n        }\n      }\n    }\n  }\n};\n\nexport const ErrorResponseError: msRest.CompositeMapper = {\n  serializedName: \"ErrorResponse_error\",\n  type: {\n    name: \"Composite\",\n    className: \"ErrorResponseError\",\n    modelProperties: {\n      ...ErrorModel.type.modelProperties\n    }\n  }\n};\n\nexport const ErrorResponse: msRest.CompositeMapper = {\n  serializedName: \"ErrorResponse\",\n  type: {\n    name: \"Composite\",\n    className: \"ErrorResponse\",\n    modelProperties: {\n      error: {\n        serializedName: \"error\",\n        type: {\n          name: \"Composite\",\n          className: \"ErrorResponseError\"\n        }\n      }\n    }\n  }\n};\n\nexport const InnerErrorModel: msRest.CompositeMapper = {\n  serializedName: \"InnerErrorModel\",\n  type: {\n    name: \"Composite\",\n    className: \"InnerErrorModel\",\n    modelProperties: {\n      code: {\n        serializedName: \"code\",\n        type: {\n          name: \"String\"\n        }\n      },\n      innerError: {\n        serializedName: \"innerError\",\n        type: {\n          name: \"Composite\",\n          className: \"InnerErrorModel\"\n        }\n      }\n    }\n  }\n};\n\nexport const Operation: msRest.CompositeMapper = {\n  serializedName: \"Operation\",\n  type: {\n    name: \"Composite\",\n    className: \"Operation\",\n    modelProperties: {\n      operationState: {\n        serializedName: \"operationState\",\n        type: {\n          name: \"String\"\n        }\n      },\n      createdTimestamp: {\n        serializedName: \"createdTimestamp\",\n        type: {\n          name: \"String\"\n        }\n      },\n      lastActionTimestamp: {\n        serializedName: \"lastActionTimestamp\",\n        type: {\n          name: \"String\"\n        }\n      },\n      resourceLocation: {\n        serializedName: \"resourceLocation\",\n        type: {\n          name: \"String\"\n        }\n      },\n      userId: {\n        serializedName: \"userId\",\n        type: {\n          name: \"String\"\n        }\n      },\n      operationId: {\n        serializedName: \"operationId\",\n        type: {\n          name: \"String\"\n        }\n      },\n      errorResponse: {\n        serializedName: \"errorResponse\",\n        type: {\n          name: \"Composite\",\n          className: \"ErrorResponse\"\n        }\n      }\n    }\n  }\n};\n\nexport const KnowledgebaseDTO: msRest.CompositeMapper = {\n  serializedName: \"KnowledgebaseDTO\",\n  type: {\n    name: \"Composite\",\n    className: \"KnowledgebaseDTO\",\n    modelProperties: {\n      id: {\n        serializedName: \"id\",\n        type: {\n          name: \"String\"\n        }\n      },\n      hostName: {\n        serializedName: \"hostName\",\n        type: {\n          name: \"String\"\n        }\n      },\n      lastAccessedTimestamp: {\n        serializedName: \"lastAccessedTimestamp\",\n        type: {\n          name: \"String\"\n        }\n      },\n      lastChangedTimestamp: {\n        serializedName: \"lastChangedTimestamp\",\n        type: {\n          name: \"String\"\n        }\n      },\n      lastPublishedTimestamp: {\n        serializedName: \"lastPublishedTimestamp\",\n        type: {\n          name: \"String\"\n        }\n      },\n      name: {\n        serializedName: \"name\",\n        type: {\n          name: \"String\"\n        }\n      },\n      userId: {\n        serializedName: \"userId\",\n        type: {\n          name: \"String\"\n        }\n      },\n      urls: {\n        serializedName: \"urls\",\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"String\"\n            }\n          }\n        }\n      },\n      sources: {\n        serializedName: \"sources\",\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"String\"\n            }\n          }\n        }\n      }\n    }\n  }\n};\n\nexport const KnowledgebasesDTO: msRest.CompositeMapper = {\n  serializedName: \"KnowledgebasesDTO\",\n  type: {\n    name: \"Composite\",\n    className: \"KnowledgebasesDTO\",\n    modelProperties: {\n      knowledgebases: {\n        serializedName: \"knowledgebases\",\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"Composite\",\n              className: \"KnowledgebaseDTO\"\n            }\n          }\n        }\n      }\n    }\n  }\n};\n\nexport const ActiveLearningSettingsDTO: msRest.CompositeMapper = {\n  serializedName: \"ActiveLearningSettingsDTO\",\n  type: {\n    name: \"Composite\",\n    className: \"ActiveLearningSettingsDTO\",\n    modelProperties: {\n      enable: {\n        serializedName: \"enable\",\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const EndpointSettingsDTOActiveLearning: msRest.CompositeMapper = {\n  serializedName: \"EndpointSettingsDTO_activeLearning\",\n  type: {\n    name: \"Composite\",\n    className: \"EndpointSettingsDTOActiveLearning\",\n    modelProperties: {\n      ...ActiveLearningSettingsDTO.type.modelProperties\n    }\n  }\n};\n\nexport const EndpointSettingsDTO: msRest.CompositeMapper = {\n  serializedName: \"EndpointSettingsDTO\",\n  type: {\n    name: \"Composite\",\n    className: \"EndpointSettingsDTO\",\n    modelProperties: {\n      activeLearning: {\n        serializedName: \"activeLearning\",\n        type: {\n          name: \"Composite\",\n          className: \"EndpointSettingsDTOActiveLearning\"\n        }\n      }\n    }\n  }\n};\n\nexport const AlterationsDTO: msRest.CompositeMapper = {\n  serializedName: \"AlterationsDTO\",\n  type: {\n    name: \"Composite\",\n    className: \"AlterationsDTO\",\n    modelProperties: {\n      alterations: {\n        required: true,\n        serializedName: \"alterations\",\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"String\"\n            }\n          }\n        }\n      }\n    }\n  }\n};\n\nexport const WordAlterationsDTO: msRest.CompositeMapper = {\n  serializedName: \"WordAlterationsDTO\",\n  type: {\n    name: \"Composite\",\n    className: \"WordAlterationsDTO\",\n    modelProperties: {\n      wordAlterations: {\n        required: true,\n        serializedName: \"wordAlterations\",\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"Composite\",\n              className: \"AlterationsDTO\"\n            }\n          }\n        }\n      }\n    }\n  }\n};\n\nexport const EndpointKeysDTO: msRest.CompositeMapper = {\n  serializedName: \"EndpointKeysDTO\",\n  type: {\n    name: \"Composite\",\n    className: \"EndpointKeysDTO\",\n    modelProperties: {\n      primaryEndpointKey: {\n        serializedName: \"primaryEndpointKey\",\n        type: {\n          name: \"String\"\n        }\n      },\n      secondaryEndpointKey: {\n        serializedName: \"secondaryEndpointKey\",\n        type: {\n          name: \"String\"\n        }\n      },\n      installedVersion: {\n        serializedName: \"installedVersion\",\n        type: {\n          name: \"String\"\n        }\n      },\n      lastStableVersion: {\n        serializedName: \"lastStableVersion\",\n        type: {\n          name: \"String\"\n        }\n      },\n      language: {\n        serializedName: \"language\",\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const QueryContextDTO: msRest.CompositeMapper = {\n  serializedName: \"QueryContextDTO\",\n  type: {\n    name: \"Composite\",\n    className: \"QueryContextDTO\",\n    modelProperties: {\n      previousQnaId: {\n        serializedName: \"previousQnaId\",\n        type: {\n          name: \"Number\"\n        }\n      },\n      previousUserQuery: {\n        serializedName: \"previousUserQuery\",\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const QueryDTOContext: msRest.CompositeMapper = {\n  serializedName: \"QueryDTO_context\",\n  type: {\n    name: \"Composite\",\n    className: \"QueryDTOContext\",\n    modelProperties: {\n      ...QueryContextDTO.type.modelProperties\n    }\n  }\n};\n\nexport const AnswerSpanRequestDTO: msRest.CompositeMapper = {\n  serializedName: \"AnswerSpanRequestDTO\",\n  type: {\n    name: \"Composite\",\n    className: \"AnswerSpanRequestDTO\",\n    modelProperties: {\n      enable: {\n        serializedName: \"enable\",\n        type: {\n          name: \"Boolean\"\n        }\n      },\n      scoreThreshold: {\n        serializedName: \"scoreThreshold\",\n        type: {\n          name: \"Number\"\n        }\n      },\n      topAnswersWithSpan: {\n        serializedName: \"topAnswersWithSpan\",\n        constraints: {\n          InclusiveMaximum: 10,\n          InclusiveMinimum: 1\n        },\n        type: {\n          name: \"Number\"\n        }\n      }\n    }\n  }\n};\n\nexport const QueryDTOAnswerSpanRequest: msRest.CompositeMapper = {\n  serializedName: \"QueryDTO_answerSpanRequest\",\n  type: {\n    name: \"Composite\",\n    className: \"QueryDTOAnswerSpanRequest\",\n    modelProperties: {\n      ...AnswerSpanRequestDTO.type.modelProperties\n    }\n  }\n};\n\nexport const QueryDTO: msRest.CompositeMapper = {\n  serializedName: \"QueryDTO\",\n  type: {\n    name: \"Composite\",\n    className: \"QueryDTO\",\n    modelProperties: {\n      qnaId: {\n        serializedName: \"qnaId\",\n        type: {\n          name: \"String\"\n        }\n      },\n      question: {\n        serializedName: \"question\",\n        type: {\n          name: \"String\"\n        }\n      },\n      top: {\n        serializedName: \"top\",\n        type: {\n          name: \"Number\"\n        }\n      },\n      userId: {\n        serializedName: \"userId\",\n        type: {\n          name: \"String\"\n        }\n      },\n      isTest: {\n        serializedName: \"isTest\",\n        type: {\n          name: \"Boolean\"\n        }\n      },\n      scoreThreshold: {\n        serializedName: \"scoreThreshold\",\n        type: {\n          name: \"Number\"\n        }\n      },\n      context: {\n        serializedName: \"context\",\n        type: {\n          name: \"Composite\",\n          className: \"QueryDTOContext\"\n        }\n      },\n      rankerType: {\n        serializedName: \"rankerType\",\n        type: {\n          name: \"String\"\n        }\n      },\n      strictFilters: {\n        serializedName: \"strictFilters\",\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"Composite\",\n              className: \"MetadataDTO\"\n            }\n          }\n        }\n      },\n      strictFiltersCompoundOperationType: {\n        serializedName: \"strictFiltersCompoundOperationType\",\n        type: {\n          name: \"String\"\n        }\n      },\n      answerSpanRequest: {\n        serializedName: \"answerSpanRequest\",\n        type: {\n          name: \"Composite\",\n          className: \"QueryDTOAnswerSpanRequest\"\n        }\n      }\n    }\n  }\n};\n\nexport const QnASearchResultContext: msRest.CompositeMapper = {\n  serializedName: \"QnASearchResult_context\",\n  type: {\n    name: \"Composite\",\n    className: \"QnASearchResultContext\",\n    modelProperties: {\n      ...ContextDTO.type.modelProperties\n    }\n  }\n};\n\nexport const AnswerSpanResponseDTO: msRest.CompositeMapper = {\n  serializedName: \"AnswerSpanResponseDTO\",\n  type: {\n    name: \"Composite\",\n    className: \"AnswerSpanResponseDTO\",\n    modelProperties: {\n      text: {\n        serializedName: \"text\",\n        type: {\n          name: \"String\"\n        }\n      },\n      score: {\n        serializedName: \"score\",\n        type: {\n          name: \"Number\"\n        }\n      },\n      startIndex: {\n        serializedName: \"startIndex\",\n        type: {\n          name: \"Number\"\n        }\n      },\n      endIndex: {\n        serializedName: \"endIndex\",\n        type: {\n          name: \"Number\"\n        }\n      }\n    }\n  }\n};\n\nexport const QnASearchResultAnswerSpan: msRest.CompositeMapper = {\n  serializedName: \"QnASearchResult_answerSpan\",\n  type: {\n    name: \"Composite\",\n    className: \"QnASearchResultAnswerSpan\",\n    modelProperties: {\n      ...AnswerSpanResponseDTO.type.modelProperties\n    }\n  }\n};\n\nexport const QnASearchResult: msRest.CompositeMapper = {\n  serializedName: \"QnASearchResult\",\n  type: {\n    name: \"Composite\",\n    className: \"QnASearchResult\",\n    modelProperties: {\n      questions: {\n        serializedName: \"questions\",\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"String\"\n            }\n          }\n        }\n      },\n      answer: {\n        serializedName: \"answer\",\n        type: {\n          name: \"String\"\n        }\n      },\n      score: {\n        serializedName: \"score\",\n        type: {\n          name: \"Number\"\n        }\n      },\n      id: {\n        serializedName: \"id\",\n        type: {\n          name: \"Number\"\n        }\n      },\n      source: {\n        serializedName: \"source\",\n        type: {\n          name: \"String\"\n        }\n      },\n      metadata: {\n        serializedName: \"metadata\",\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"Composite\",\n              className: \"MetadataDTO\"\n            }\n          }\n        }\n      },\n      context: {\n        serializedName: \"context\",\n        type: {\n          name: \"Composite\",\n          className: \"QnASearchResultContext\"\n        }\n      },\n      answerSpan: {\n        serializedName: \"answerSpan\",\n        type: {\n          name: \"Composite\",\n          className: \"QnASearchResultAnswerSpan\"\n        }\n      }\n    }\n  }\n};\n\nexport const QnASearchResultList: msRest.CompositeMapper = {\n  serializedName: \"QnASearchResultList\",\n  type: {\n    name: \"Composite\",\n    className: \"QnASearchResultList\",\n    modelProperties: {\n      answers: {\n        serializedName: \"answers\",\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"Composite\",\n              className: \"QnASearchResult\"\n            }\n          }\n        }\n      }\n    }\n  }\n};\n\nexport const FeedbackRecordDTO: msRest.CompositeMapper = {\n  serializedName: \"FeedbackRecordDTO\",\n  type: {\n    name: \"Composite\",\n    className: \"FeedbackRecordDTO\",\n    modelProperties: {\n      userId: {\n        serializedName: \"userId\",\n        type: {\n          name: \"String\"\n        }\n      },\n      userQuestion: {\n        serializedName: \"userQuestion\",\n        constraints: {\n          MaxLength: 1000\n        },\n        type: {\n          name: \"String\"\n        }\n      },\n      qnaId: {\n        serializedName: \"qnaId\",\n        type: {\n          name: \"Number\"\n        }\n      }\n    }\n  }\n};\n\nexport const FeedbackRecordsDTO: msRest.CompositeMapper = {\n  serializedName: \"FeedbackRecordsDTO\",\n  type: {\n    name: \"Composite\",\n    className: \"FeedbackRecordsDTO\",\n    modelProperties: {\n      feedbackRecords: {\n        serializedName: \"feedbackRecords\",\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"Composite\",\n              className: \"FeedbackRecordDTO\"\n            }\n          }\n        }\n      }\n    }\n  }\n};\n\nexport const OperationsGetDetailsHeaders: msRest.CompositeMapper = {\n  serializedName: \"operations-getdetails-headers\",\n  type: {\n    name: \"Composite\",\n    className: \"OperationsGetDetailsHeaders\",\n    modelProperties: {\n      retryAfter: {\n        serializedName: \"retryafter\",\n        type: {\n          name: \"Number\"\n        }\n      }\n    }\n  }\n};\n\nexport const KnowledgebaseUpdateHeaders: msRest.CompositeMapper = {\n  serializedName: \"knowledgebase-update-headers\",\n  type: {\n    name: \"Composite\",\n    className: \"KnowledgebaseUpdateHeaders\",\n    modelProperties: {\n      location: {\n        serializedName: \"location\",\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n","/*\n * Copyright (c) Microsoft Corporation.\n * Licensed under the MIT License.\n *\n * Code generated by Microsoft (R) AutoRest Code Generator.\n * Changes may cause incorrect behavior and will be lost if the code is regenerated.\n */\n\nexport {\n  ActiveLearningSettingsDTO,\n  EndpointSettingsDTO,\n  EndpointSettingsDTOActiveLearning,\n  ErrorModel,\n  ErrorResponse,\n  ErrorResponseError,\n  InnerErrorModel\n} from \"../models/mappers\";\n","/*\n * Copyright (c) Microsoft Corporation.\n * Licensed under the MIT License.\n *\n * Code generated by Microsoft (R) AutoRest Code Generator.\n * Changes may cause incorrect behavior and will be lost if the code is\n * regenerated.\n */\n\nimport * as msRest from \"@azure/ms-rest-js\";\n\nexport const changedSince: msRest.OperationQueryParameter = {\n  parameterPath: [\n    \"options\",\n    \"changedSince\"\n  ],\n  mapper: {\n    serializedName: \"changedSince\",\n    type: {\n      name: \"String\"\n    }\n  }\n};\nexport const endpoint: msRest.OperationURLParameter = {\n  parameterPath: \"endpoint\",\n  mapper: {\n    required: true,\n    serializedName: \"Endpoint\",\n    defaultValue: '',\n    type: {\n      name: \"String\"\n    }\n  },\n  skipEncoding: true\n};\nexport const environment: msRest.OperationURLParameter = {\n  parameterPath: \"environment\",\n  mapper: {\n    required: true,\n    serializedName: \"environment\",\n    type: {\n      name: \"String\"\n    }\n  }\n};\nexport const kbId: msRest.OperationURLParameter = {\n  parameterPath: \"kbId\",\n  mapper: {\n    required: true,\n    serializedName: \"kbId\",\n    type: {\n      name: \"String\"\n    }\n  }\n};\nexport const keyType: msRest.OperationURLParameter = {\n  parameterPath: \"keyType\",\n  mapper: {\n    required: true,\n    serializedName: \"keyType\",\n    type: {\n      name: \"String\"\n    }\n  }\n};\nexport const operationId: msRest.OperationURLParameter = {\n  parameterPath: \"operationId\",\n  mapper: {\n    required: true,\n    serializedName: \"operationId\",\n    type: {\n      name: \"String\"\n    }\n  }\n};\nexport const source: msRest.OperationQueryParameter = {\n  parameterPath: [\n    \"options\",\n    \"source\"\n  ],\n  mapper: {\n    serializedName: \"source\",\n    type: {\n      name: \"String\"\n    }\n  }\n};\n","/*\n * Copyright (c) Microsoft Corporation.\n * Licensed under the MIT License.\n *\n * Code generated by Microsoft (R) AutoRest Code Generator.\n * Changes may cause incorrect behavior and will be lost if the code is\n * regenerated.\n */\n\nimport * as msRest from \"@azure/ms-rest-js\";\nimport * as Models from \"../models\";\nimport * as Mappers from \"../models/endpointSettingsMappers\";\nimport * as Parameters from \"../models/parameters\";\nimport { QnAMakerClientContext } from \"../qnAMakerClientContext\";\n\n/** Class representing a EndpointSettings. */\nexport class EndpointSettings {\n  private readonly client: QnAMakerClientContext;\n\n  /**\n   * Create a EndpointSettings.\n   * @param {QnAMakerClientContext} client Reference to the service client.\n   */\n  constructor(client: QnAMakerClientContext) {\n    this.client = client;\n  }\n\n  /**\n   * @summary Gets endpoint settings for an endpoint.\n   * @param [options] The optional parameters\n   * @returns Promise<Models.EndpointSettingsGetSettingsResponse>\n   */\n  getSettings(options?: msRest.RequestOptionsBase): Promise<Models.EndpointSettingsGetSettingsResponse>;\n  /**\n   * @param callback The callback\n   */\n  getSettings(callback: msRest.ServiceCallback<Models.EndpointSettingsDTO>): void;\n  /**\n   * @param options The optional parameters\n   * @param callback The callback\n   */\n  getSettings(options: msRest.RequestOptionsBase, callback: msRest.ServiceCallback<Models.EndpointSettingsDTO>): void;\n  getSettings(options?: msRest.RequestOptionsBase | msRest.ServiceCallback<Models.EndpointSettingsDTO>, callback?: msRest.ServiceCallback<Models.EndpointSettingsDTO>): Promise<Models.EndpointSettingsGetSettingsResponse> {\n    return this.client.sendOperationRequest(\n      {\n        options\n      },\n      getSettingsOperationSpec,\n      callback) as Promise<Models.EndpointSettingsGetSettingsResponse>;\n  }\n\n  /**\n   * @summary Updates endpoint settings for an endpoint.\n   * @param endpointSettingsPayload Post body of the request.\n   * @param [options] The optional parameters\n   * @returns Promise<msRest.RestResponse>\n   */\n  updateSettings(endpointSettingsPayload: Models.EndpointSettingsDTO, options?: msRest.RequestOptionsBase): Promise<msRest.RestResponse>;\n  /**\n   * @param endpointSettingsPayload Post body of the request.\n   * @param callback The callback\n   */\n  updateSettings(endpointSettingsPayload: Models.EndpointSettingsDTO, callback: msRest.ServiceCallback<void>): void;\n  /**\n   * @param endpointSettingsPayload Post body of the request.\n   * @param options The optional parameters\n   * @param callback The callback\n   */\n  updateSettings(endpointSettingsPayload: Models.EndpointSettingsDTO, options: msRest.RequestOptionsBase, callback: msRest.ServiceCallback<void>): void;\n  updateSettings(endpointSettingsPayload: Models.EndpointSettingsDTO, options?: msRest.RequestOptionsBase | msRest.ServiceCallback<void>, callback?: msRest.ServiceCallback<void>): Promise<msRest.RestResponse> {\n    return this.client.sendOperationRequest(\n      {\n        endpointSettingsPayload,\n        options\n      },\n      updateSettingsOperationSpec,\n      callback);\n  }\n}\n\n// Operation Specifications\nconst serializer = new msRest.Serializer(Mappers);\nconst getSettingsOperationSpec: msRest.OperationSpec = {\n  httpMethod: \"GET\",\n  path: \"endpointSettings\",\n  urlParameters: [\n    Parameters.endpoint\n  ],\n  responses: {\n    200: {\n      bodyMapper: Mappers.EndpointSettingsDTO\n    },\n    default: {\n      bodyMapper: Mappers.ErrorResponse\n    }\n  },\n  serializer\n};\n\nconst updateSettingsOperationSpec: msRest.OperationSpec = {\n  httpMethod: \"PATCH\",\n  path: \"endpointSettings\",\n  urlParameters: [\n    Parameters.endpoint\n  ],\n  requestBody: {\n    parameterPath: \"endpointSettingsPayload\",\n    mapper: {\n      ...Mappers.EndpointSettingsDTO,\n      required: true\n    }\n  },\n  responses: {\n    204: {},\n    default: {\n      bodyMapper: Mappers.ErrorResponse\n    }\n  },\n  serializer\n};\n","/*\n * Copyright (c) Microsoft Corporation.\n * Licensed under the MIT License.\n *\n * Code generated by Microsoft (R) AutoRest Code Generator.\n * Changes may cause incorrect behavior and will be lost if the code is regenerated.\n */\n\nexport {\n  EndpointKeysDTO,\n  ErrorModel,\n  ErrorResponse,\n  ErrorResponseError,\n  InnerErrorModel\n} from \"../models/mappers\";\n","/*\n * Copyright (c) Microsoft Corporation.\n * Licensed under the MIT License.\n *\n * Code generated by Microsoft (R) AutoRest Code Generator.\n * Changes may cause incorrect behavior and will be lost if the code is\n * regenerated.\n */\n\nimport * as msRest from \"@azure/ms-rest-js\";\nimport * as Models from \"../models\";\nimport * as Mappers from \"../models/endpointKeysMappers\";\nimport * as Parameters from \"../models/parameters\";\nimport { QnAMakerClientContext } from \"../qnAMakerClientContext\";\n\n/** Class representing a EndpointKeys. */\nexport class EndpointKeys {\n  private readonly client: QnAMakerClientContext;\n\n  /**\n   * Create a EndpointKeys.\n   * @param {QnAMakerClientContext} client Reference to the service client.\n   */\n  constructor(client: QnAMakerClientContext) {\n    this.client = client;\n  }\n\n  /**\n   * @summary Gets endpoint keys for an endpoint\n   * @param [options] The optional parameters\n   * @returns Promise<Models.EndpointKeysGetKeysResponse>\n   */\n  getKeys(options?: msRest.RequestOptionsBase): Promise<Models.EndpointKeysGetKeysResponse>;\n  /**\n   * @param callback The callback\n   */\n  getKeys(callback: msRest.ServiceCallback<Models.EndpointKeysDTO>): void;\n  /**\n   * @param options The optional parameters\n   * @param callback The callback\n   */\n  getKeys(options: msRest.RequestOptionsBase, callback: msRest.ServiceCallback<Models.EndpointKeysDTO>): void;\n  getKeys(options?: msRest.RequestOptionsBase | msRest.ServiceCallback<Models.EndpointKeysDTO>, callback?: msRest.ServiceCallback<Models.EndpointKeysDTO>): Promise<Models.EndpointKeysGetKeysResponse> {\n    return this.client.sendOperationRequest(\n      {\n        options\n      },\n      getKeysOperationSpec,\n      callback) as Promise<Models.EndpointKeysGetKeysResponse>;\n  }\n\n  /**\n   * @summary Re-generates an endpoint key.\n   * @param keyType Type of Key\n   * @param [options] The optional parameters\n   * @returns Promise<Models.EndpointKeysRefreshKeysResponse>\n   */\n  refreshKeys(keyType: string, options?: msRest.RequestOptionsBase): Promise<Models.EndpointKeysRefreshKeysResponse>;\n  /**\n   * @param keyType Type of Key\n   * @param callback The callback\n   */\n  refreshKeys(keyType: string, callback: msRest.ServiceCallback<Models.EndpointKeysDTO>): void;\n  /**\n   * @param keyType Type of Key\n   * @param options The optional parameters\n   * @param callback The callback\n   */\n  refreshKeys(keyType: string, options: msRest.RequestOptionsBase, callback: msRest.ServiceCallback<Models.EndpointKeysDTO>): void;\n  refreshKeys(keyType: string, options?: msRest.RequestOptionsBase | msRest.ServiceCallback<Models.EndpointKeysDTO>, callback?: msRest.ServiceCallback<Models.EndpointKeysDTO>): Promise<Models.EndpointKeysRefreshKeysResponse> {\n    return this.client.sendOperationRequest(\n      {\n        keyType,\n        options\n      },\n      refreshKeysOperationSpec,\n      callback) as Promise<Models.EndpointKeysRefreshKeysResponse>;\n  }\n}\n\n// Operation Specifications\nconst serializer = new msRest.Serializer(Mappers);\nconst getKeysOperationSpec: msRest.OperationSpec = {\n  httpMethod: \"GET\",\n  path: \"endpointkeys\",\n  urlParameters: [\n    Parameters.endpoint\n  ],\n  responses: {\n    200: {\n      bodyMapper: Mappers.EndpointKeysDTO\n    },\n    default: {\n      bodyMapper: Mappers.ErrorResponse\n    }\n  },\n  serializer\n};\n\nconst refreshKeysOperationSpec: msRest.OperationSpec = {\n  httpMethod: \"PATCH\",\n  path: \"endpointkeys/{keyType}\",\n  urlParameters: [\n    Parameters.endpoint,\n    Parameters.keyType\n  ],\n  responses: {\n    200: {\n      bodyMapper: Mappers.EndpointKeysDTO\n    },\n    default: {\n      bodyMapper: Mappers.ErrorResponse\n    }\n  },\n  serializer\n};\n","/*\n * Copyright (c) Microsoft Corporation.\n * Licensed under the MIT License.\n *\n * Code generated by Microsoft (R) AutoRest Code Generator.\n * Changes may cause incorrect behavior and will be lost if the code is regenerated.\n */\n\nexport {\n  AlterationsDTO,\n  ErrorModel,\n  ErrorResponse,\n  ErrorResponseError,\n  InnerErrorModel,\n  WordAlterationsDTO\n} from \"../models/mappers\";\n","/*\n * Copyright (c) Microsoft Corporation.\n * Licensed under the MIT License.\n *\n * Code generated by Microsoft (R) AutoRest Code Generator.\n * Changes may cause incorrect behavior and will be lost if the code is\n * regenerated.\n */\n\nimport * as msRest from \"@azure/ms-rest-js\";\nimport * as Models from \"../models\";\nimport * as Mappers from \"../models/alterationsMappers\";\nimport * as Parameters from \"../models/parameters\";\nimport { QnAMakerClientContext } from \"../qnAMakerClientContext\";\n\n/** Class representing a Alterations. */\nexport class Alterations {\n  private readonly client: QnAMakerClientContext;\n\n  /**\n   * Create a Alterations.\n   * @param {QnAMakerClientContext} client Reference to the service client.\n   */\n  constructor(client: QnAMakerClientContext) {\n    this.client = client;\n  }\n\n  /**\n   * @summary Download alterations from runtime.\n   * @param [options] The optional parameters\n   * @returns Promise<Models.AlterationsGetResponse>\n   */\n  get(options?: msRest.RequestOptionsBase): Promise<Models.AlterationsGetResponse>;\n  /**\n   * @param callback The callback\n   */\n  get(callback: msRest.ServiceCallback<Models.WordAlterationsDTO>): void;\n  /**\n   * @param options The optional parameters\n   * @param callback The callback\n   */\n  get(options: msRest.RequestOptionsBase, callback: msRest.ServiceCallback<Models.WordAlterationsDTO>): void;\n  get(options?: msRest.RequestOptionsBase | msRest.ServiceCallback<Models.WordAlterationsDTO>, callback?: msRest.ServiceCallback<Models.WordAlterationsDTO>): Promise<Models.AlterationsGetResponse> {\n    return this.client.sendOperationRequest(\n      {\n        options\n      },\n      getOperationSpec,\n      callback) as Promise<Models.AlterationsGetResponse>;\n  }\n\n  /**\n   * @summary Replace alterations data.\n   * @param wordAlterations New alterations data.\n   * @param [options] The optional parameters\n   * @returns Promise<msRest.RestResponse>\n   */\n  replace(wordAlterations: Models.WordAlterationsDTO, options?: msRest.RequestOptionsBase): Promise<msRest.RestResponse>;\n  /**\n   * @param wordAlterations New alterations data.\n   * @param callback The callback\n   */\n  replace(wordAlterations: Models.WordAlterationsDTO, callback: msRest.ServiceCallback<void>): void;\n  /**\n   * @param wordAlterations New alterations data.\n   * @param options The optional parameters\n   * @param callback The callback\n   */\n  replace(wordAlterations: Models.WordAlterationsDTO, options: msRest.RequestOptionsBase, callback: msRest.ServiceCallback<void>): void;\n  replace(wordAlterations: Models.WordAlterationsDTO, options?: msRest.RequestOptionsBase | msRest.ServiceCallback<void>, callback?: msRest.ServiceCallback<void>): Promise<msRest.RestResponse> {\n    return this.client.sendOperationRequest(\n      {\n        wordAlterations,\n        options\n      },\n      replaceOperationSpec,\n      callback);\n  }\n\n  /**\n   * @summary Download alterations per Knowledgebase (QnAMaker Managed).\n   * @param kbId Knowledgebase id.\n   * @param [options] The optional parameters\n   * @returns Promise<Models.AlterationsGetAlterationsForKbResponse>\n   */\n  getAlterationsForKb(kbId: string, options?: msRest.RequestOptionsBase): Promise<Models.AlterationsGetAlterationsForKbResponse>;\n  /**\n   * @param kbId Knowledgebase id.\n   * @param callback The callback\n   */\n  getAlterationsForKb(kbId: string, callback: msRest.ServiceCallback<Models.WordAlterationsDTO>): void;\n  /**\n   * @param kbId Knowledgebase id.\n   * @param options The optional parameters\n   * @param callback The callback\n   */\n  getAlterationsForKb(kbId: string, options: msRest.RequestOptionsBase, callback: msRest.ServiceCallback<Models.WordAlterationsDTO>): void;\n  getAlterationsForKb(kbId: string, options?: msRest.RequestOptionsBase | msRest.ServiceCallback<Models.WordAlterationsDTO>, callback?: msRest.ServiceCallback<Models.WordAlterationsDTO>): Promise<Models.AlterationsGetAlterationsForKbResponse> {\n    return this.client.sendOperationRequest(\n      {\n        kbId,\n        options\n      },\n      getAlterationsForKbOperationSpec,\n      callback) as Promise<Models.AlterationsGetAlterationsForKbResponse>;\n  }\n\n  /**\n   * @summary Replace alterations data per Knowledgebase (QnAMaker Managed).\n   * @param kbId Knowledgebase id.\n   * @param wordAlterations New alterations data.\n   * @param [options] The optional parameters\n   * @returns Promise<msRest.RestResponse>\n   */\n  replaceAlterationsForKb(kbId: string, wordAlterations: Models.WordAlterationsDTO, options?: msRest.RequestOptionsBase): Promise<msRest.RestResponse>;\n  /**\n   * @param kbId Knowledgebase id.\n   * @param wordAlterations New alterations data.\n   * @param callback The callback\n   */\n  replaceAlterationsForKb(kbId: string, wordAlterations: Models.WordAlterationsDTO, callback: msRest.ServiceCallback<void>): void;\n  /**\n   * @param kbId Knowledgebase id.\n   * @param wordAlterations New alterations data.\n   * @param options The optional parameters\n   * @param callback The callback\n   */\n  replaceAlterationsForKb(kbId: string, wordAlterations: Models.WordAlterationsDTO, options: msRest.RequestOptionsBase, callback: msRest.ServiceCallback<void>): void;\n  replaceAlterationsForKb(kbId: string, wordAlterations: Models.WordAlterationsDTO, options?: msRest.RequestOptionsBase | msRest.ServiceCallback<void>, callback?: msRest.ServiceCallback<void>): Promise<msRest.RestResponse> {\n    return this.client.sendOperationRequest(\n      {\n        kbId,\n        wordAlterations,\n        options\n      },\n      replaceAlterationsForKbOperationSpec,\n      callback);\n  }\n}\n\n// Operation Specifications\nconst serializer = new msRest.Serializer(Mappers);\nconst getOperationSpec: msRest.OperationSpec = {\n  httpMethod: \"GET\",\n  path: \"alterations\",\n  urlParameters: [\n    Parameters.endpoint\n  ],\n  responses: {\n    200: {\n      bodyMapper: Mappers.WordAlterationsDTO\n    },\n    default: {\n      bodyMapper: Mappers.ErrorResponse\n    }\n  },\n  serializer\n};\n\nconst replaceOperationSpec: msRest.OperationSpec = {\n  httpMethod: \"PUT\",\n  path: \"alterations\",\n  urlParameters: [\n    Parameters.endpoint\n  ],\n  requestBody: {\n    parameterPath: \"wordAlterations\",\n    mapper: {\n      ...Mappers.WordAlterationsDTO,\n      required: true\n    }\n  },\n  responses: {\n    204: {},\n    default: {\n      bodyMapper: Mappers.ErrorResponse\n    }\n  },\n  serializer\n};\n\nconst getAlterationsForKbOperationSpec: msRest.OperationSpec = {\n  httpMethod: \"GET\",\n  path: \"alterations/{kbId}\",\n  urlParameters: [\n    Parameters.endpoint,\n    Parameters.kbId\n  ],\n  responses: {\n    200: {\n      bodyMapper: Mappers.WordAlterationsDTO\n    },\n    default: {\n      bodyMapper: Mappers.ErrorResponse\n    }\n  },\n  serializer\n};\n\nconst replaceAlterationsForKbOperationSpec: msRest.OperationSpec = {\n  httpMethod: \"PUT\",\n  path: \"alterations/{kbId}\",\n  urlParameters: [\n    Parameters.endpoint,\n    Parameters.kbId\n  ],\n  requestBody: {\n    parameterPath: \"wordAlterations\",\n    mapper: {\n      ...Mappers.WordAlterationsDTO,\n      required: true\n    }\n  },\n  responses: {\n    204: {},\n    default: {\n      bodyMapper: Mappers.ErrorResponse\n    }\n  },\n  serializer\n};\n","/*\n * Copyright (c) Microsoft Corporation.\n * Licensed under the MIT License.\n *\n * Code generated by Microsoft (R) AutoRest Code Generator.\n * Changes may cause incorrect behavior and will be lost if the code is regenerated.\n */\n\nexport {\n  AnswerSpanRequestDTO,\n  AnswerSpanResponseDTO,\n  ContextDTO,\n  CreateKbDTO,\n  CreateKbInputDTO,\n  DeleteKbContentsDTO,\n  ErrorModel,\n  ErrorResponse,\n  ErrorResponseError,\n  FeedbackRecordDTO,\n  FeedbackRecordsDTO,\n  FileDTO,\n  InnerErrorModel,\n  KnowledgebaseDTO,\n  KnowledgebasesDTO,\n  KnowledgebaseUpdateHeaders,\n  MetadataDTO,\n  Operation,\n  PromptDTO,\n  PromptDTOQna,\n  QnADocumentsDTO,\n  QnADTO,\n  QnADTOContext,\n  QnASearchResult,\n  QnASearchResultAnswerSpan,\n  QnASearchResultContext,\n  QnASearchResultList,\n  QueryContextDTO,\n  QueryDTO,\n  QueryDTOAnswerSpanRequest,\n  QueryDTOContext,\n  ReplaceKbDTO,\n  UpdateContextDTO,\n  UpdateKbContentsDTO,\n  UpdateKbOperationDTO,\n  UpdateKbOperationDTOAdd,\n  UpdateKbOperationDTODelete,\n  UpdateKbOperationDTOUpdate,\n  UpdateMetadataDTO,\n  UpdateQnaDTO,\n  UpdateQnaDTOContext,\n  UpdateQnaDTOMetadata,\n  UpdateQnaDTOQuestions,\n  UpdateQuestionsDTO\n} from \"../models/mappers\";\n","/*\n * Copyright (c) Microsoft Corporation.\n * Licensed under the MIT License.\n *\n * Code generated by Microsoft (R) AutoRest Code Generator.\n * Changes may cause incorrect behavior and will be lost if the code is\n * regenerated.\n */\n\nimport * as msRest from \"@azure/ms-rest-js\";\nimport * as Models from \"../models\";\nimport * as Mappers from \"../models/knowledgebaseMappers\";\nimport * as Parameters from \"../models/parameters\";\nimport { QnAMakerClientContext } from \"../qnAMakerClientContext\";\n\n/** Class representing a Knowledgebase. */\nexport class Knowledgebase {\n  private readonly client: QnAMakerClientContext;\n\n  /**\n   * Create a Knowledgebase.\n   * @param {QnAMakerClientContext} client Reference to the service client.\n   */\n  constructor(client: QnAMakerClientContext) {\n    this.client = client;\n  }\n\n  /**\n   * @summary Gets all knowledgebases for a user.\n   * @param [options] The optional parameters\n   * @returns Promise<Models.KnowledgebaseListAllResponse>\n   */\n  listAll(options?: msRest.RequestOptionsBase): Promise<Models.KnowledgebaseListAllResponse>;\n  /**\n   * @param callback The callback\n   */\n  listAll(callback: msRest.ServiceCallback<Models.KnowledgebasesDTO>): void;\n  /**\n   * @param options The optional parameters\n   * @param callback The callback\n   */\n  listAll(options: msRest.RequestOptionsBase, callback: msRest.ServiceCallback<Models.KnowledgebasesDTO>): void;\n  listAll(options?: msRest.RequestOptionsBase | msRest.ServiceCallback<Models.KnowledgebasesDTO>, callback?: msRest.ServiceCallback<Models.KnowledgebasesDTO>): Promise<Models.KnowledgebaseListAllResponse> {\n    return this.client.sendOperationRequest(\n      {\n        options\n      },\n      listAllOperationSpec,\n      callback) as Promise<Models.KnowledgebaseListAllResponse>;\n  }\n\n  /**\n   * @summary Gets details of a specific knowledgebase.\n   * @param kbId Knowledgebase id.\n   * @param [options] The optional parameters\n   * @returns Promise<Models.KnowledgebaseGetDetailsResponse>\n   */\n  getDetails(kbId: string, options?: msRest.RequestOptionsBase): Promise<Models.KnowledgebaseGetDetailsResponse>;\n  /**\n   * @param kbId Knowledgebase id.\n   * @param callback The callback\n   */\n  getDetails(kbId: string, callback: msRest.ServiceCallback<Models.KnowledgebaseDTO>): void;\n  /**\n   * @param kbId Knowledgebase id.\n   * @param options The optional parameters\n   * @param callback The callback\n   */\n  getDetails(kbId: string, options: msRest.RequestOptionsBase, callback: msRest.ServiceCallback<Models.KnowledgebaseDTO>): void;\n  getDetails(kbId: string, options?: msRest.RequestOptionsBase | msRest.ServiceCallback<Models.KnowledgebaseDTO>, callback?: msRest.ServiceCallback<Models.KnowledgebaseDTO>): Promise<Models.KnowledgebaseGetDetailsResponse> {\n    return this.client.sendOperationRequest(\n      {\n        kbId,\n        options\n      },\n      getDetailsOperationSpec,\n      callback) as Promise<Models.KnowledgebaseGetDetailsResponse>;\n  }\n\n  /**\n   * @summary Deletes the knowledgebase and all its data.\n   * @param kbId Knowledgebase id.\n   * @param [options] The optional parameters\n   * @returns Promise<msRest.RestResponse>\n   */\n  deleteMethod(kbId: string, options?: msRest.RequestOptionsBase): Promise<msRest.RestResponse>;\n  /**\n   * @param kbId Knowledgebase id.\n   * @param callback The callback\n   */\n  deleteMethod(kbId: string, callback: msRest.ServiceCallback<void>): void;\n  /**\n   * @param kbId Knowledgebase id.\n   * @param options The optional parameters\n   * @param callback The callback\n   */\n  deleteMethod(kbId: string, options: msRest.RequestOptionsBase, callback: msRest.ServiceCallback<void>): void;\n  deleteMethod(kbId: string, options?: msRest.RequestOptionsBase | msRest.ServiceCallback<void>, callback?: msRest.ServiceCallback<void>): Promise<msRest.RestResponse> {\n    return this.client.sendOperationRequest(\n      {\n        kbId,\n        options\n      },\n      deleteMethodOperationSpec,\n      callback);\n  }\n\n  /**\n   * @summary Publishes all changes in test index of a knowledgebase to its prod index.\n   * @param kbId Knowledgebase id.\n   * @param [options] The optional parameters\n   * @returns Promise<msRest.RestResponse>\n   */\n  publish(kbId: string, options?: msRest.RequestOptionsBase): Promise<msRest.RestResponse>;\n  /**\n   * @param kbId Knowledgebase id.\n   * @param callback The callback\n   */\n  publish(kbId: string, callback: msRest.ServiceCallback<void>): void;\n  /**\n   * @param kbId Knowledgebase id.\n   * @param options The optional parameters\n   * @param callback The callback\n   */\n  publish(kbId: string, options: msRest.RequestOptionsBase, callback: msRest.ServiceCallback<void>): void;\n  publish(kbId: string, options?: msRest.RequestOptionsBase | msRest.ServiceCallback<void>, callback?: msRest.ServiceCallback<void>): Promise<msRest.RestResponse> {\n    return this.client.sendOperationRequest(\n      {\n        kbId,\n        options\n      },\n      publishOperationSpec,\n      callback);\n  }\n\n  /**\n   * @summary Replace knowledgebase contents.\n   * @param kbId Knowledgebase id.\n   * @param replaceKb An instance of ReplaceKbDTO which contains list of qnas to be uploaded\n   * @param [options] The optional parameters\n   * @returns Promise<msRest.RestResponse>\n   */\n  replace(kbId: string, replaceKb: Models.ReplaceKbDTO, options?: msRest.RequestOptionsBase): Promise<msRest.RestResponse>;\n  /**\n   * @param kbId Knowledgebase id.\n   * @param replaceKb An instance of ReplaceKbDTO which contains list of qnas to be uploaded\n   * @param callback The callback\n   */\n  replace(kbId: string, replaceKb: Models.ReplaceKbDTO, callback: msRest.ServiceCallback<void>): void;\n  /**\n   * @param kbId Knowledgebase id.\n   * @param replaceKb An instance of ReplaceKbDTO which contains list of qnas to be uploaded\n   * @param options The optional parameters\n   * @param callback The callback\n   */\n  replace(kbId: string, replaceKb: Models.ReplaceKbDTO, options: msRest.RequestOptionsBase, callback: msRest.ServiceCallback<void>): void;\n  replace(kbId: string, replaceKb: Models.ReplaceKbDTO, options?: msRest.RequestOptionsBase | msRest.ServiceCallback<void>, callback?: msRest.ServiceCallback<void>): Promise<msRest.RestResponse> {\n    return this.client.sendOperationRequest(\n      {\n        kbId,\n        replaceKb,\n        options\n      },\n      replaceOperationSpec,\n      callback);\n  }\n\n  /**\n   * @summary Asynchronous operation to modify a knowledgebase.\n   * @param kbId Knowledgebase id.\n   * @param updateKb Post body of the request.\n   * @param [options] The optional parameters\n   * @returns Promise<Models.KnowledgebaseUpdateResponse>\n   */\n  update(kbId: string, updateKb: Models.UpdateKbOperationDTO, options?: msRest.RequestOptionsBase): Promise<Models.KnowledgebaseUpdateResponse>;\n  /**\n   * @param kbId Knowledgebase id.\n   * @param updateKb Post body of the request.\n   * @param callback The callback\n   */\n  update(kbId: string, updateKb: Models.UpdateKbOperationDTO, callback: msRest.ServiceCallback<Models.Operation>): void;\n  /**\n   * @param kbId Knowledgebase id.\n   * @param updateKb Post body of the request.\n   * @param options The optional parameters\n   * @param callback The callback\n   */\n  update(kbId: string, updateKb: Models.UpdateKbOperationDTO, options: msRest.RequestOptionsBase, callback: msRest.ServiceCallback<Models.Operation>): void;\n  update(kbId: string, updateKb: Models.UpdateKbOperationDTO, options?: msRest.RequestOptionsBase | msRest.ServiceCallback<Models.Operation>, callback?: msRest.ServiceCallback<Models.Operation>): Promise<Models.KnowledgebaseUpdateResponse> {\n    return this.client.sendOperationRequest(\n      {\n        kbId,\n        updateKb,\n        options\n      },\n      updateOperationSpec,\n      callback) as Promise<Models.KnowledgebaseUpdateResponse>;\n  }\n\n  /**\n   * @summary Asynchronous operation to create a new knowledgebase.\n   * @param createKbPayload Post body of the request.\n   * @param [options] The optional parameters\n   * @returns Promise<Models.KnowledgebaseCreateResponse>\n   */\n  create(createKbPayload: Models.CreateKbDTO, options?: msRest.RequestOptionsBase): Promise<Models.KnowledgebaseCreateResponse>;\n  /**\n   * @param createKbPayload Post body of the request.\n   * @param callback The callback\n   */\n  create(createKbPayload: Models.CreateKbDTO, callback: msRest.ServiceCallback<Models.Operation>): void;\n  /**\n   * @param createKbPayload Post body of the request.\n   * @param options The optional parameters\n   * @param callback The callback\n   */\n  create(createKbPayload: Models.CreateKbDTO, options: msRest.RequestOptionsBase, callback: msRest.ServiceCallback<Models.Operation>): void;\n  create(createKbPayload: Models.CreateKbDTO, options?: msRest.RequestOptionsBase | msRest.ServiceCallback<Models.Operation>, callback?: msRest.ServiceCallback<Models.Operation>): Promise<Models.KnowledgebaseCreateResponse> {\n    return this.client.sendOperationRequest(\n      {\n        createKbPayload,\n        options\n      },\n      createOperationSpec,\n      callback) as Promise<Models.KnowledgebaseCreateResponse>;\n  }\n\n  /**\n   * @summary Download the knowledgebase.\n   * @param kbId Knowledgebase id.\n   * @param environment Specifies whether environment is Test or Prod. Possible values include:\n   * 'Prod', 'Test'\n   * @param [options] The optional parameters\n   * @returns Promise<Models.KnowledgebaseDownloadResponse>\n   */\n  download(kbId: string, environment: Models.EnvironmentType, options?: Models.KnowledgebaseDownloadOptionalParams): Promise<Models.KnowledgebaseDownloadResponse>;\n  /**\n   * @param kbId Knowledgebase id.\n   * @param environment Specifies whether environment is Test or Prod. Possible values include:\n   * 'Prod', 'Test'\n   * @param callback The callback\n   */\n  download(kbId: string, environment: Models.EnvironmentType, callback: msRest.ServiceCallback<Models.QnADocumentsDTO>): void;\n  /**\n   * @param kbId Knowledgebase id.\n   * @param environment Specifies whether environment is Test or Prod. Possible values include:\n   * 'Prod', 'Test'\n   * @param options The optional parameters\n   * @param callback The callback\n   */\n  download(kbId: string, environment: Models.EnvironmentType, options: Models.KnowledgebaseDownloadOptionalParams, callback: msRest.ServiceCallback<Models.QnADocumentsDTO>): void;\n  download(kbId: string, environment: Models.EnvironmentType, options?: Models.KnowledgebaseDownloadOptionalParams | msRest.ServiceCallback<Models.QnADocumentsDTO>, callback?: msRest.ServiceCallback<Models.QnADocumentsDTO>): Promise<Models.KnowledgebaseDownloadResponse> {\n    return this.client.sendOperationRequest(\n      {\n        kbId,\n        environment,\n        options\n      },\n      downloadOperationSpec,\n      callback) as Promise<Models.KnowledgebaseDownloadResponse>;\n  }\n\n  /**\n   * @summary GenerateAnswer call to query knowledgebase (QnA Maker Managed).\n   * @param kbId Knowledgebase id.\n   * @param generateAnswerPayload Post body of the request.\n   * @param [options] The optional parameters\n   * @returns Promise<Models.KnowledgebaseGenerateAnswerResponse>\n   */\n  generateAnswer(kbId: string, generateAnswerPayload: Models.QueryDTO, options?: msRest.RequestOptionsBase): Promise<Models.KnowledgebaseGenerateAnswerResponse>;\n  /**\n   * @param kbId Knowledgebase id.\n   * @param generateAnswerPayload Post body of the request.\n   * @param callback The callback\n   */\n  generateAnswer(kbId: string, generateAnswerPayload: Models.QueryDTO, callback: msRest.ServiceCallback<Models.QnASearchResultList>): void;\n  /**\n   * @param kbId Knowledgebase id.\n   * @param generateAnswerPayload Post body of the request.\n   * @param options The optional parameters\n   * @param callback The callback\n   */\n  generateAnswer(kbId: string, generateAnswerPayload: Models.QueryDTO, options: msRest.RequestOptionsBase, callback: msRest.ServiceCallback<Models.QnASearchResultList>): void;\n  generateAnswer(kbId: string, generateAnswerPayload: Models.QueryDTO, options?: msRest.RequestOptionsBase | msRest.ServiceCallback<Models.QnASearchResultList>, callback?: msRest.ServiceCallback<Models.QnASearchResultList>): Promise<Models.KnowledgebaseGenerateAnswerResponse> {\n    return this.client.sendOperationRequest(\n      {\n        kbId,\n        generateAnswerPayload,\n        options\n      },\n      generateAnswerOperationSpec,\n      callback) as Promise<Models.KnowledgebaseGenerateAnswerResponse>;\n  }\n\n  /**\n   * @summary Train call to add suggestions to knowledgebase (QnAMaker Managed).\n   * @param kbId Knowledgebase id.\n   * @param trainPayload Post body of the request.\n   * @param [options] The optional parameters\n   * @returns Promise<msRest.RestResponse>\n   */\n  train(kbId: string, trainPayload: Models.FeedbackRecordsDTO, options?: msRest.RequestOptionsBase): Promise<msRest.RestResponse>;\n  /**\n   * @param kbId Knowledgebase id.\n   * @param trainPayload Post body of the request.\n   * @param callback The callback\n   */\n  train(kbId: string, trainPayload: Models.FeedbackRecordsDTO, callback: msRest.ServiceCallback<void>): void;\n  /**\n   * @param kbId Knowledgebase id.\n   * @param trainPayload Post body of the request.\n   * @param options The optional parameters\n   * @param callback The callback\n   */\n  train(kbId: string, trainPayload: Models.FeedbackRecordsDTO, options: msRest.RequestOptionsBase, callback: msRest.ServiceCallback<void>): void;\n  train(kbId: string, trainPayload: Models.FeedbackRecordsDTO, options?: msRest.RequestOptionsBase | msRest.ServiceCallback<void>, callback?: msRest.ServiceCallback<void>): Promise<msRest.RestResponse> {\n    return this.client.sendOperationRequest(\n      {\n        kbId,\n        trainPayload,\n        options\n      },\n      trainOperationSpec,\n      callback);\n  }\n}\n\n// Operation Specifications\nconst serializer = new msRest.Serializer(Mappers);\nconst listAllOperationSpec: msRest.OperationSpec = {\n  httpMethod: \"GET\",\n  path: \"knowledgebases\",\n  urlParameters: [\n    Parameters.endpoint\n  ],\n  responses: {\n    200: {\n      bodyMapper: Mappers.KnowledgebasesDTO\n    },\n    default: {\n      bodyMapper: Mappers.ErrorResponse\n    }\n  },\n  serializer\n};\n\nconst getDetailsOperationSpec: msRest.OperationSpec = {\n  httpMethod: \"GET\",\n  path: \"knowledgebases/{kbId}\",\n  urlParameters: [\n    Parameters.endpoint,\n    Parameters.kbId\n  ],\n  responses: {\n    200: {\n      bodyMapper: Mappers.KnowledgebaseDTO\n    },\n    default: {\n      bodyMapper: Mappers.ErrorResponse\n    }\n  },\n  serializer\n};\n\nconst deleteMethodOperationSpec: msRest.OperationSpec = {\n  httpMethod: \"DELETE\",\n  path: \"knowledgebases/{kbId}\",\n  urlParameters: [\n    Parameters.endpoint,\n    Parameters.kbId\n  ],\n  responses: {\n    204: {},\n    default: {\n      bodyMapper: Mappers.ErrorResponse\n    }\n  },\n  serializer\n};\n\nconst publishOperationSpec: msRest.OperationSpec = {\n  httpMethod: \"POST\",\n  path: \"knowledgebases/{kbId}\",\n  urlParameters: [\n    Parameters.endpoint,\n    Parameters.kbId\n  ],\n  responses: {\n    204: {},\n    default: {\n      bodyMapper: Mappers.ErrorResponse\n    }\n  },\n  serializer\n};\n\nconst replaceOperationSpec: msRest.OperationSpec = {\n  httpMethod: \"PUT\",\n  path: \"knowledgebases/{kbId}\",\n  urlParameters: [\n    Parameters.endpoint,\n    Parameters.kbId\n  ],\n  requestBody: {\n    parameterPath: \"replaceKb\",\n    mapper: {\n      ...Mappers.ReplaceKbDTO,\n      required: true\n    }\n  },\n  responses: {\n    204: {},\n    default: {\n      bodyMapper: Mappers.ErrorResponse\n    }\n  },\n  serializer\n};\n\nconst updateOperationSpec: msRest.OperationSpec = {\n  httpMethod: \"PATCH\",\n  path: \"knowledgebases/{kbId}\",\n  urlParameters: [\n    Parameters.endpoint,\n    Parameters.kbId\n  ],\n  requestBody: {\n    parameterPath: \"updateKb\",\n    mapper: {\n      ...Mappers.UpdateKbOperationDTO,\n      required: true\n    }\n  },\n  responses: {\n    202: {\n      bodyMapper: Mappers.Operation,\n      headersMapper: Mappers.KnowledgebaseUpdateHeaders\n    },\n    default: {\n      bodyMapper: Mappers.ErrorResponse,\n      headersMapper: Mappers.KnowledgebaseUpdateHeaders\n    }\n  },\n  serializer\n};\n\nconst createOperationSpec: msRest.OperationSpec = {\n  httpMethod: \"POST\",\n  path: \"knowledgebases/create\",\n  urlParameters: [\n    Parameters.endpoint\n  ],\n  requestBody: {\n    parameterPath: \"createKbPayload\",\n    mapper: {\n      ...Mappers.CreateKbDTO,\n      required: true\n    }\n  },\n  responses: {\n    202: {\n      bodyMapper: Mappers.Operation\n    },\n    default: {\n      bodyMapper: Mappers.ErrorResponse\n    }\n  },\n  serializer\n};\n\nconst downloadOperationSpec: msRest.OperationSpec = {\n  httpMethod: \"GET\",\n  path: \"knowledgebases/{kbId}/{environment}/qna\",\n  urlParameters: [\n    Parameters.endpoint,\n    Parameters.kbId,\n    Parameters.environment\n  ],\n  queryParameters: [\n    Parameters.source,\n    Parameters.changedSince\n  ],\n  responses: {\n    200: {\n      bodyMapper: Mappers.QnADocumentsDTO\n    },\n    default: {\n      bodyMapper: Mappers.ErrorResponse\n    }\n  },\n  serializer\n};\n\nconst generateAnswerOperationSpec: msRest.OperationSpec = {\n  httpMethod: \"POST\",\n  path: \"knowledgebases/{kbId}/generateAnswer\",\n  urlParameters: [\n    Parameters.endpoint,\n    Parameters.kbId\n  ],\n  requestBody: {\n    parameterPath: \"generateAnswerPayload\",\n    mapper: {\n      ...Mappers.QueryDTO,\n      required: true\n    }\n  },\n  responses: {\n    200: {\n      bodyMapper: Mappers.QnASearchResultList\n    },\n    default: {\n      bodyMapper: Mappers.ErrorResponse\n    }\n  },\n  serializer\n};\n\nconst trainOperationSpec: msRest.OperationSpec = {\n  httpMethod: \"POST\",\n  path: \"knowledgebases/{kbId}/train\",\n  urlParameters: [\n    Parameters.endpoint,\n    Parameters.kbId\n  ],\n  requestBody: {\n    parameterPath: \"trainPayload\",\n    mapper: {\n      ...Mappers.FeedbackRecordsDTO,\n      required: true\n    }\n  },\n  responses: {\n    204: {},\n    default: {\n      bodyMapper: Mappers.ErrorResponse\n    }\n  },\n  serializer\n};\n","/*\n * Copyright (c) Microsoft Corporation.\n * Licensed under the MIT License.\n *\n * Code generated by Microsoft (R) AutoRest Code Generator.\n * Changes may cause incorrect behavior and will be lost if the code is regenerated.\n */\n\nexport {\n  ErrorModel,\n  ErrorResponse,\n  ErrorResponseError,\n  InnerErrorModel,\n  Operation,\n  OperationsGetDetailsHeaders\n} from \"../models/mappers\";\n","/*\n * Copyright (c) Microsoft Corporation.\n * Licensed under the MIT License.\n *\n * Code generated by Microsoft (R) AutoRest Code Generator.\n * Changes may cause incorrect behavior and will be lost if the code is\n * regenerated.\n */\n\nimport * as msRest from \"@azure/ms-rest-js\";\nimport * as Models from \"../models\";\nimport * as Mappers from \"../models/operationsMappers\";\nimport * as Parameters from \"../models/parameters\";\nimport { QnAMakerClientContext } from \"../qnAMakerClientContext\";\n\n/** Class representing a Operations. */\nexport class Operations {\n  private readonly client: QnAMakerClientContext;\n\n  /**\n   * Create a Operations.\n   * @param {QnAMakerClientContext} client Reference to the service client.\n   */\n  constructor(client: QnAMakerClientContext) {\n    this.client = client;\n  }\n\n  /**\n   * @summary Gets details of a specific long running operation.\n   * @param operationId Operation id.\n   * @param [options] The optional parameters\n   * @returns Promise<Models.OperationsGetDetailsResponse>\n   */\n  getDetails(operationId: string, options?: msRest.RequestOptionsBase): Promise<Models.OperationsGetDetailsResponse>;\n  /**\n   * @param operationId Operation id.\n   * @param callback The callback\n   */\n  getDetails(operationId: string, callback: msRest.ServiceCallback<Models.Operation>): void;\n  /**\n   * @param operationId Operation id.\n   * @param options The optional parameters\n   * @param callback The callback\n   */\n  getDetails(operationId: string, options: msRest.RequestOptionsBase, callback: msRest.ServiceCallback<Models.Operation>): void;\n  getDetails(operationId: string, options?: msRest.RequestOptionsBase | msRest.ServiceCallback<Models.Operation>, callback?: msRest.ServiceCallback<Models.Operation>): Promise<Models.OperationsGetDetailsResponse> {\n    return this.client.sendOperationRequest(\n      {\n        operationId,\n        options\n      },\n      getDetailsOperationSpec,\n      callback) as Promise<Models.OperationsGetDetailsResponse>;\n  }\n}\n\n// Operation Specifications\nconst serializer = new msRest.Serializer(Mappers);\nconst getDetailsOperationSpec: msRest.OperationSpec = {\n  httpMethod: \"GET\",\n  path: \"operations/{operationId}\",\n  urlParameters: [\n    Parameters.endpoint,\n    Parameters.operationId\n  ],\n  responses: {\n    200: {\n      bodyMapper: Mappers.Operation,\n      headersMapper: Mappers.OperationsGetDetailsHeaders\n    },\n    default: {\n      bodyMapper: Mappers.ErrorResponse,\n      headersMapper: Mappers.OperationsGetDetailsHeaders\n    }\n  },\n  serializer\n};\n","/*\n * Copyright (c) Microsoft Corporation.\n * Licensed under the MIT License.\n *\n * Code generated by Microsoft (R) AutoRest Code Generator.\n * Changes may cause incorrect behavior and will be lost if the code is\n * regenerated.\n */\n\nimport * as msRest from \"@azure/ms-rest-js\";\n\nconst packageName = \"@azure/cognitiveservices-qnamaker\";\nconst packageVersion = \"3.2.0\";\n\nexport class QnAMakerClientContext extends msRest.ServiceClient {\n  endpoint: string;\n  credentials: msRest.ServiceClientCredentials;\n\n  /**\n   * Initializes a new instance of the QnAMakerClientContext class.\n   * @param endpoint Supported Cognitive Services endpoint (e.g., https://< qnamaker-resource-name\n   * >.api.cognitiveservices.azure.com).\n   * @param credentials Subscription credentials which uniquely identify client subscription.\n   * @param [options] The parameter options\n   */\n  constructor(credentials: msRest.ServiceClientCredentials, endpoint: string, options?: msRest.ServiceClientOptions) {\n    if (endpoint == undefined) {\n      throw new Error(\"'endpoint' cannot be null.\");\n    }\n    if (credentials == undefined) {\n      throw new Error(\"'credentials' cannot be null.\");\n    }\n\n    if (!options) {\n      options = {};\n    }\n\n    if (!options.userAgent) {\n      const defaultUserAgent = msRest.getDefaultUserAgentValue();\n      options.userAgent = `${packageName}/${packageVersion} ${defaultUserAgent}`;\n    }\n\n    super(credentials, options);\n\n    this.baseUri = \"{Endpoint}/qnamaker/v5.0-preview.1\";\n    this.requestContentType = \"application/json; charset=utf-8\";\n    this.endpoint = endpoint;\n    this.credentials = credentials;\n  }\n}\n","/*\n * Copyright (c) Microsoft Corporation.\n * Licensed under the MIT License.\n *\n * Code generated by Microsoft (R) AutoRest Code Generator.\n * Changes may cause incorrect behavior and will be lost if the code is\n * regenerated.\n */\n\nimport * as msRest from \"@azure/ms-rest-js\";\nimport * as Models from \"./models\";\nimport * as Mappers from \"./models/mappers\";\nimport * as operations from \"./operations\";\nimport { QnAMakerClientContext } from \"./qnAMakerClientContext\";\n\nclass QnAMakerClient extends QnAMakerClientContext {\n  // Operation groups\n  endpointSettings: operations.EndpointSettings;\n  endpointKeys: operations.EndpointKeys;\n  alterations: operations.Alterations;\n  knowledgebase: operations.Knowledgebase;\n  operations: operations.Operations;\n\n  /**\n   * Initializes a new instance of the QnAMakerClient class.\n   * @param endpoint Supported Cognitive Services endpoint (e.g., https://< qnamaker-resource-name\n   * >.api.cognitiveservices.azure.com).\n   * @param credentials Subscription credentials which uniquely identify client subscription.\n   * @param [options] The parameter options\n   */\n  constructor(credentials: msRest.ServiceClientCredentials, endpoint: string, options?: msRest.ServiceClientOptions) {\n    super(credentials, endpoint, options);\n    this.endpointSettings = new operations.EndpointSettings(this);\n    this.endpointKeys = new operations.EndpointKeys(this);\n    this.alterations = new operations.Alterations(this);\n    this.knowledgebase = new operations.Knowledgebase(this);\n    this.operations = new operations.Operations(this);\n  }\n}\n\n// Operation Specifications\n\nexport {\n  QnAMakerClient,\n  QnAMakerClientContext,\n  Models as QnAMakerModels,\n  Mappers as QnAMakerMappers\n};\nexport * from \"./operations\";\n"],"names":["msRest.Serializer","Parameters.endpoint","Mappers.EndpointSettingsDTO","Mappers.ErrorResponse","serializer","Mappers","Mappers.EndpointKeysDTO","Parameters.keyType","Mappers.WordAlterationsDTO","Parameters.kbId","replaceOperationSpec","Mappers.KnowledgebasesDTO","Mappers.KnowledgebaseDTO","Mappers.ReplaceKbDTO","Mappers.UpdateKbOperationDTO","Mappers.Operation","Mappers.KnowledgebaseUpdateHeaders","Mappers.CreateKbDTO","Parameters.environment","Parameters.source","Parameters.changedSince","Mappers.QnADocumentsDTO","Mappers.QueryDTO","Mappers.QnASearchResultList","Mappers.FeedbackRecordsDTO","getDetailsOperationSpec","Parameters.operationId","Mappers.OperationsGetDetailsHeaders","msRest.getDefaultUserAgentValue","msRest.ServiceClient","operations.EndpointSettings","operations.EndpointKeys","operations.Alterations","operations.Knowledgebase","operations.Operations"],"mappings":"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"}