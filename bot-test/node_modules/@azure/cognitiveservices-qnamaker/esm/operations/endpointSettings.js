/*
 * Copyright (c) Microsoft Corporation.
 * Licensed under the MIT License.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 * Changes may cause incorrect behavior and will be lost if the code is
 * regenerated.
 */
import { __assign } from "tslib";
import * as msRest from "@azure/ms-rest-js";
import * as Mappers from "../models/endpointSettingsMappers";
import * as Parameters from "../models/parameters";
/** Class representing a EndpointSettings. */
var EndpointSettings = /** @class */ (function () {
    /**
     * Create a EndpointSettings.
     * @param {QnAMakerClientContext} client Reference to the service client.
     */
    function EndpointSettings(client) {
        this.client = client;
    }
    EndpointSettings.prototype.getSettings = function (options, callback) {
        return this.client.sendOperationRequest({
            options: options
        }, getSettingsOperationSpec, callback);
    };
    EndpointSettings.prototype.updateSettings = function (endpointSettingsPayload, options, callback) {
        return this.client.sendOperationRequest({
            endpointSettingsPayload: endpointSettingsPayload,
            options: options
        }, updateSettingsOperationSpec, callback);
    };
    return EndpointSettings;
}());
export { EndpointSettings };
// Operation Specifications
var serializer = new msRest.Serializer(Mappers);
var getSettingsOperationSpec = {
    httpMethod: "GET",
    path: "endpointSettings",
    urlParameters: [
        Parameters.endpoint
    ],
    responses: {
        200: {
            bodyMapper: Mappers.EndpointSettingsDTO
        },
        default: {
            bodyMapper: Mappers.ErrorResponse
        }
    },
    serializer: serializer
};
var updateSettingsOperationSpec = {
    httpMethod: "PATCH",
    path: "endpointSettings",
    urlParameters: [
        Parameters.endpoint
    ],
    requestBody: {
        parameterPath: "endpointSettingsPayload",
        mapper: __assign(__assign({}, Mappers.EndpointSettingsDTO), { required: true })
    },
    responses: {
        204: {},
        default: {
            bodyMapper: Mappers.ErrorResponse
        }
    },
    serializer: serializer
};
//# sourceMappingURL=endpointSettings.js.map