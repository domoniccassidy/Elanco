import * as msRest from "@azure/ms-rest-js";
import * as Models from "../models";
import { QnAMakerClientContext } from "../qnAMakerClientContext";
/** Class representing a EndpointKeys. */
export declare class EndpointKeys {
    private readonly client;
    /**
     * Create a EndpointKeys.
     * @param {QnAMakerClientContext} client Reference to the service client.
     */
    constructor(client: QnAMakerClientContext);
    /**
     * @summary Gets endpoint keys for an endpoint
     * @param [options] The optional parameters
     * @returns Promise<Models.EndpointKeysGetKeysResponse>
     */
    getKeys(options?: msRest.RequestOptionsBase): Promise<Models.EndpointKeysGetKeysResponse>;
    /**
     * @param callback The callback
     */
    getKeys(callback: msRest.ServiceCallback<Models.EndpointKeysDTO>): void;
    /**
     * @param options The optional parameters
     * @param callback The callback
     */
    getKeys(options: msRest.RequestOptionsBase, callback: msRest.ServiceCallback<Models.EndpointKeysDTO>): void;
    /**
     * @summary Re-generates an endpoint key.
     * @param keyType Type of Key
     * @param [options] The optional parameters
     * @returns Promise<Models.EndpointKeysRefreshKeysResponse>
     */
    refreshKeys(keyType: string, options?: msRest.RequestOptionsBase): Promise<Models.EndpointKeysRefreshKeysResponse>;
    /**
     * @param keyType Type of Key
     * @param callback The callback
     */
    refreshKeys(keyType: string, callback: msRest.ServiceCallback<Models.EndpointKeysDTO>): void;
    /**
     * @param keyType Type of Key
     * @param options The optional parameters
     * @param callback The callback
     */
    refreshKeys(keyType: string, options: msRest.RequestOptionsBase, callback: msRest.ServiceCallback<Models.EndpointKeysDTO>): void;
}
//# sourceMappingURL=endpointKeys.d.ts.map