/*
 * Copyright (c) Microsoft Corporation.
 * Licensed under the MIT License.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 * Changes may cause incorrect behavior and will be lost if the code is
 * regenerated.
 */
import { __assign } from "tslib";
import * as msRest from "@azure/ms-rest-js";
import * as Mappers from "../models/alterationsMappers";
import * as Parameters from "../models/parameters";
/** Class representing a Alterations. */
var Alterations = /** @class */ (function () {
    /**
     * Create a Alterations.
     * @param {QnAMakerClientContext} client Reference to the service client.
     */
    function Alterations(client) {
        this.client = client;
    }
    Alterations.prototype.get = function (options, callback) {
        return this.client.sendOperationRequest({
            options: options
        }, getOperationSpec, callback);
    };
    Alterations.prototype.replace = function (wordAlterations, options, callback) {
        return this.client.sendOperationRequest({
            wordAlterations: wordAlterations,
            options: options
        }, replaceOperationSpec, callback);
    };
    Alterations.prototype.getAlterationsForKb = function (kbId, options, callback) {
        return this.client.sendOperationRequest({
            kbId: kbId,
            options: options
        }, getAlterationsForKbOperationSpec, callback);
    };
    Alterations.prototype.replaceAlterationsForKb = function (kbId, wordAlterations, options, callback) {
        return this.client.sendOperationRequest({
            kbId: kbId,
            wordAlterations: wordAlterations,
            options: options
        }, replaceAlterationsForKbOperationSpec, callback);
    };
    return Alterations;
}());
export { Alterations };
// Operation Specifications
var serializer = new msRest.Serializer(Mappers);
var getOperationSpec = {
    httpMethod: "GET",
    path: "alterations",
    urlParameters: [
        Parameters.endpoint
    ],
    responses: {
        200: {
            bodyMapper: Mappers.WordAlterationsDTO
        },
        default: {
            bodyMapper: Mappers.ErrorResponse
        }
    },
    serializer: serializer
};
var replaceOperationSpec = {
    httpMethod: "PUT",
    path: "alterations",
    urlParameters: [
        Parameters.endpoint
    ],
    requestBody: {
        parameterPath: "wordAlterations",
        mapper: __assign(__assign({}, Mappers.WordAlterationsDTO), { required: true })
    },
    responses: {
        204: {},
        default: {
            bodyMapper: Mappers.ErrorResponse
        }
    },
    serializer: serializer
};
var getAlterationsForKbOperationSpec = {
    httpMethod: "GET",
    path: "alterations/{kbId}",
    urlParameters: [
        Parameters.endpoint,
        Parameters.kbId
    ],
    responses: {
        200: {
            bodyMapper: Mappers.WordAlterationsDTO
        },
        default: {
            bodyMapper: Mappers.ErrorResponse
        }
    },
    serializer: serializer
};
var replaceAlterationsForKbOperationSpec = {
    httpMethod: "PUT",
    path: "alterations/{kbId}",
    urlParameters: [
        Parameters.endpoint,
        Parameters.kbId
    ],
    requestBody: {
        parameterPath: "wordAlterations",
        mapper: __assign(__assign({}, Mappers.WordAlterationsDTO), { required: true })
    },
    responses: {
        204: {},
        default: {
            bodyMapper: Mappers.ErrorResponse
        }
    },
    serializer: serializer
};
//# sourceMappingURL=alterations.js.map