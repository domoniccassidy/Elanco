/*
 * Copyright (c) Microsoft Corporation. All rights reserved.
 * Licensed under the MIT License. See License.txt in the project root for
 * license information.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 * Changes may cause incorrect behavior and will be lost if the code is
 * regenerated.
 */
import { __assign } from "tslib";
import * as msRest from "@azure/ms-rest-js";
import * as Mappers from "../models/runtimeMappers";
import * as Parameters from "../models/parameters";
/** Class representing a Runtime. */
var Runtime = /** @class */ (function () {
    /**
     * Create a Runtime.
     * @param {QnAMakerRuntimeClientContext} client Reference to the service client.
     */
    function Runtime(client) {
        this.client = client;
    }
    Runtime.prototype.generateAnswer = function (kbId, generateAnswerPayload, options, callback) {
        return this.client.sendOperationRequest({
            kbId: kbId,
            generateAnswerPayload: generateAnswerPayload,
            options: options
        }, generateAnswerOperationSpec, callback);
    };
    Runtime.prototype.train = function (kbId, trainPayload, options, callback) {
        return this.client.sendOperationRequest({
            kbId: kbId,
            trainPayload: trainPayload,
            options: options
        }, trainOperationSpec, callback);
    };
    return Runtime;
}());
export { Runtime };
// Operation Specifications
var serializer = new msRest.Serializer(Mappers);
var generateAnswerOperationSpec = {
    httpMethod: "POST",
    path: "knowledgebases/{kbId}/generateAnswer",
    urlParameters: [
        Parameters.runtimeEndpoint,
        Parameters.kbId
    ],
    requestBody: {
        parameterPath: "generateAnswerPayload",
        mapper: __assign(__assign({}, Mappers.QueryDTO), { required: true })
    },
    responses: {
        200: {
            bodyMapper: Mappers.QnASearchResultList
        },
        default: {
            bodyMapper: Mappers.ErrorResponse
        }
    },
    serializer: serializer
};
var trainOperationSpec = {
    httpMethod: "POST",
    path: "knowledgebases/{kbId}/train",
    urlParameters: [
        Parameters.runtimeEndpoint,
        Parameters.kbId
    ],
    requestBody: {
        parameterPath: "trainPayload",
        mapper: __assign(__assign({}, Mappers.FeedbackRecordsDTO), { required: true })
    },
    responses: {
        204: {},
        default: {
            bodyMapper: Mappers.ErrorResponse
        }
    },
    serializer: serializer
};
//# sourceMappingURL=runtime.js.map