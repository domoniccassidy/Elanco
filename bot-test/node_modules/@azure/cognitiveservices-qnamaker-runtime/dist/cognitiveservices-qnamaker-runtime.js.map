{"version":3,"file":"cognitiveservices-qnamaker-runtime.js","sources":["../node_modules/tslib/tslib.es6.js","../src/models/index.ts","../src/models/mappers.ts","../src/models/runtimeMappers.ts","../src/models/parameters.ts","../src/operations/runtime.ts","../src/qnAMakerRuntimeClientContext.ts","../src/qnAMakerRuntimeClient.ts"],"sourcesContent":["/*! *****************************************************************************\r\nCopyright (c) Microsoft Corporation.\r\n\r\nPermission to use, copy, modify, and/or distribute this software for any\r\npurpose with or without fee is hereby granted.\r\n\r\nTHE SOFTWARE IS PROVIDED \"AS IS\" AND THE AUTHOR DISCLAIMS ALL WARRANTIES WITH\r\nREGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY\r\nAND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY SPECIAL, DIRECT,\r\nINDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM\r\nLOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR\r\nOTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR\r\nPERFORMANCE OF THIS SOFTWARE.\r\n***************************************************************************** */\r\n/* global Reflect, Promise */\r\n\r\nvar extendStatics = function(d, b) {\r\n    extendStatics = Object.setPrototypeOf ||\r\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n    return extendStatics(d, b);\r\n};\r\n\r\nexport function __extends(d, b) {\r\n    extendStatics(d, b);\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n}\r\n\r\nexport var __assign = function() {\r\n    __assign = Object.assign || function __assign(t) {\r\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n            s = arguments[i];\r\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\r\n        }\r\n        return t;\r\n    }\r\n    return __assign.apply(this, arguments);\r\n}\r\n\r\nexport function __rest(s, e) {\r\n    var t = {};\r\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\r\n        t[p] = s[p];\r\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\r\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\r\n            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\r\n                t[p[i]] = s[p[i]];\r\n        }\r\n    return t;\r\n}\r\n\r\nexport function __decorate(decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n}\r\n\r\nexport function __param(paramIndex, decorator) {\r\n    return function (target, key) { decorator(target, key, paramIndex); }\r\n}\r\n\r\nexport function __metadata(metadataKey, metadataValue) {\r\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(metadataKey, metadataValue);\r\n}\r\n\r\nexport function __awaiter(thisArg, _arguments, P, generator) {\r\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n}\r\n\r\nexport function __generator(thisArg, body) {\r\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\r\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\r\n    function verb(n) { return function (v) { return step([n, v]); }; }\r\n    function step(op) {\r\n        if (f) throw new TypeError(\"Generator is already executing.\");\r\n        while (_) try {\r\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\r\n            if (y = 0, t) op = [op[0] & 2, t.value];\r\n            switch (op[0]) {\r\n                case 0: case 1: t = op; break;\r\n                case 4: _.label++; return { value: op[1], done: false };\r\n                case 5: _.label++; y = op[1]; op = [0]; continue;\r\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\r\n                default:\r\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\r\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\r\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\r\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\r\n                    if (t[2]) _.ops.pop();\r\n                    _.trys.pop(); continue;\r\n            }\r\n            op = body.call(thisArg, _);\r\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\r\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\r\n    }\r\n}\r\n\r\nexport function __createBinding(o, m, k, k2) {\r\n    if (k2 === undefined) k2 = k;\r\n    o[k2] = m[k];\r\n}\r\n\r\nexport function __exportStar(m, exports) {\r\n    for (var p in m) if (p !== \"default\" && !exports.hasOwnProperty(p)) exports[p] = m[p];\r\n}\r\n\r\nexport function __values(o) {\r\n    var s = typeof Symbol === \"function\" && Symbol.iterator, m = s && o[s], i = 0;\r\n    if (m) return m.call(o);\r\n    if (o && typeof o.length === \"number\") return {\r\n        next: function () {\r\n            if (o && i >= o.length) o = void 0;\r\n            return { value: o && o[i++], done: !o };\r\n        }\r\n    };\r\n    throw new TypeError(s ? \"Object is not iterable.\" : \"Symbol.iterator is not defined.\");\r\n}\r\n\r\nexport function __read(o, n) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\r\n    if (!m) return o;\r\n    var i = m.call(o), r, ar = [], e;\r\n    try {\r\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\r\n    }\r\n    catch (error) { e = { error: error }; }\r\n    finally {\r\n        try {\r\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\r\n        }\r\n        finally { if (e) throw e.error; }\r\n    }\r\n    return ar;\r\n}\r\n\r\nexport function __spread() {\r\n    for (var ar = [], i = 0; i < arguments.length; i++)\r\n        ar = ar.concat(__read(arguments[i]));\r\n    return ar;\r\n}\r\n\r\nexport function __spreadArrays() {\r\n    for (var s = 0, i = 0, il = arguments.length; i < il; i++) s += arguments[i].length;\r\n    for (var r = Array(s), k = 0, i = 0; i < il; i++)\r\n        for (var a = arguments[i], j = 0, jl = a.length; j < jl; j++, k++)\r\n            r[k] = a[j];\r\n    return r;\r\n};\r\n\r\nexport function __await(v) {\r\n    return this instanceof __await ? (this.v = v, this) : new __await(v);\r\n}\r\n\r\nexport function __asyncGenerator(thisArg, _arguments, generator) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var g = generator.apply(thisArg, _arguments || []), i, q = [];\r\n    return i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i;\r\n    function verb(n) { if (g[n]) i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; }\r\n    function resume(n, v) { try { step(g[n](v)); } catch (e) { settle(q[0][3], e); } }\r\n    function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r); }\r\n    function fulfill(value) { resume(\"next\", value); }\r\n    function reject(value) { resume(\"throw\", value); }\r\n    function settle(f, v) { if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]); }\r\n}\r\n\r\nexport function __asyncDelegator(o) {\r\n    var i, p;\r\n    return i = {}, verb(\"next\"), verb(\"throw\", function (e) { throw e; }), verb(\"return\"), i[Symbol.iterator] = function () { return this; }, i;\r\n    function verb(n, f) { i[n] = o[n] ? function (v) { return (p = !p) ? { value: __await(o[n](v)), done: n === \"return\" } : f ? f(v) : v; } : f; }\r\n}\r\n\r\nexport function __asyncValues(o) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var m = o[Symbol.asyncIterator], i;\r\n    return m ? m.call(o) : (o = typeof __values === \"function\" ? __values(o) : o[Symbol.iterator](), i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i);\r\n    function verb(n) { i[n] = o[n] && function (v) { return new Promise(function (resolve, reject) { v = o[n](v), settle(resolve, reject, v.done, v.value); }); }; }\r\n    function settle(resolve, reject, d, v) { Promise.resolve(v).then(function(v) { resolve({ value: v, done: d }); }, reject); }\r\n}\r\n\r\nexport function __makeTemplateObject(cooked, raw) {\r\n    if (Object.defineProperty) { Object.defineProperty(cooked, \"raw\", { value: raw }); } else { cooked.raw = raw; }\r\n    return cooked;\r\n};\r\n\r\nexport function __importStar(mod) {\r\n    if (mod && mod.__esModule) return mod;\r\n    var result = {};\r\n    if (mod != null) for (var k in mod) if (Object.hasOwnProperty.call(mod, k)) result[k] = mod[k];\r\n    result.default = mod;\r\n    return result;\r\n}\r\n\r\nexport function __importDefault(mod) {\r\n    return (mod && mod.__esModule) ? mod : { default: mod };\r\n}\r\n\r\nexport function __classPrivateFieldGet(receiver, privateMap) {\r\n    if (!privateMap.has(receiver)) {\r\n        throw new TypeError(\"attempted to get private field on non-instance\");\r\n    }\r\n    return privateMap.get(receiver);\r\n}\r\n\r\nexport function __classPrivateFieldSet(receiver, privateMap, value) {\r\n    if (!privateMap.has(receiver)) {\r\n        throw new TypeError(\"attempted to set private field on non-instance\");\r\n    }\r\n    privateMap.set(receiver, value);\r\n    return value;\r\n}\r\n","/*\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License. See License.txt in the project root for license information.\n *\n * Code generated by Microsoft (R) AutoRest Code Generator.\n * Changes may cause incorrect behavior and will be lost if the code is regenerated.\n */\n\n\nimport * as msRest from \"@azure/ms-rest-js\";\n\n/**\n * Name - value pair of metadata.\n */\nexport interface MetadataDTO {\n  /**\n   * Metadata name.\n   */\n  name: string;\n  /**\n   * Metadata value.\n   */\n  value: string;\n}\n\n/**\n * Context associated with Qna.\n */\nexport interface ContextDTO {\n  /**\n   * To mark if a prompt is relevant only with a previous question or not.\n   * true - Do not include this QnA as search result for queries without context\n   * false - ignores context and includes this QnA in search result\n   */\n  isContextOnly?: boolean;\n  /**\n   * List of prompts associated with the answer.\n   */\n  prompts?: PromptDTO[];\n}\n\n/**\n * Context of a QnA\n */\nexport interface QnADTOContext extends ContextDTO {\n}\n\n/**\n * Q-A object.\n */\nexport interface QnADTO {\n  /**\n   * Unique id for the Q-A.\n   */\n  id?: number;\n  /**\n   * Answer text\n   */\n  answer: string;\n  /**\n   * Source from which Q-A was indexed. eg.\n   * https://docs.microsoft.com/en-us/azure/cognitive-services/QnAMaker/FAQs\n   */\n  source?: string;\n  /**\n   * List of questions associated with the answer.\n   */\n  questions: string[];\n  /**\n   * List of metadata associated with the answer.\n   */\n  metadata?: MetadataDTO[];\n  /**\n   * Context of a QnA\n   */\n  context?: QnADTOContext;\n}\n\n/**\n * QnADTO - Either QnaId or QnADTO needs to be present in a PromptDTO object\n */\nexport interface PromptDTOQna extends QnADTO {\n}\n\n/**\n * Prompt for an answer.\n */\nexport interface PromptDTO {\n  /**\n   * Index of the prompt - used in ordering of the prompts\n   */\n  displayOrder?: number;\n  /**\n   * Qna id corresponding to the prompt - if QnaId is present, QnADTO object is ignored.\n   */\n  qnaId?: number;\n  /**\n   * QnADTO - Either QnaId or QnADTO needs to be present in a PromptDTO object\n   */\n  qna?: PromptDTOQna;\n  /**\n   * Text displayed to represent a follow up question prompt\n   */\n  displayText?: string;\n}\n\n/**\n * The error object. As per Microsoft One API guidelines -\n * https://github.com/Microsoft/api-guidelines/blob/vNext/Guidelines.md#7102-error-condition-responses.\n */\nexport interface ErrorModel {\n  /**\n   * One of a server-defined set of error codes. Possible values include: 'BadArgument',\n   * 'Forbidden', 'NotFound', 'KbNotFound', 'Unauthorized', 'Unspecified', 'EndpointKeysError',\n   * 'QuotaExceeded', 'QnaRuntimeError', 'SKULimitExceeded', 'OperationNotFound', 'ServiceError',\n   * 'ValidationFailure', 'ExtractionFailure'\n   */\n  code: ErrorCodeType;\n  /**\n   * A human-readable representation of the error.\n   */\n  message?: string;\n  /**\n   * The target of the error.\n   */\n  target?: string;\n  /**\n   * An array of details about specific errors that led to this reported error.\n   */\n  details?: ErrorModel[];\n  /**\n   * An object containing more specific information than the current object about the error.\n   */\n  innerError?: InnerErrorModel;\n}\n\n/**\n * The error object.\n */\nexport interface ErrorResponseError extends ErrorModel {\n}\n\n/**\n * Error response. As per Microsoft One API guidelines -\n * https://github.com/Microsoft/api-guidelines/blob/vNext/Guidelines.md#7102-error-condition-responses.\n */\nexport interface ErrorResponse {\n  /**\n   * The error object.\n   */\n  error?: ErrorResponseError;\n}\n\n/**\n * An object containing more specific information about the error. As per Microsoft One API\n * guidelines -\n * https://github.com/Microsoft/api-guidelines/blob/vNext/Guidelines.md#7102-error-condition-responses.\n */\nexport interface InnerErrorModel {\n  /**\n   * A more specific error code than was provided by the containing error.\n   */\n  code?: string;\n  /**\n   * An object containing more specific information than the current object about the error.\n   */\n  innerError?: InnerErrorModel;\n}\n\n/**\n * Context object with previous QnA's information.\n */\nexport interface QueryContextDTO {\n  /**\n   * Previous QnA Id - qnaId of the top result.\n   */\n  previousQnaId?: string;\n  /**\n   * Previous user query.\n   */\n  previousUserQuery?: string;\n}\n\n/**\n * Context object with previous QnA's information.\n */\nexport interface QueryDTOContext extends QueryContextDTO {\n}\n\n/**\n * POST body schema to query the knowledgebase.\n */\nexport interface QueryDTO {\n  /**\n   * Exact qnaId to fetch from the knowledgebase, this field takes priority over question.\n   */\n  qnaId?: string;\n  /**\n   * User question to query against the knowledge base.\n   */\n  question?: string;\n  /**\n   * Max number of answers to be returned for the question.\n   */\n  top?: number;\n  /**\n   * Unique identifier for the user.\n   */\n  userId?: string;\n  /**\n   * Query against the test index.\n   */\n  isTest?: boolean;\n  /**\n   * Threshold for answers returned based on score.\n   */\n  scoreThreshold?: number;\n  /**\n   * Context object with previous QnA's information.\n   */\n  context?: QueryDTOContext;\n  /**\n   * Optional field. Set to 'QuestionOnly' for using a question only Ranker.\n   */\n  rankerType?: string;\n  /**\n   * Find only answers that contain these metadata.\n   */\n  strictFilters?: MetadataDTO[];\n}\n\n/**\n * Context object of the QnA\n */\nexport interface QnASearchResultContext extends ContextDTO {\n}\n\n/**\n * Represents Search Result.\n */\nexport interface QnASearchResult {\n  /**\n   * List of questions.\n   */\n  questions?: string[];\n  /**\n   * Answer.\n   */\n  answer?: string;\n  /**\n   * Search result score.\n   */\n  score?: number;\n  /**\n   * Id of the QnA result.\n   */\n  id?: number;\n  /**\n   * Source of QnA result.\n   */\n  source?: string;\n  /**\n   * List of metadata.\n   */\n  metadata?: MetadataDTO[];\n  /**\n   * Context object of the QnA\n   */\n  context?: QnASearchResultContext;\n}\n\n/**\n * Represents List of Question Answers.\n */\nexport interface QnASearchResultList {\n  /**\n   * Represents Search Result list.\n   */\n  answers?: QnASearchResult[];\n}\n\n/**\n * Active learning feedback record.\n */\nexport interface FeedbackRecordDTO {\n  /**\n   * Unique identifier for the user.\n   */\n  userId?: string;\n  /**\n   * The suggested question being provided as feedback.\n   */\n  userQuestion?: string;\n  /**\n   * The qnaId for which the suggested question is provided as feedback.\n   */\n  qnaId?: number;\n}\n\n/**\n * Active learning feedback records.\n */\nexport interface FeedbackRecordsDTO {\n  /**\n   * List of feedback records.\n   */\n  feedbackRecords?: FeedbackRecordDTO[];\n}\n\n/**\n * Defines values for ErrorCodeType.\n * Possible values include: 'BadArgument', 'Forbidden', 'NotFound', 'KbNotFound', 'Unauthorized',\n * 'Unspecified', 'EndpointKeysError', 'QuotaExceeded', 'QnaRuntimeError', 'SKULimitExceeded',\n * 'OperationNotFound', 'ServiceError', 'ValidationFailure', 'ExtractionFailure'\n * @readonly\n * @enum {string}\n */\nexport type ErrorCodeType = 'BadArgument' | 'Forbidden' | 'NotFound' | 'KbNotFound' | 'Unauthorized' | 'Unspecified' | 'EndpointKeysError' | 'QuotaExceeded' | 'QnaRuntimeError' | 'SKULimitExceeded' | 'OperationNotFound' | 'ServiceError' | 'ValidationFailure' | 'ExtractionFailure';\n\n/**\n * Contains response data for the generateAnswer operation.\n */\nexport type RuntimeGenerateAnswerResponse = QnASearchResultList & {\n  /**\n   * The underlying HTTP response.\n   */\n  _response: msRest.HttpResponse & {\n      /**\n       * The response body as text (string format)\n       */\n      bodyAsText: string;\n\n      /**\n       * The response body as parsed JSON or XML\n       */\n      parsedBody: QnASearchResultList;\n    };\n};\n","/*\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License. See License.txt in the project root for license information.\n *\n * Code generated by Microsoft (R) AutoRest Code Generator.\n * Changes may cause incorrect behavior and will be lost if the code is regenerated.\n */\n\nimport * as msRest from \"@azure/ms-rest-js\";\n\n\nexport const MetadataDTO: msRest.CompositeMapper = {\n  serializedName: \"MetadataDTO\",\n  type: {\n    name: \"Composite\",\n    className: \"MetadataDTO\",\n    modelProperties: {\n      name: {\n        required: true,\n        serializedName: \"name\",\n        constraints: {\n          MaxLength: 100,\n          MinLength: 1\n        },\n        type: {\n          name: \"String\"\n        }\n      },\n      value: {\n        required: true,\n        serializedName: \"value\",\n        constraints: {\n          MaxLength: 500,\n          MinLength: 1\n        },\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const ContextDTO: msRest.CompositeMapper = {\n  serializedName: \"ContextDTO\",\n  type: {\n    name: \"Composite\",\n    className: \"ContextDTO\",\n    modelProperties: {\n      isContextOnly: {\n        serializedName: \"isContextOnly\",\n        type: {\n          name: \"Boolean\"\n        }\n      },\n      prompts: {\n        serializedName: \"prompts\",\n        constraints: {\n          MaxItems: 20\n        },\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"Composite\",\n              className: \"PromptDTO\"\n            }\n          }\n        }\n      }\n    }\n  }\n};\n\nexport const QnADTOContext: msRest.CompositeMapper = {\n  serializedName: \"QnADTO_context\",\n  type: {\n    name: \"Composite\",\n    className: \"QnADTOContext\",\n    modelProperties: {\n      ...ContextDTO.type.modelProperties\n    }\n  }\n};\n\nexport const QnADTO: msRest.CompositeMapper = {\n  serializedName: \"QnADTO\",\n  type: {\n    name: \"Composite\",\n    className: \"QnADTO\",\n    modelProperties: {\n      id: {\n        serializedName: \"id\",\n        type: {\n          name: \"Number\"\n        }\n      },\n      answer: {\n        required: true,\n        serializedName: \"answer\",\n        constraints: {\n          MaxLength: 25000,\n          MinLength: 1\n        },\n        type: {\n          name: \"String\"\n        }\n      },\n      source: {\n        serializedName: \"source\",\n        constraints: {\n          MaxLength: 300\n        },\n        type: {\n          name: \"String\"\n        }\n      },\n      questions: {\n        required: true,\n        serializedName: \"questions\",\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"String\"\n            }\n          }\n        }\n      },\n      metadata: {\n        serializedName: \"metadata\",\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"Composite\",\n              className: \"MetadataDTO\"\n            }\n          }\n        }\n      },\n      context: {\n        serializedName: \"context\",\n        type: {\n          name: \"Composite\",\n          className: \"QnADTOContext\"\n        }\n      }\n    }\n  }\n};\n\nexport const PromptDTOQna: msRest.CompositeMapper = {\n  serializedName: \"PromptDTO_qna\",\n  type: {\n    name: \"Composite\",\n    className: \"PromptDTOQna\",\n    modelProperties: {\n      ...QnADTO.type.modelProperties\n    }\n  }\n};\n\nexport const PromptDTO: msRest.CompositeMapper = {\n  serializedName: \"PromptDTO\",\n  type: {\n    name: \"Composite\",\n    className: \"PromptDTO\",\n    modelProperties: {\n      displayOrder: {\n        serializedName: \"displayOrder\",\n        type: {\n          name: \"Number\"\n        }\n      },\n      qnaId: {\n        serializedName: \"qnaId\",\n        type: {\n          name: \"Number\"\n        }\n      },\n      qna: {\n        serializedName: \"qna\",\n        type: {\n          name: \"Composite\",\n          className: \"PromptDTOQna\"\n        }\n      },\n      displayText: {\n        serializedName: \"displayText\",\n        constraints: {\n          MaxLength: 200\n        },\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const ErrorModel: msRest.CompositeMapper = {\n  serializedName: \"Error\",\n  type: {\n    name: \"Composite\",\n    className: \"ErrorModel\",\n    modelProperties: {\n      code: {\n        required: true,\n        serializedName: \"code\",\n        type: {\n          name: \"String\"\n        }\n      },\n      message: {\n        serializedName: \"message\",\n        type: {\n          name: \"String\"\n        }\n      },\n      target: {\n        serializedName: \"target\",\n        type: {\n          name: \"String\"\n        }\n      },\n      details: {\n        serializedName: \"details\",\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"Composite\",\n              className: \"ErrorModel\"\n            }\n          }\n        }\n      },\n      innerError: {\n        serializedName: \"innerError\",\n        type: {\n          name: \"Composite\",\n          className: \"InnerErrorModel\"\n        }\n      }\n    }\n  }\n};\n\nexport const ErrorResponseError: msRest.CompositeMapper = {\n  serializedName: \"ErrorResponse_error\",\n  type: {\n    name: \"Composite\",\n    className: \"ErrorResponseError\",\n    modelProperties: {\n      ...ErrorModel.type.modelProperties\n    }\n  }\n};\n\nexport const ErrorResponse: msRest.CompositeMapper = {\n  serializedName: \"ErrorResponse\",\n  type: {\n    name: \"Composite\",\n    className: \"ErrorResponse\",\n    modelProperties: {\n      error: {\n        serializedName: \"error\",\n        type: {\n          name: \"Composite\",\n          className: \"ErrorResponseError\"\n        }\n      }\n    }\n  }\n};\n\nexport const InnerErrorModel: msRest.CompositeMapper = {\n  serializedName: \"InnerErrorModel\",\n  type: {\n    name: \"Composite\",\n    className: \"InnerErrorModel\",\n    modelProperties: {\n      code: {\n        serializedName: \"code\",\n        type: {\n          name: \"String\"\n        }\n      },\n      innerError: {\n        serializedName: \"innerError\",\n        type: {\n          name: \"Composite\",\n          className: \"InnerErrorModel\"\n        }\n      }\n    }\n  }\n};\n\nexport const QueryContextDTO: msRest.CompositeMapper = {\n  serializedName: \"QueryContextDTO\",\n  type: {\n    name: \"Composite\",\n    className: \"QueryContextDTO\",\n    modelProperties: {\n      previousQnaId: {\n        serializedName: \"previousQnaId\",\n        type: {\n          name: \"String\"\n        }\n      },\n      previousUserQuery: {\n        serializedName: \"previousUserQuery\",\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const QueryDTOContext: msRest.CompositeMapper = {\n  serializedName: \"QueryDTO_context\",\n  type: {\n    name: \"Composite\",\n    className: \"QueryDTOContext\",\n    modelProperties: {\n      ...QueryContextDTO.type.modelProperties\n    }\n  }\n};\n\nexport const QueryDTO: msRest.CompositeMapper = {\n  serializedName: \"QueryDTO\",\n  type: {\n    name: \"Composite\",\n    className: \"QueryDTO\",\n    modelProperties: {\n      qnaId: {\n        serializedName: \"qnaId\",\n        type: {\n          name: \"String\"\n        }\n      },\n      question: {\n        serializedName: \"question\",\n        type: {\n          name: \"String\"\n        }\n      },\n      top: {\n        serializedName: \"top\",\n        type: {\n          name: \"Number\"\n        }\n      },\n      userId: {\n        serializedName: \"userId\",\n        type: {\n          name: \"String\"\n        }\n      },\n      isTest: {\n        serializedName: \"isTest\",\n        type: {\n          name: \"Boolean\"\n        }\n      },\n      scoreThreshold: {\n        serializedName: \"scoreThreshold\",\n        type: {\n          name: \"Number\"\n        }\n      },\n      context: {\n        serializedName: \"context\",\n        type: {\n          name: \"Composite\",\n          className: \"QueryDTOContext\"\n        }\n      },\n      rankerType: {\n        serializedName: \"rankerType\",\n        type: {\n          name: \"String\"\n        }\n      },\n      strictFilters: {\n        serializedName: \"strictFilters\",\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"Composite\",\n              className: \"MetadataDTO\"\n            }\n          }\n        }\n      }\n    }\n  }\n};\n\nexport const QnASearchResultContext: msRest.CompositeMapper = {\n  serializedName: \"QnASearchResult_context\",\n  type: {\n    name: \"Composite\",\n    className: \"QnASearchResultContext\",\n    modelProperties: {\n      ...ContextDTO.type.modelProperties\n    }\n  }\n};\n\nexport const QnASearchResult: msRest.CompositeMapper = {\n  serializedName: \"QnASearchResult\",\n  type: {\n    name: \"Composite\",\n    className: \"QnASearchResult\",\n    modelProperties: {\n      questions: {\n        serializedName: \"questions\",\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"String\"\n            }\n          }\n        }\n      },\n      answer: {\n        serializedName: \"answer\",\n        type: {\n          name: \"String\"\n        }\n      },\n      score: {\n        serializedName: \"score\",\n        type: {\n          name: \"Number\"\n        }\n      },\n      id: {\n        serializedName: \"id\",\n        type: {\n          name: \"Number\"\n        }\n      },\n      source: {\n        serializedName: \"source\",\n        type: {\n          name: \"String\"\n        }\n      },\n      metadata: {\n        serializedName: \"metadata\",\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"Composite\",\n              className: \"MetadataDTO\"\n            }\n          }\n        }\n      },\n      context: {\n        serializedName: \"context\",\n        type: {\n          name: \"Composite\",\n          className: \"QnASearchResultContext\"\n        }\n      }\n    }\n  }\n};\n\nexport const QnASearchResultList: msRest.CompositeMapper = {\n  serializedName: \"QnASearchResultList\",\n  type: {\n    name: \"Composite\",\n    className: \"QnASearchResultList\",\n    modelProperties: {\n      answers: {\n        serializedName: \"answers\",\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"Composite\",\n              className: \"QnASearchResult\"\n            }\n          }\n        }\n      }\n    }\n  }\n};\n\nexport const FeedbackRecordDTO: msRest.CompositeMapper = {\n  serializedName: \"FeedbackRecordDTO\",\n  type: {\n    name: \"Composite\",\n    className: \"FeedbackRecordDTO\",\n    modelProperties: {\n      userId: {\n        serializedName: \"userId\",\n        type: {\n          name: \"String\"\n        }\n      },\n      userQuestion: {\n        serializedName: \"userQuestion\",\n        constraints: {\n          MaxLength: 1000\n        },\n        type: {\n          name: \"String\"\n        }\n      },\n      qnaId: {\n        serializedName: \"qnaId\",\n        type: {\n          name: \"Number\"\n        }\n      }\n    }\n  }\n};\n\nexport const FeedbackRecordsDTO: msRest.CompositeMapper = {\n  serializedName: \"FeedbackRecordsDTO\",\n  type: {\n    name: \"Composite\",\n    className: \"FeedbackRecordsDTO\",\n    modelProperties: {\n      feedbackRecords: {\n        serializedName: \"feedbackRecords\",\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"Composite\",\n              className: \"FeedbackRecordDTO\"\n            }\n          }\n        }\n      }\n    }\n  }\n};\n","/*\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License. See License.txt in the project root for license information.\n *\n * Code generated by Microsoft (R) AutoRest Code Generator.\n * Changes may cause incorrect behavior and will be lost if the code is regenerated.\n */\n\nexport {\n  ContextDTO,\n  ErrorModel,\n  ErrorResponse,\n  ErrorResponseError,\n  FeedbackRecordDTO,\n  FeedbackRecordsDTO,\n  InnerErrorModel,\n  MetadataDTO,\n  PromptDTO,\n  PromptDTOQna,\n  QnADTO,\n  QnADTOContext,\n  QnASearchResult,\n  QnASearchResultContext,\n  QnASearchResultList,\n  QueryContextDTO,\n  QueryDTO,\n  QueryDTOContext\n} from \"../models/mappers\";\n","/*\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License. See License.txt in the project root for\n * license information.\n *\n * Code generated by Microsoft (R) AutoRest Code Generator.\n * Changes may cause incorrect behavior and will be lost if the code is\n * regenerated.\n */\n\nimport * as msRest from \"@azure/ms-rest-js\";\n\nexport const kbId: msRest.OperationURLParameter = {\n  parameterPath: \"kbId\",\n  mapper: {\n    required: true,\n    serializedName: \"kbId\",\n    type: {\n      name: \"String\"\n    }\n  }\n};\nexport const runtimeEndpoint: msRest.OperationURLParameter = {\n  parameterPath: \"runtimeEndpoint\",\n  mapper: {\n    required: true,\n    serializedName: \"RuntimeEndpoint\",\n    defaultValue: '',\n    type: {\n      name: \"String\"\n    }\n  },\n  skipEncoding: true\n};\n","/*\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License. See License.txt in the project root for\n * license information.\n *\n * Code generated by Microsoft (R) AutoRest Code Generator.\n * Changes may cause incorrect behavior and will be lost if the code is\n * regenerated.\n */\n\nimport * as msRest from \"@azure/ms-rest-js\";\nimport * as Models from \"../models\";\nimport * as Mappers from \"../models/runtimeMappers\";\nimport * as Parameters from \"../models/parameters\";\nimport { QnAMakerRuntimeClientContext } from \"../qnAMakerRuntimeClientContext\";\n\n/** Class representing a Runtime. */\nexport class Runtime {\n  private readonly client: QnAMakerRuntimeClientContext;\n\n  /**\n   * Create a Runtime.\n   * @param {QnAMakerRuntimeClientContext} client Reference to the service client.\n   */\n  constructor(client: QnAMakerRuntimeClientContext) {\n    this.client = client;\n  }\n\n  /**\n   * @summary GenerateAnswer call to query the knowledgebase.\n   * @param kbId Knowledgebase id.\n   * @param generateAnswerPayload Post body of the request.\n   * @param [options] The optional parameters\n   * @returns Promise<Models.RuntimeGenerateAnswerResponse>\n   */\n  generateAnswer(kbId: string, generateAnswerPayload: Models.QueryDTO, options?: msRest.RequestOptionsBase): Promise<Models.RuntimeGenerateAnswerResponse>;\n  /**\n   * @param kbId Knowledgebase id.\n   * @param generateAnswerPayload Post body of the request.\n   * @param callback The callback\n   */\n  generateAnswer(kbId: string, generateAnswerPayload: Models.QueryDTO, callback: msRest.ServiceCallback<Models.QnASearchResultList>): void;\n  /**\n   * @param kbId Knowledgebase id.\n   * @param generateAnswerPayload Post body of the request.\n   * @param options The optional parameters\n   * @param callback The callback\n   */\n  generateAnswer(kbId: string, generateAnswerPayload: Models.QueryDTO, options: msRest.RequestOptionsBase, callback: msRest.ServiceCallback<Models.QnASearchResultList>): void;\n  generateAnswer(kbId: string, generateAnswerPayload: Models.QueryDTO, options?: msRest.RequestOptionsBase | msRest.ServiceCallback<Models.QnASearchResultList>, callback?: msRest.ServiceCallback<Models.QnASearchResultList>): Promise<Models.RuntimeGenerateAnswerResponse> {\n    return this.client.sendOperationRequest(\n      {\n        kbId,\n        generateAnswerPayload,\n        options\n      },\n      generateAnswerOperationSpec,\n      callback) as Promise<Models.RuntimeGenerateAnswerResponse>;\n  }\n\n  /**\n   * @summary Train call to add suggestions to the knowledgebase.\n   * @param kbId Knowledgebase id.\n   * @param trainPayload Post body of the request.\n   * @param [options] The optional parameters\n   * @returns Promise<msRest.RestResponse>\n   */\n  train(kbId: string, trainPayload: Models.FeedbackRecordsDTO, options?: msRest.RequestOptionsBase): Promise<msRest.RestResponse>;\n  /**\n   * @param kbId Knowledgebase id.\n   * @param trainPayload Post body of the request.\n   * @param callback The callback\n   */\n  train(kbId: string, trainPayload: Models.FeedbackRecordsDTO, callback: msRest.ServiceCallback<void>): void;\n  /**\n   * @param kbId Knowledgebase id.\n   * @param trainPayload Post body of the request.\n   * @param options The optional parameters\n   * @param callback The callback\n   */\n  train(kbId: string, trainPayload: Models.FeedbackRecordsDTO, options: msRest.RequestOptionsBase, callback: msRest.ServiceCallback<void>): void;\n  train(kbId: string, trainPayload: Models.FeedbackRecordsDTO, options?: msRest.RequestOptionsBase | msRest.ServiceCallback<void>, callback?: msRest.ServiceCallback<void>): Promise<msRest.RestResponse> {\n    return this.client.sendOperationRequest(\n      {\n        kbId,\n        trainPayload,\n        options\n      },\n      trainOperationSpec,\n      callback);\n  }\n}\n\n// Operation Specifications\nconst serializer = new msRest.Serializer(Mappers);\nconst generateAnswerOperationSpec: msRest.OperationSpec = {\n  httpMethod: \"POST\",\n  path: \"knowledgebases/{kbId}/generateAnswer\",\n  urlParameters: [\n    Parameters.runtimeEndpoint,\n    Parameters.kbId\n  ],\n  requestBody: {\n    parameterPath: \"generateAnswerPayload\",\n    mapper: {\n      ...Mappers.QueryDTO,\n      required: true\n    }\n  },\n  responses: {\n    200: {\n      bodyMapper: Mappers.QnASearchResultList\n    },\n    default: {\n      bodyMapper: Mappers.ErrorResponse\n    }\n  },\n  serializer\n};\n\nconst trainOperationSpec: msRest.OperationSpec = {\n  httpMethod: \"POST\",\n  path: \"knowledgebases/{kbId}/train\",\n  urlParameters: [\n    Parameters.runtimeEndpoint,\n    Parameters.kbId\n  ],\n  requestBody: {\n    parameterPath: \"trainPayload\",\n    mapper: {\n      ...Mappers.FeedbackRecordsDTO,\n      required: true\n    }\n  },\n  responses: {\n    204: {},\n    default: {\n      bodyMapper: Mappers.ErrorResponse\n    }\n  },\n  serializer\n};\n","/*\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License. See License.txt in the project root for\n * license information.\n *\n * Code generated by Microsoft (R) AutoRest Code Generator.\n * Changes may cause incorrect behavior and will be lost if the code is\n * regenerated.\n */\n\nimport * as msRest from \"@azure/ms-rest-js\";\n\nconst packageName = \"@azure/cognitiveservices-qnamaker-runtime\";\nconst packageVersion = \"1.0.1\";\n\nexport class QnAMakerRuntimeClientContext extends msRest.ServiceClient {\n  runtimeEndpoint: string;\n  credentials: msRest.ServiceClientCredentials;\n\n  /**\n   * Initializes a new instance of the QnAMakerRuntimeClientContext class.\n   * @param runtimeEndpoint QnA Maker App Service endpoint (for example:\n   * https://{qnaservice-hostname}.azurewebsites.net).\n   * @param credentials Subscription credentials which uniquely identify client subscription.\n   * @param [options] The parameter options\n   */\n  constructor(credentials: msRest.ServiceClientCredentials, runtimeEndpoint: string, options?: msRest.ServiceClientOptions) {\n    if (runtimeEndpoint == undefined) {\n      throw new Error(\"'runtimeEndpoint' cannot be null.\");\n    }\n    if (credentials == undefined) {\n      throw new Error(\"'credentials' cannot be null.\");\n    }\n\n    if (!options) {\n      options = {};\n    }\n\n    if (!options.userAgent) {\n      const defaultUserAgent = msRest.getDefaultUserAgentValue();\n      options.userAgent = `${packageName}/${packageVersion} ${defaultUserAgent}`;\n    }\n\n    super(credentials, options);\n\n    this.baseUri = \"{RuntimeEndpoint}/qnamaker\";\n    this.requestContentType = \"application/json; charset=utf-8\";\n    this.runtimeEndpoint = runtimeEndpoint;\n    this.credentials = credentials;\n  }\n}\n","/*\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License. See License.txt in the project root for\n * license information.\n *\n * Code generated by Microsoft (R) AutoRest Code Generator.\n * Changes may cause incorrect behavior and will be lost if the code is\n * regenerated.\n */\n\nimport * as msRest from \"@azure/ms-rest-js\";\nimport * as Models from \"./models\";\nimport * as Mappers from \"./models/mappers\";\nimport * as operations from \"./operations\";\nimport { QnAMakerRuntimeClientContext } from \"./qnAMakerRuntimeClientContext\";\n\nclass QnAMakerRuntimeClient extends QnAMakerRuntimeClientContext {\n  // Operation groups\n  runtime: operations.Runtime;\n\n  /**\n   * Initializes a new instance of the QnAMakerRuntimeClient class.\n   * @param runtimeEndpoint QnA Maker App Service endpoint (for example:\n   * https://{qnaservice-hostname}.azurewebsites.net).\n   * @param credentials Subscription credentials which uniquely identify client subscription.\n   * @param [options] The parameter options\n   */\n  constructor(credentials: msRest.ServiceClientCredentials, runtimeEndpoint: string, options?: msRest.ServiceClientOptions) {\n    super(credentials, runtimeEndpoint, options);\n    this.runtime = new operations.Runtime(this);\n  }\n}\n\n// Operation Specifications\n\nexport {\n  QnAMakerRuntimeClient,\n  QnAMakerRuntimeClientContext,\n  Models as QnAMakerRuntimeModels,\n  Mappers as QnAMakerRuntimeMappers\n};\nexport * from \"./operations\";\n"],"names":["msRest.Serializer","Parameters.runtimeEndpoint","Parameters.kbId","Mappers.QueryDTO","Mappers.QnASearchResultList","Mappers.ErrorResponse","Mappers.FeedbackRecordsDTO","msRest.getDefaultUserAgentValue","msRest.ServiceClient","operations.Runtime"],"mappings":";;;;;;;;;;;;;IAAA;IACA;AACA;IACA;IACA;AACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;AACA;IACA,IAAI,aAAa,GAAG,SAAS,CAAC,EAAE,CAAC,EAAE;IACnC,IAAI,aAAa,GAAG,MAAM,CAAC,cAAc;IACzC,SAAS,EAAE,SAAS,EAAE,EAAE,EAAE,YAAY,KAAK,IAAI,UAAU,CAAC,EAAE,CAAC,EAAE,EAAE,CAAC,CAAC,SAAS,GAAG,CAAC,CAAC,EAAE,CAAC;IACpF,QAAQ,UAAU,CAAC,EAAE,CAAC,EAAE,EAAE,KAAK,IAAI,CAAC,IAAI,CAAC,EAAE,IAAI,CAAC,CAAC,cAAc,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC;IACnF,IAAI,OAAO,aAAa,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC;IAC/B,CAAC,CAAC;AACF;IACO,SAAS,SAAS,CAAC,CAAC,EAAE,CAAC,EAAE;IAChC,IAAI,aAAa,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC;IACxB,IAAI,SAAS,EAAE,GAAG,EAAE,IAAI,CAAC,WAAW,GAAG,CAAC,CAAC,EAAE;IAC3C,IAAI,CAAC,CAAC,SAAS,GAAG,CAAC,KAAK,IAAI,GAAG,MAAM,CAAC,MAAM,CAAC,CAAC,CAAC,IAAI,EAAE,CAAC,SAAS,GAAG,CAAC,CAAC,SAAS,EAAE,IAAI,EAAE,EAAE,CAAC,CAAC;IACzF,CAAC;AACD;IACO,IAAI,QAAQ,GAAG,WAAW;IACjC,IAAI,QAAQ,GAAG,MAAM,CAAC,MAAM,IAAI,SAAS,QAAQ,CAAC,CAAC,EAAE;IACrD,QAAQ,KAAK,IAAI,CAAC,EAAE,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,SAAS,CAAC,MAAM,EAAE,CAAC,GAAG,CAAC,EAAE,CAAC,EAAE,EAAE;IAC7D,YAAY,CAAC,GAAG,SAAS,CAAC,CAAC,CAAC,CAAC;IAC7B,YAAY,KAAK,IAAI,CAAC,IAAI,CAAC,EAAE,IAAI,MAAM,CAAC,SAAS,CAAC,cAAc,CAAC,IAAI,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC;IACzF,SAAS;IACT,QAAQ,OAAO,CAAC,CAAC;IACjB,MAAK;IACL,IAAI,OAAO,QAAQ,CAAC,KAAK,CAAC,IAAI,EAAE,SAAS,CAAC,CAAC;IAC3C;;ICtCA;;;;;;OAMG;;;;;;ICNH;;;;;;;IAWO,IAAM,WAAW,GAA2B;QACjD,cAAc,EAAE,aAAa;QAC7B,IAAI,EAAE;YACJ,IAAI,EAAE,WAAW;YACjB,SAAS,EAAE,aAAa;YACxB,eAAe,EAAE;gBACf,IAAI,EAAE;oBACJ,QAAQ,EAAE,IAAI;oBACd,cAAc,EAAE,MAAM;oBACtB,WAAW,EAAE;wBACX,SAAS,EAAE,GAAG;wBACd,SAAS,EAAE,CAAC;qBACb;oBACD,IAAI,EAAE;wBACJ,IAAI,EAAE,QAAQ;qBACf;iBACF;gBACD,KAAK,EAAE;oBACL,QAAQ,EAAE,IAAI;oBACd,cAAc,EAAE,OAAO;oBACvB,WAAW,EAAE;wBACX,SAAS,EAAE,GAAG;wBACd,SAAS,EAAE,CAAC;qBACb;oBACD,IAAI,EAAE;wBACJ,IAAI,EAAE,QAAQ;qBACf;iBACF;aACF;SACF;KACF,CAAC;AAEF,IAAO,IAAM,UAAU,GAA2B;QAChD,cAAc,EAAE,YAAY;QAC5B,IAAI,EAAE;YACJ,IAAI,EAAE,WAAW;YACjB,SAAS,EAAE,YAAY;YACvB,eAAe,EAAE;gBACf,aAAa,EAAE;oBACb,cAAc,EAAE,eAAe;oBAC/B,IAAI,EAAE;wBACJ,IAAI,EAAE,SAAS;qBAChB;iBACF;gBACD,OAAO,EAAE;oBACP,cAAc,EAAE,SAAS;oBACzB,WAAW,EAAE;wBACX,QAAQ,EAAE,EAAE;qBACb;oBACD,IAAI,EAAE;wBACJ,IAAI,EAAE,UAAU;wBAChB,OAAO,EAAE;4BACP,IAAI,EAAE;gCACJ,IAAI,EAAE,WAAW;gCACjB,SAAS,EAAE,WAAW;6BACvB;yBACF;qBACF;iBACF;aACF;SACF;KACF,CAAC;AAEF,IAAO,IAAM,aAAa,GAA2B;QACnD,cAAc,EAAE,gBAAgB;QAChC,IAAI,EAAE;YACJ,IAAI,EAAE,WAAW;YACjB,SAAS,EAAE,eAAe;YAC1B,eAAe,eACV,UAAU,CAAC,IAAI,CAAC,eAAe,CACnC;SACF;KACF,CAAC;AAEF,IAAO,IAAM,MAAM,GAA2B;QAC5C,cAAc,EAAE,QAAQ;QACxB,IAAI,EAAE;YACJ,IAAI,EAAE,WAAW;YACjB,SAAS,EAAE,QAAQ;YACnB,eAAe,EAAE;gBACf,EAAE,EAAE;oBACF,cAAc,EAAE,IAAI;oBACpB,IAAI,EAAE;wBACJ,IAAI,EAAE,QAAQ;qBACf;iBACF;gBACD,MAAM,EAAE;oBACN,QAAQ,EAAE,IAAI;oBACd,cAAc,EAAE,QAAQ;oBACxB,WAAW,EAAE;wBACX,SAAS,EAAE,KAAK;wBAChB,SAAS,EAAE,CAAC;qBACb;oBACD,IAAI,EAAE;wBACJ,IAAI,EAAE,QAAQ;qBACf;iBACF;gBACD,MAAM,EAAE;oBACN,cAAc,EAAE,QAAQ;oBACxB,WAAW,EAAE;wBACX,SAAS,EAAE,GAAG;qBACf;oBACD,IAAI,EAAE;wBACJ,IAAI,EAAE,QAAQ;qBACf;iBACF;gBACD,SAAS,EAAE;oBACT,QAAQ,EAAE,IAAI;oBACd,cAAc,EAAE,WAAW;oBAC3B,IAAI,EAAE;wBACJ,IAAI,EAAE,UAAU;wBAChB,OAAO,EAAE;4BACP,IAAI,EAAE;gCACJ,IAAI,EAAE,QAAQ;6BACf;yBACF;qBACF;iBACF;gBACD,QAAQ,EAAE;oBACR,cAAc,EAAE,UAAU;oBAC1B,IAAI,EAAE;wBACJ,IAAI,EAAE,UAAU;wBAChB,OAAO,EAAE;4BACP,IAAI,EAAE;gCACJ,IAAI,EAAE,WAAW;gCACjB,SAAS,EAAE,aAAa;6BACzB;yBACF;qBACF;iBACF;gBACD,OAAO,EAAE;oBACP,cAAc,EAAE,SAAS;oBACzB,IAAI,EAAE;wBACJ,IAAI,EAAE,WAAW;wBACjB,SAAS,EAAE,eAAe;qBAC3B;iBACF;aACF;SACF;KACF,CAAC;AAEF,IAAO,IAAM,YAAY,GAA2B;QAClD,cAAc,EAAE,eAAe;QAC/B,IAAI,EAAE;YACJ,IAAI,EAAE,WAAW;YACjB,SAAS,EAAE,cAAc;YACzB,eAAe,eACV,MAAM,CAAC,IAAI,CAAC,eAAe,CAC/B;SACF;KACF,CAAC;AAEF,IAAO,IAAM,SAAS,GAA2B;QAC/C,cAAc,EAAE,WAAW;QAC3B,IAAI,EAAE;YACJ,IAAI,EAAE,WAAW;YACjB,SAAS,EAAE,WAAW;YACtB,eAAe,EAAE;gBACf,YAAY,EAAE;oBACZ,cAAc,EAAE,cAAc;oBAC9B,IAAI,EAAE;wBACJ,IAAI,EAAE,QAAQ;qBACf;iBACF;gBACD,KAAK,EAAE;oBACL,cAAc,EAAE,OAAO;oBACvB,IAAI,EAAE;wBACJ,IAAI,EAAE,QAAQ;qBACf;iBACF;gBACD,GAAG,EAAE;oBACH,cAAc,EAAE,KAAK;oBACrB,IAAI,EAAE;wBACJ,IAAI,EAAE,WAAW;wBACjB,SAAS,EAAE,cAAc;qBAC1B;iBACF;gBACD,WAAW,EAAE;oBACX,cAAc,EAAE,aAAa;oBAC7B,WAAW,EAAE;wBACX,SAAS,EAAE,GAAG;qBACf;oBACD,IAAI,EAAE;wBACJ,IAAI,EAAE,QAAQ;qBACf;iBACF;aACF;SACF;KACF,CAAC;AAEF,IAAO,IAAM,UAAU,GAA2B;QAChD,cAAc,EAAE,OAAO;QACvB,IAAI,EAAE;YACJ,IAAI,EAAE,WAAW;YACjB,SAAS,EAAE,YAAY;YACvB,eAAe,EAAE;gBACf,IAAI,EAAE;oBACJ,QAAQ,EAAE,IAAI;oBACd,cAAc,EAAE,MAAM;oBACtB,IAAI,EAAE;wBACJ,IAAI,EAAE,QAAQ;qBACf;iBACF;gBACD,OAAO,EAAE;oBACP,cAAc,EAAE,SAAS;oBACzB,IAAI,EAAE;wBACJ,IAAI,EAAE,QAAQ;qBACf;iBACF;gBACD,MAAM,EAAE;oBACN,cAAc,EAAE,QAAQ;oBACxB,IAAI,EAAE;wBACJ,IAAI,EAAE,QAAQ;qBACf;iBACF;gBACD,OAAO,EAAE;oBACP,cAAc,EAAE,SAAS;oBACzB,IAAI,EAAE;wBACJ,IAAI,EAAE,UAAU;wBAChB,OAAO,EAAE;4BACP,IAAI,EAAE;gCACJ,IAAI,EAAE,WAAW;gCACjB,SAAS,EAAE,YAAY;6BACxB;yBACF;qBACF;iBACF;gBACD,UAAU,EAAE;oBACV,cAAc,EAAE,YAAY;oBAC5B,IAAI,EAAE;wBACJ,IAAI,EAAE,WAAW;wBACjB,SAAS,EAAE,iBAAiB;qBAC7B;iBACF;aACF;SACF;KACF,CAAC;AAEF,IAAO,IAAM,kBAAkB,GAA2B;QACxD,cAAc,EAAE,qBAAqB;QACrC,IAAI,EAAE;YACJ,IAAI,EAAE,WAAW;YACjB,SAAS,EAAE,oBAAoB;YAC/B,eAAe,eACV,UAAU,CAAC,IAAI,CAAC,eAAe,CACnC;SACF;KACF,CAAC;AAEF,IAAO,IAAM,aAAa,GAA2B;QACnD,cAAc,EAAE,eAAe;QAC/B,IAAI,EAAE;YACJ,IAAI,EAAE,WAAW;YACjB,SAAS,EAAE,eAAe;YAC1B,eAAe,EAAE;gBACf,KAAK,EAAE;oBACL,cAAc,EAAE,OAAO;oBACvB,IAAI,EAAE;wBACJ,IAAI,EAAE,WAAW;wBACjB,SAAS,EAAE,oBAAoB;qBAChC;iBACF;aACF;SACF;KACF,CAAC;AAEF,IAAO,IAAM,eAAe,GAA2B;QACrD,cAAc,EAAE,iBAAiB;QACjC,IAAI,EAAE;YACJ,IAAI,EAAE,WAAW;YACjB,SAAS,EAAE,iBAAiB;YAC5B,eAAe,EAAE;gBACf,IAAI,EAAE;oBACJ,cAAc,EAAE,MAAM;oBACtB,IAAI,EAAE;wBACJ,IAAI,EAAE,QAAQ;qBACf;iBACF;gBACD,UAAU,EAAE;oBACV,cAAc,EAAE,YAAY;oBAC5B,IAAI,EAAE;wBACJ,IAAI,EAAE,WAAW;wBACjB,SAAS,EAAE,iBAAiB;qBAC7B;iBACF;aACF;SACF;KACF,CAAC;AAEF,IAAO,IAAM,eAAe,GAA2B;QACrD,cAAc,EAAE,iBAAiB;QACjC,IAAI,EAAE;YACJ,IAAI,EAAE,WAAW;YACjB,SAAS,EAAE,iBAAiB;YAC5B,eAAe,EAAE;gBACf,aAAa,EAAE;oBACb,cAAc,EAAE,eAAe;oBAC/B,IAAI,EAAE;wBACJ,IAAI,EAAE,QAAQ;qBACf;iBACF;gBACD,iBAAiB,EAAE;oBACjB,cAAc,EAAE,mBAAmB;oBACnC,IAAI,EAAE;wBACJ,IAAI,EAAE,QAAQ;qBACf;iBACF;aACF;SACF;KACF,CAAC;AAEF,IAAO,IAAM,eAAe,GAA2B;QACrD,cAAc,EAAE,kBAAkB;QAClC,IAAI,EAAE;YACJ,IAAI,EAAE,WAAW;YACjB,SAAS,EAAE,iBAAiB;YAC5B,eAAe,eACV,eAAe,CAAC,IAAI,CAAC,eAAe,CACxC;SACF;KACF,CAAC;AAEF,IAAO,IAAM,QAAQ,GAA2B;QAC9C,cAAc,EAAE,UAAU;QAC1B,IAAI,EAAE;YACJ,IAAI,EAAE,WAAW;YACjB,SAAS,EAAE,UAAU;YACrB,eAAe,EAAE;gBACf,KAAK,EAAE;oBACL,cAAc,EAAE,OAAO;oBACvB,IAAI,EAAE;wBACJ,IAAI,EAAE,QAAQ;qBACf;iBACF;gBACD,QAAQ,EAAE;oBACR,cAAc,EAAE,UAAU;oBAC1B,IAAI,EAAE;wBACJ,IAAI,EAAE,QAAQ;qBACf;iBACF;gBACD,GAAG,EAAE;oBACH,cAAc,EAAE,KAAK;oBACrB,IAAI,EAAE;wBACJ,IAAI,EAAE,QAAQ;qBACf;iBACF;gBACD,MAAM,EAAE;oBACN,cAAc,EAAE,QAAQ;oBACxB,IAAI,EAAE;wBACJ,IAAI,EAAE,QAAQ;qBACf;iBACF;gBACD,MAAM,EAAE;oBACN,cAAc,EAAE,QAAQ;oBACxB,IAAI,EAAE;wBACJ,IAAI,EAAE,SAAS;qBAChB;iBACF;gBACD,cAAc,EAAE;oBACd,cAAc,EAAE,gBAAgB;oBAChC,IAAI,EAAE;wBACJ,IAAI,EAAE,QAAQ;qBACf;iBACF;gBACD,OAAO,EAAE;oBACP,cAAc,EAAE,SAAS;oBACzB,IAAI,EAAE;wBACJ,IAAI,EAAE,WAAW;wBACjB,SAAS,EAAE,iBAAiB;qBAC7B;iBACF;gBACD,UAAU,EAAE;oBACV,cAAc,EAAE,YAAY;oBAC5B,IAAI,EAAE;wBACJ,IAAI,EAAE,QAAQ;qBACf;iBACF;gBACD,aAAa,EAAE;oBACb,cAAc,EAAE,eAAe;oBAC/B,IAAI,EAAE;wBACJ,IAAI,EAAE,UAAU;wBAChB,OAAO,EAAE;4BACP,IAAI,EAAE;gCACJ,IAAI,EAAE,WAAW;gCACjB,SAAS,EAAE,aAAa;6BACzB;yBACF;qBACF;iBACF;aACF;SACF;KACF,CAAC;AAEF,IAAO,IAAM,sBAAsB,GAA2B;QAC5D,cAAc,EAAE,yBAAyB;QACzC,IAAI,EAAE;YACJ,IAAI,EAAE,WAAW;YACjB,SAAS,EAAE,wBAAwB;YACnC,eAAe,eACV,UAAU,CAAC,IAAI,CAAC,eAAe,CACnC;SACF;KACF,CAAC;AAEF,IAAO,IAAM,eAAe,GAA2B;QACrD,cAAc,EAAE,iBAAiB;QACjC,IAAI,EAAE;YACJ,IAAI,EAAE,WAAW;YACjB,SAAS,EAAE,iBAAiB;YAC5B,eAAe,EAAE;gBACf,SAAS,EAAE;oBACT,cAAc,EAAE,WAAW;oBAC3B,IAAI,EAAE;wBACJ,IAAI,EAAE,UAAU;wBAChB,OAAO,EAAE;4BACP,IAAI,EAAE;gCACJ,IAAI,EAAE,QAAQ;6BACf;yBACF;qBACF;iBACF;gBACD,MAAM,EAAE;oBACN,cAAc,EAAE,QAAQ;oBACxB,IAAI,EAAE;wBACJ,IAAI,EAAE,QAAQ;qBACf;iBACF;gBACD,KAAK,EAAE;oBACL,cAAc,EAAE,OAAO;oBACvB,IAAI,EAAE;wBACJ,IAAI,EAAE,QAAQ;qBACf;iBACF;gBACD,EAAE,EAAE;oBACF,cAAc,EAAE,IAAI;oBACpB,IAAI,EAAE;wBACJ,IAAI,EAAE,QAAQ;qBACf;iBACF;gBACD,MAAM,EAAE;oBACN,cAAc,EAAE,QAAQ;oBACxB,IAAI,EAAE;wBACJ,IAAI,EAAE,QAAQ;qBACf;iBACF;gBACD,QAAQ,EAAE;oBACR,cAAc,EAAE,UAAU;oBAC1B,IAAI,EAAE;wBACJ,IAAI,EAAE,UAAU;wBAChB,OAAO,EAAE;4BACP,IAAI,EAAE;gCACJ,IAAI,EAAE,WAAW;gCACjB,SAAS,EAAE,aAAa;6BACzB;yBACF;qBACF;iBACF;gBACD,OAAO,EAAE;oBACP,cAAc,EAAE,SAAS;oBACzB,IAAI,EAAE;wBACJ,IAAI,EAAE,WAAW;wBACjB,SAAS,EAAE,wBAAwB;qBACpC;iBACF;aACF;SACF;KACF,CAAC;AAEF,IAAO,IAAM,mBAAmB,GAA2B;QACzD,cAAc,EAAE,qBAAqB;QACrC,IAAI,EAAE;YACJ,IAAI,EAAE,WAAW;YACjB,SAAS,EAAE,qBAAqB;YAChC,eAAe,EAAE;gBACf,OAAO,EAAE;oBACP,cAAc,EAAE,SAAS;oBACzB,IAAI,EAAE;wBACJ,IAAI,EAAE,UAAU;wBAChB,OAAO,EAAE;4BACP,IAAI,EAAE;gCACJ,IAAI,EAAE,WAAW;gCACjB,SAAS,EAAE,iBAAiB;6BAC7B;yBACF;qBACF;iBACF;aACF;SACF;KACF,CAAC;AAEF,IAAO,IAAM,iBAAiB,GAA2B;QACvD,cAAc,EAAE,mBAAmB;QACnC,IAAI,EAAE;YACJ,IAAI,EAAE,WAAW;YACjB,SAAS,EAAE,mBAAmB;YAC9B,eAAe,EAAE;gBACf,MAAM,EAAE;oBACN,cAAc,EAAE,QAAQ;oBACxB,IAAI,EAAE;wBACJ,IAAI,EAAE,QAAQ;qBACf;iBACF;gBACD,YAAY,EAAE;oBACZ,cAAc,EAAE,cAAc;oBAC9B,WAAW,EAAE;wBACX,SAAS,EAAE,IAAI;qBAChB;oBACD,IAAI,EAAE;wBACJ,IAAI,EAAE,QAAQ;qBACf;iBACF;gBACD,KAAK,EAAE;oBACL,cAAc,EAAE,OAAO;oBACvB,IAAI,EAAE;wBACJ,IAAI,EAAE,QAAQ;qBACf;iBACF;aACF;SACF;KACF,CAAC;AAEF,IAAO,IAAM,kBAAkB,GAA2B;QACxD,cAAc,EAAE,oBAAoB;QACpC,IAAI,EAAE;YACJ,IAAI,EAAE,WAAW;YACjB,SAAS,EAAE,oBAAoB;YAC/B,eAAe,EAAE;gBACf,eAAe,EAAE;oBACf,cAAc,EAAE,iBAAiB;oBACjC,IAAI,EAAE;wBACJ,IAAI,EAAE,UAAU;wBAChB,OAAO,EAAE;4BACP,IAAI,EAAE;gCACJ,IAAI,EAAE,WAAW;gCACjB,SAAS,EAAE,mBAAmB;6BAC/B;yBACF;qBACF;iBACF;aACF;SACF;KACF,CAAC;;;;;;;;;;;;;;;;;;;;;;;;ICxiBF;;;;;;OAMG;;;;;;;;;;;;;;;;;;;;;;;;ICNH;;;;;;;;;AAYA,IAAO,IAAM,IAAI,GAAiC;QAChD,aAAa,EAAE,MAAM;QACrB,MAAM,EAAE;YACN,QAAQ,EAAE,IAAI;YACd,cAAc,EAAE,MAAM;YACtB,IAAI,EAAE;gBACJ,IAAI,EAAE,QAAQ;aACf;SACF;KACF,CAAC;AACF,IAAO,IAAM,eAAe,GAAiC;QAC3D,aAAa,EAAE,iBAAiB;QAChC,MAAM,EAAE;YACN,QAAQ,EAAE,IAAI;YACd,cAAc,EAAE,iBAAiB;YACjC,YAAY,EAAE,EAAE;YAChB,IAAI,EAAE;gBACJ,IAAI,EAAE,QAAQ;aACf;SACF;QACD,YAAY,EAAE,IAAI;KACnB,CAAC;;ICjCF;;;;;;;;;IAgBA;AACA;;;;;QAOE,iBAAY,MAAoC;YAC9C,IAAI,CAAC,MAAM,GAAG,MAAM,CAAC;SACtB;QAuBD,gCAAc,GAAd,UAAe,IAAY,EAAE,qBAAsC,EAAE,OAAwF,EAAE,QAA6D;YAC1N,OAAO,IAAI,CAAC,MAAM,CAAC,oBAAoB,CACrC;gBACE,IAAI,MAAA;gBACJ,qBAAqB,uBAAA;gBACrB,OAAO,SAAA;aACR,EACD,2BAA2B,EAC3B,QAAQ,CAAkD,CAAC;SAC9D;QAuBD,uBAAK,GAAL,UAAM,IAAY,EAAE,YAAuC,EAAE,OAAkE,EAAE,QAAuC;YACtK,OAAO,IAAI,CAAC,MAAM,CAAC,oBAAoB,CACrC;gBACE,IAAI,MAAA;gBACJ,YAAY,cAAA;gBACZ,OAAO,SAAA;aACR,EACD,kBAAkB,EAClB,QAAQ,CAAC,CAAC;SACb;QACH,cAAC;IAAD,CAAC,IAAA;IAED;IACA,IAAM,UAAU,GAAG,IAAIA,iBAAiB,CAAC,OAAO,CAAC,CAAC;IAClD,IAAM,2BAA2B,GAAyB;QACxD,UAAU,EAAE,MAAM;QAClB,IAAI,EAAE,sCAAsC;QAC5C,aAAa,EAAE;YACbC,eAA0B;YAC1BC,IAAe;SAChB;QACD,WAAW,EAAE;YACX,aAAa,EAAE,uBAAuB;YACtC,MAAM,wBACDC,QAAgB,KACnB,QAAQ,EAAE,IAAI,GACf;SACF;QACD,SAAS,EAAE;YACT,GAAG,EAAE;gBACH,UAAU,EAAEC,mBAA2B;aACxC;YACD,OAAO,EAAE;gBACP,UAAU,EAAEC,aAAqB;aAClC;SACF;QACD,UAAU,YAAA;KACX,CAAC;IAEF,IAAM,kBAAkB,GAAyB;QAC/C,UAAU,EAAE,MAAM;QAClB,IAAI,EAAE,6BAA6B;QACnC,aAAa,EAAE;YACbJ,eAA0B;YAC1BC,IAAe;SAChB;QACD,WAAW,EAAE;YACX,aAAa,EAAE,cAAc;YAC7B,MAAM,wBACDI,kBAA0B,KAC7B,QAAQ,EAAE,IAAI,GACf;SACF;QACD,SAAS,EAAE;YACT,GAAG,EAAE,EAAE;YACP,OAAO,EAAE;gBACP,UAAU,EAAED,aAAqB;aAClC;SACF;QACD,UAAU,YAAA;KACX,CAAC;;IC7IF;;;;;;;;;IAYA,IAAM,WAAW,GAAG,2CAA2C,CAAC;IAChE,IAAM,cAAc,GAAG,OAAO,CAAC;AAE/B;QAAkD,gDAAoB;;;;;;;;QAWpE,sCAAY,WAA4C,EAAE,eAAuB,EAAE,OAAqC;YAAxH,iBAuBC;YAtBC,IAAI,eAAe,IAAI,SAAS,EAAE;gBAChC,MAAM,IAAI,KAAK,CAAC,mCAAmC,CAAC,CAAC;aACtD;YACD,IAAI,WAAW,IAAI,SAAS,EAAE;gBAC5B,MAAM,IAAI,KAAK,CAAC,+BAA+B,CAAC,CAAC;aAClD;YAED,IAAI,CAAC,OAAO,EAAE;gBACZ,OAAO,GAAG,EAAE,CAAC;aACd;YAED,IAAI,CAAC,OAAO,CAAC,SAAS,EAAE;gBACtB,IAAM,gBAAgB,GAAGE,+BAA+B,EAAE,CAAC;gBAC3D,OAAO,CAAC,SAAS,GAAM,WAAW,SAAI,cAAc,SAAI,gBAAkB,CAAC;aAC5E;YAED,QAAA,kBAAM,WAAW,EAAE,OAAO,CAAC,SAAC;YAE5B,KAAI,CAAC,OAAO,GAAG,4BAA4B,CAAC;YAC5C,KAAI,CAAC,kBAAkB,GAAG,iCAAiC,CAAC;YAC5D,KAAI,CAAC,eAAe,GAAG,eAAe,CAAC;YACvC,KAAI,CAAC,WAAW,GAAG,WAAW,CAAC;;SAChC;QACH,mCAAC;IAAD,CAAC,CAnCiDC,oBAAoB;;ICftE;;;;;;;;;;QAgBoC,yCAA4B;;;;;;;;QAW9D,+BAAY,WAA4C,EAAE,eAAuB,EAAE,OAAqC;YAAxH,YACE,kBAAM,WAAW,EAAE,eAAe,EAAE,OAAO,CAAC,SAE7C;YADC,KAAI,CAAC,OAAO,GAAG,IAAIC,OAAkB,CAAC,KAAI,CAAC,CAAC;;SAC7C;QACH,4BAAC;IAAD,CAfA,CAAoC,4BAA4B;;;;;;;;;;;;;;;;"}