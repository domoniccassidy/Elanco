/*
 * Copyright (c) Microsoft Corporation. All rights reserved.
 * Licensed under the MIT License. See License.txt in the project root for license information.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 * Changes may cause incorrect behavior and will be lost if the code is regenerated.
 */
(function (global, factory) {
    typeof exports === 'object' && typeof module !== 'undefined' ? factory(exports, require('@azure/ms-rest-js')) :
    typeof define === 'function' && define.amd ? define(['exports', '@azure/ms-rest-js'], factory) :
    (global = global || self, factory((global.Azure = global.Azure || {}, global.Azure.CognitiveservicesQnamakerRuntime = {}), global.msRest));
}(this, (function (exports, msRest) { 'use strict';

    /*! *****************************************************************************
    Copyright (c) Microsoft Corporation.

    Permission to use, copy, modify, and/or distribute this software for any
    purpose with or without fee is hereby granted.

    THE SOFTWARE IS PROVIDED "AS IS" AND THE AUTHOR DISCLAIMS ALL WARRANTIES WITH
    REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY
    AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY SPECIAL, DIRECT,
    INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM
    LOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR
    OTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR
    PERFORMANCE OF THIS SOFTWARE.
    ***************************************************************************** */
    /* global Reflect, Promise */

    var extendStatics = function(d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };

    function __extends(d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    }

    var __assign = function() {
        __assign = Object.assign || function __assign(t) {
            for (var s, i = 1, n = arguments.length; i < n; i++) {
                s = arguments[i];
                for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];
            }
            return t;
        };
        return __assign.apply(this, arguments);
    };

    /*
     * Copyright (c) Microsoft Corporation. All rights reserved.
     * Licensed under the MIT License. See License.txt in the project root for license information.
     *
     * Code generated by Microsoft (R) AutoRest Code Generator.
     * Changes may cause incorrect behavior and will be lost if the code is regenerated.
     */

    var index = /*#__PURE__*/Object.freeze({
        __proto__: null
    });

    /*
     * Copyright (c) Microsoft Corporation. All rights reserved.
     * Licensed under the MIT License. See License.txt in the project root for license information.
     *
     * Code generated by Microsoft (R) AutoRest Code Generator.
     * Changes may cause incorrect behavior and will be lost if the code is regenerated.
     */
    var MetadataDTO = {
        serializedName: "MetadataDTO",
        type: {
            name: "Composite",
            className: "MetadataDTO",
            modelProperties: {
                name: {
                    required: true,
                    serializedName: "name",
                    constraints: {
                        MaxLength: 100,
                        MinLength: 1
                    },
                    type: {
                        name: "String"
                    }
                },
                value: {
                    required: true,
                    serializedName: "value",
                    constraints: {
                        MaxLength: 500,
                        MinLength: 1
                    },
                    type: {
                        name: "String"
                    }
                }
            }
        }
    };
    var ContextDTO = {
        serializedName: "ContextDTO",
        type: {
            name: "Composite",
            className: "ContextDTO",
            modelProperties: {
                isContextOnly: {
                    serializedName: "isContextOnly",
                    type: {
                        name: "Boolean"
                    }
                },
                prompts: {
                    serializedName: "prompts",
                    constraints: {
                        MaxItems: 20
                    },
                    type: {
                        name: "Sequence",
                        element: {
                            type: {
                                name: "Composite",
                                className: "PromptDTO"
                            }
                        }
                    }
                }
            }
        }
    };
    var QnADTOContext = {
        serializedName: "QnADTO_context",
        type: {
            name: "Composite",
            className: "QnADTOContext",
            modelProperties: __assign({}, ContextDTO.type.modelProperties)
        }
    };
    var QnADTO = {
        serializedName: "QnADTO",
        type: {
            name: "Composite",
            className: "QnADTO",
            modelProperties: {
                id: {
                    serializedName: "id",
                    type: {
                        name: "Number"
                    }
                },
                answer: {
                    required: true,
                    serializedName: "answer",
                    constraints: {
                        MaxLength: 25000,
                        MinLength: 1
                    },
                    type: {
                        name: "String"
                    }
                },
                source: {
                    serializedName: "source",
                    constraints: {
                        MaxLength: 300
                    },
                    type: {
                        name: "String"
                    }
                },
                questions: {
                    required: true,
                    serializedName: "questions",
                    type: {
                        name: "Sequence",
                        element: {
                            type: {
                                name: "String"
                            }
                        }
                    }
                },
                metadata: {
                    serializedName: "metadata",
                    type: {
                        name: "Sequence",
                        element: {
                            type: {
                                name: "Composite",
                                className: "MetadataDTO"
                            }
                        }
                    }
                },
                context: {
                    serializedName: "context",
                    type: {
                        name: "Composite",
                        className: "QnADTOContext"
                    }
                }
            }
        }
    };
    var PromptDTOQna = {
        serializedName: "PromptDTO_qna",
        type: {
            name: "Composite",
            className: "PromptDTOQna",
            modelProperties: __assign({}, QnADTO.type.modelProperties)
        }
    };
    var PromptDTO = {
        serializedName: "PromptDTO",
        type: {
            name: "Composite",
            className: "PromptDTO",
            modelProperties: {
                displayOrder: {
                    serializedName: "displayOrder",
                    type: {
                        name: "Number"
                    }
                },
                qnaId: {
                    serializedName: "qnaId",
                    type: {
                        name: "Number"
                    }
                },
                qna: {
                    serializedName: "qna",
                    type: {
                        name: "Composite",
                        className: "PromptDTOQna"
                    }
                },
                displayText: {
                    serializedName: "displayText",
                    constraints: {
                        MaxLength: 200
                    },
                    type: {
                        name: "String"
                    }
                }
            }
        }
    };
    var ErrorModel = {
        serializedName: "Error",
        type: {
            name: "Composite",
            className: "ErrorModel",
            modelProperties: {
                code: {
                    required: true,
                    serializedName: "code",
                    type: {
                        name: "String"
                    }
                },
                message: {
                    serializedName: "message",
                    type: {
                        name: "String"
                    }
                },
                target: {
                    serializedName: "target",
                    type: {
                        name: "String"
                    }
                },
                details: {
                    serializedName: "details",
                    type: {
                        name: "Sequence",
                        element: {
                            type: {
                                name: "Composite",
                                className: "ErrorModel"
                            }
                        }
                    }
                },
                innerError: {
                    serializedName: "innerError",
                    type: {
                        name: "Composite",
                        className: "InnerErrorModel"
                    }
                }
            }
        }
    };
    var ErrorResponseError = {
        serializedName: "ErrorResponse_error",
        type: {
            name: "Composite",
            className: "ErrorResponseError",
            modelProperties: __assign({}, ErrorModel.type.modelProperties)
        }
    };
    var ErrorResponse = {
        serializedName: "ErrorResponse",
        type: {
            name: "Composite",
            className: "ErrorResponse",
            modelProperties: {
                error: {
                    serializedName: "error",
                    type: {
                        name: "Composite",
                        className: "ErrorResponseError"
                    }
                }
            }
        }
    };
    var InnerErrorModel = {
        serializedName: "InnerErrorModel",
        type: {
            name: "Composite",
            className: "InnerErrorModel",
            modelProperties: {
                code: {
                    serializedName: "code",
                    type: {
                        name: "String"
                    }
                },
                innerError: {
                    serializedName: "innerError",
                    type: {
                        name: "Composite",
                        className: "InnerErrorModel"
                    }
                }
            }
        }
    };
    var QueryContextDTO = {
        serializedName: "QueryContextDTO",
        type: {
            name: "Composite",
            className: "QueryContextDTO",
            modelProperties: {
                previousQnaId: {
                    serializedName: "previousQnaId",
                    type: {
                        name: "String"
                    }
                },
                previousUserQuery: {
                    serializedName: "previousUserQuery",
                    type: {
                        name: "String"
                    }
                }
            }
        }
    };
    var QueryDTOContext = {
        serializedName: "QueryDTO_context",
        type: {
            name: "Composite",
            className: "QueryDTOContext",
            modelProperties: __assign({}, QueryContextDTO.type.modelProperties)
        }
    };
    var QueryDTO = {
        serializedName: "QueryDTO",
        type: {
            name: "Composite",
            className: "QueryDTO",
            modelProperties: {
                qnaId: {
                    serializedName: "qnaId",
                    type: {
                        name: "String"
                    }
                },
                question: {
                    serializedName: "question",
                    type: {
                        name: "String"
                    }
                },
                top: {
                    serializedName: "top",
                    type: {
                        name: "Number"
                    }
                },
                userId: {
                    serializedName: "userId",
                    type: {
                        name: "String"
                    }
                },
                isTest: {
                    serializedName: "isTest",
                    type: {
                        name: "Boolean"
                    }
                },
                scoreThreshold: {
                    serializedName: "scoreThreshold",
                    type: {
                        name: "Number"
                    }
                },
                context: {
                    serializedName: "context",
                    type: {
                        name: "Composite",
                        className: "QueryDTOContext"
                    }
                },
                rankerType: {
                    serializedName: "rankerType",
                    type: {
                        name: "String"
                    }
                },
                strictFilters: {
                    serializedName: "strictFilters",
                    type: {
                        name: "Sequence",
                        element: {
                            type: {
                                name: "Composite",
                                className: "MetadataDTO"
                            }
                        }
                    }
                }
            }
        }
    };
    var QnASearchResultContext = {
        serializedName: "QnASearchResult_context",
        type: {
            name: "Composite",
            className: "QnASearchResultContext",
            modelProperties: __assign({}, ContextDTO.type.modelProperties)
        }
    };
    var QnASearchResult = {
        serializedName: "QnASearchResult",
        type: {
            name: "Composite",
            className: "QnASearchResult",
            modelProperties: {
                questions: {
                    serializedName: "questions",
                    type: {
                        name: "Sequence",
                        element: {
                            type: {
                                name: "String"
                            }
                        }
                    }
                },
                answer: {
                    serializedName: "answer",
                    type: {
                        name: "String"
                    }
                },
                score: {
                    serializedName: "score",
                    type: {
                        name: "Number"
                    }
                },
                id: {
                    serializedName: "id",
                    type: {
                        name: "Number"
                    }
                },
                source: {
                    serializedName: "source",
                    type: {
                        name: "String"
                    }
                },
                metadata: {
                    serializedName: "metadata",
                    type: {
                        name: "Sequence",
                        element: {
                            type: {
                                name: "Composite",
                                className: "MetadataDTO"
                            }
                        }
                    }
                },
                context: {
                    serializedName: "context",
                    type: {
                        name: "Composite",
                        className: "QnASearchResultContext"
                    }
                }
            }
        }
    };
    var QnASearchResultList = {
        serializedName: "QnASearchResultList",
        type: {
            name: "Composite",
            className: "QnASearchResultList",
            modelProperties: {
                answers: {
                    serializedName: "answers",
                    type: {
                        name: "Sequence",
                        element: {
                            type: {
                                name: "Composite",
                                className: "QnASearchResult"
                            }
                        }
                    }
                }
            }
        }
    };
    var FeedbackRecordDTO = {
        serializedName: "FeedbackRecordDTO",
        type: {
            name: "Composite",
            className: "FeedbackRecordDTO",
            modelProperties: {
                userId: {
                    serializedName: "userId",
                    type: {
                        name: "String"
                    }
                },
                userQuestion: {
                    serializedName: "userQuestion",
                    constraints: {
                        MaxLength: 1000
                    },
                    type: {
                        name: "String"
                    }
                },
                qnaId: {
                    serializedName: "qnaId",
                    type: {
                        name: "Number"
                    }
                }
            }
        }
    };
    var FeedbackRecordsDTO = {
        serializedName: "FeedbackRecordsDTO",
        type: {
            name: "Composite",
            className: "FeedbackRecordsDTO",
            modelProperties: {
                feedbackRecords: {
                    serializedName: "feedbackRecords",
                    type: {
                        name: "Sequence",
                        element: {
                            type: {
                                name: "Composite",
                                className: "FeedbackRecordDTO"
                            }
                        }
                    }
                }
            }
        }
    };

    var mappers = /*#__PURE__*/Object.freeze({
        __proto__: null,
        MetadataDTO: MetadataDTO,
        ContextDTO: ContextDTO,
        QnADTOContext: QnADTOContext,
        QnADTO: QnADTO,
        PromptDTOQna: PromptDTOQna,
        PromptDTO: PromptDTO,
        ErrorModel: ErrorModel,
        ErrorResponseError: ErrorResponseError,
        ErrorResponse: ErrorResponse,
        InnerErrorModel: InnerErrorModel,
        QueryContextDTO: QueryContextDTO,
        QueryDTOContext: QueryDTOContext,
        QueryDTO: QueryDTO,
        QnASearchResultContext: QnASearchResultContext,
        QnASearchResult: QnASearchResult,
        QnASearchResultList: QnASearchResultList,
        FeedbackRecordDTO: FeedbackRecordDTO,
        FeedbackRecordsDTO: FeedbackRecordsDTO
    });

    /*
     * Copyright (c) Microsoft Corporation. All rights reserved.
     * Licensed under the MIT License. See License.txt in the project root for license information.
     *
     * Code generated by Microsoft (R) AutoRest Code Generator.
     * Changes may cause incorrect behavior and will be lost if the code is regenerated.
     */

    var Mappers = /*#__PURE__*/Object.freeze({
        __proto__: null,
        ContextDTO: ContextDTO,
        ErrorModel: ErrorModel,
        ErrorResponse: ErrorResponse,
        ErrorResponseError: ErrorResponseError,
        FeedbackRecordDTO: FeedbackRecordDTO,
        FeedbackRecordsDTO: FeedbackRecordsDTO,
        InnerErrorModel: InnerErrorModel,
        MetadataDTO: MetadataDTO,
        PromptDTO: PromptDTO,
        PromptDTOQna: PromptDTOQna,
        QnADTO: QnADTO,
        QnADTOContext: QnADTOContext,
        QnASearchResult: QnASearchResult,
        QnASearchResultContext: QnASearchResultContext,
        QnASearchResultList: QnASearchResultList,
        QueryContextDTO: QueryContextDTO,
        QueryDTO: QueryDTO,
        QueryDTOContext: QueryDTOContext
    });

    /*
     * Copyright (c) Microsoft Corporation. All rights reserved.
     * Licensed under the MIT License. See License.txt in the project root for
     * license information.
     *
     * Code generated by Microsoft (R) AutoRest Code Generator.
     * Changes may cause incorrect behavior and will be lost if the code is
     * regenerated.
     */
    var kbId = {
        parameterPath: "kbId",
        mapper: {
            required: true,
            serializedName: "kbId",
            type: {
                name: "String"
            }
        }
    };
    var runtimeEndpoint = {
        parameterPath: "runtimeEndpoint",
        mapper: {
            required: true,
            serializedName: "RuntimeEndpoint",
            defaultValue: '',
            type: {
                name: "String"
            }
        },
        skipEncoding: true
    };

    /*
     * Copyright (c) Microsoft Corporation. All rights reserved.
     * Licensed under the MIT License. See License.txt in the project root for
     * license information.
     *
     * Code generated by Microsoft (R) AutoRest Code Generator.
     * Changes may cause incorrect behavior and will be lost if the code is
     * regenerated.
     */
    /** Class representing a Runtime. */
    var Runtime = /** @class */ (function () {
        /**
         * Create a Runtime.
         * @param {QnAMakerRuntimeClientContext} client Reference to the service client.
         */
        function Runtime(client) {
            this.client = client;
        }
        Runtime.prototype.generateAnswer = function (kbId, generateAnswerPayload, options, callback) {
            return this.client.sendOperationRequest({
                kbId: kbId,
                generateAnswerPayload: generateAnswerPayload,
                options: options
            }, generateAnswerOperationSpec, callback);
        };
        Runtime.prototype.train = function (kbId, trainPayload, options, callback) {
            return this.client.sendOperationRequest({
                kbId: kbId,
                trainPayload: trainPayload,
                options: options
            }, trainOperationSpec, callback);
        };
        return Runtime;
    }());
    // Operation Specifications
    var serializer = new msRest.Serializer(Mappers);
    var generateAnswerOperationSpec = {
        httpMethod: "POST",
        path: "knowledgebases/{kbId}/generateAnswer",
        urlParameters: [
            runtimeEndpoint,
            kbId
        ],
        requestBody: {
            parameterPath: "generateAnswerPayload",
            mapper: __assign(__assign({}, QueryDTO), { required: true })
        },
        responses: {
            200: {
                bodyMapper: QnASearchResultList
            },
            default: {
                bodyMapper: ErrorResponse
            }
        },
        serializer: serializer
    };
    var trainOperationSpec = {
        httpMethod: "POST",
        path: "knowledgebases/{kbId}/train",
        urlParameters: [
            runtimeEndpoint,
            kbId
        ],
        requestBody: {
            parameterPath: "trainPayload",
            mapper: __assign(__assign({}, FeedbackRecordsDTO), { required: true })
        },
        responses: {
            204: {},
            default: {
                bodyMapper: ErrorResponse
            }
        },
        serializer: serializer
    };

    /*
     * Copyright (c) Microsoft Corporation. All rights reserved.
     * Licensed under the MIT License. See License.txt in the project root for
     * license information.
     *
     * Code generated by Microsoft (R) AutoRest Code Generator.
     * Changes may cause incorrect behavior and will be lost if the code is
     * regenerated.
     */
    var packageName = "@azure/cognitiveservices-qnamaker-runtime";
    var packageVersion = "1.0.1";
    var QnAMakerRuntimeClientContext = /** @class */ (function (_super) {
        __extends(QnAMakerRuntimeClientContext, _super);
        /**
         * Initializes a new instance of the QnAMakerRuntimeClientContext class.
         * @param runtimeEndpoint QnA Maker App Service endpoint (for example:
         * https://{qnaservice-hostname}.azurewebsites.net).
         * @param credentials Subscription credentials which uniquely identify client subscription.
         * @param [options] The parameter options
         */
        function QnAMakerRuntimeClientContext(credentials, runtimeEndpoint, options) {
            var _this = this;
            if (runtimeEndpoint == undefined) {
                throw new Error("'runtimeEndpoint' cannot be null.");
            }
            if (credentials == undefined) {
                throw new Error("'credentials' cannot be null.");
            }
            if (!options) {
                options = {};
            }
            if (!options.userAgent) {
                var defaultUserAgent = msRest.getDefaultUserAgentValue();
                options.userAgent = packageName + "/" + packageVersion + " " + defaultUserAgent;
            }
            _this = _super.call(this, credentials, options) || this;
            _this.baseUri = "{RuntimeEndpoint}/qnamaker";
            _this.requestContentType = "application/json; charset=utf-8";
            _this.runtimeEndpoint = runtimeEndpoint;
            _this.credentials = credentials;
            return _this;
        }
        return QnAMakerRuntimeClientContext;
    }(msRest.ServiceClient));

    /*
     * Copyright (c) Microsoft Corporation. All rights reserved.
     * Licensed under the MIT License. See License.txt in the project root for
     * license information.
     *
     * Code generated by Microsoft (R) AutoRest Code Generator.
     * Changes may cause incorrect behavior and will be lost if the code is
     * regenerated.
     */
    var QnAMakerRuntimeClient = /** @class */ (function (_super) {
        __extends(QnAMakerRuntimeClient, _super);
        /**
         * Initializes a new instance of the QnAMakerRuntimeClient class.
         * @param runtimeEndpoint QnA Maker App Service endpoint (for example:
         * https://{qnaservice-hostname}.azurewebsites.net).
         * @param credentials Subscription credentials which uniquely identify client subscription.
         * @param [options] The parameter options
         */
        function QnAMakerRuntimeClient(credentials, runtimeEndpoint, options) {
            var _this = _super.call(this, credentials, runtimeEndpoint, options) || this;
            _this.runtime = new Runtime(_this);
            return _this;
        }
        return QnAMakerRuntimeClient;
    }(QnAMakerRuntimeClientContext));

    exports.QnAMakerRuntimeClient = QnAMakerRuntimeClient;
    exports.QnAMakerRuntimeClientContext = QnAMakerRuntimeClientContext;
    exports.QnAMakerRuntimeMappers = mappers;
    exports.QnAMakerRuntimeModels = index;
    exports.Runtime = Runtime;

    Object.defineProperty(exports, '__esModule', { value: true });

})));
//# sourceMappingURL=cognitiveservices-qnamaker-runtime.js.map
